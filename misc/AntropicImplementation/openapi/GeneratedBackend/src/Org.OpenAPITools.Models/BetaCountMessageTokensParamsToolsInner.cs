/*
 * Anthropic API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class BetaCountMessageTokensParamsToolsInner 
    {

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum CustomEnum for custom
            /// </summary>
            [EnumMember(Value = "custom")]
            CustomEnum = 1,
            
            /// <summary>
            /// Enum Computer20241022Enum for computer_20241022
            /// </summary>
            [EnumMember(Value = "computer_20241022")]
            Computer20241022Enum = 2,
            
            /// <summary>
            /// Enum Bash20241022Enum for bash_20241022
            /// </summary>
            [EnumMember(Value = "bash_20241022")]
            Bash20241022Enum = 3,
            
            /// <summary>
            /// Enum TextEditor20241022Enum for text_editor_20241022
            /// </summary>
            [EnumMember(Value = "text_editor_20241022")]
            TextEditor20241022Enum = 4
        }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; }

        /// <summary>
        /// Description of what this tool does.  Tool descriptions should be as detailed as possible. The more information that the model has about what the tool is and how to use it, the better it will perform. You can use natural language descriptions to reinforce important aspects of the tool input JSON schema.
        /// </summary>
        /// <value>Description of what this tool does.  Tool descriptions should be as detailed as possible. The more information that the model has about what the tool is and how to use it, the better it will perform. You can use natural language descriptions to reinforce important aspects of the tool input JSON schema.</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string? Description { get; set; }


        /// <summary>
        /// Name of the tool.  This is how the tool will be called by the model and in tool_use blocks.
        /// </summary>
        /// <value>Name of the tool.  This is how the tool will be called by the model and in tool_use blocks.</value>
        
        public enum NameEnum
        {
            
            /// <summary>
            /// Enum StrReplaceEditorEnum for str_replace_editor
            /// </summary>
            [EnumMember(Value = "str_replace_editor")]
            StrReplaceEditorEnum = 1
        }

        /// <summary>
        /// Name of the tool.  This is how the tool will be called by the model and in tool_use blocks.
        /// </summary>
        /// <value>Name of the tool.  This is how the tool will be called by the model and in tool_use blocks.</value>
        [Required]
        [DataMember(Name="name", EmitDefaultValue=true)]
        public NameEnum Name { get; set; }

        /// <summary>
        /// [JSON schema](https://json-schema.org/) for this tool&#39;s input.  This defines the shape of the &#x60;input&#x60; that your tool accepts and that the model will produce.
        /// </summary>
        /// <value>[JSON schema](https://json-schema.org/) for this tool&#39;s input.  This defines the shape of the &#x60;input&#x60; that your tool accepts and that the model will produce.</value>
        [Required]
        [DataMember(Name="input_schema", EmitDefaultValue=false)]
        public BetaInputSchema InputSchema { get; set; }

        /// <summary>
        /// Gets or Sets CacheControl
        /// </summary>
        [DataMember(Name="cache_control", EmitDefaultValue=false)]
        public BetaCacheControlEphemeral? CacheControl { get; set; }

        /// <summary>
        /// The height of the display in pixels.
        /// </summary>
        /// <value>The height of the display in pixels.</value>
        [Required]
        [DataMember(Name="display_height_px", EmitDefaultValue=true)]
        public int DisplayHeightPx { get; set; }

        /// <summary>
        /// The width of the display in pixels.
        /// </summary>
        /// <value>The width of the display in pixels.</value>
        [Required]
        [DataMember(Name="display_width_px", EmitDefaultValue=true)]
        public int DisplayWidthPx { get; set; }

        /// <summary>
        /// Gets or Sets DisplayNumber
        /// </summary>
        [DataMember(Name="display_number", EmitDefaultValue=true)]
        public int? DisplayNumber { get; set; }

    }
}
