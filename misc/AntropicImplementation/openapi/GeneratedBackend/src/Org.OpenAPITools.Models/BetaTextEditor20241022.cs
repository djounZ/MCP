/*
 * Anthropic API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class BetaTextEditor20241022 
    {
        /// <summary>
        /// Gets or Sets CacheControl
        /// </summary>
        [DataMember(Name="cache_control", EmitDefaultValue=true)]
        public BetaCacheControlEphemeral CacheControl { get; set; }


        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum TextEditor20241022Enum for text_editor_20241022
            /// </summary>
            [EnumMember(Value = "text_editor_20241022")]
            TextEditor20241022Enum = 1
        }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; }


        /// <summary>
        /// Name of the tool.  This is how the tool will be called by the model and in tool_use blocks.
        /// </summary>
        /// <value>Name of the tool.  This is how the tool will be called by the model and in tool_use blocks.</value>
        
        public enum NameEnum
        {
            
            /// <summary>
            /// Enum StrReplaceEditorEnum for str_replace_editor
            /// </summary>
            [EnumMember(Value = "str_replace_editor")]
            StrReplaceEditorEnum = 1
        }

        /// <summary>
        /// Name of the tool.  This is how the tool will be called by the model and in tool_use blocks.
        /// </summary>
        /// <value>Name of the tool.  This is how the tool will be called by the model and in tool_use blocks.</value>
        [Required]
        [DataMember(Name="name", EmitDefaultValue=true)]
        public NameEnum Name { get; set; }

    }
}
