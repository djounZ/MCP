/*
 * Anthropic API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using JsonSubTypes;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    [JsonSubtypes.KnownSubType(typeof(PromptCachingBetaRequestImageBlock), "image")]
    [JsonSubtypes.KnownSubType(typeof(PromptCachingBetaRequestTextBlock), "text")]
    public partial class Block3 
    {
        /// <summary>
        /// Gets or Sets CacheControl
        /// </summary>
        [DataMember(Name="cache_control", EmitDefaultValue=false)]
        public CacheControlEphemeral? CacheControl { get; set; }


        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum TextEnum for text
            /// </summary>
            [EnumMember(Value = "text")]
            TextEnum = 1,
            
            /// <summary>
            /// Enum ImageEnum for image
            /// </summary>
            [EnumMember(Value = "image")]
            ImageEnum = 2
        }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; }

        /// <summary>
        /// Gets or Sets Text
        /// </summary>
        [Required]
        [MinLength(1)]
        [DataMember(Name="text", EmitDefaultValue=false)]
        public string Text { get; set; }

        /// <summary>
        /// Gets or Sets Source
        /// </summary>
        [Required]
        [DataMember(Name="source", EmitDefaultValue=false)]
        public Base64ImageSource Source { get; set; }

    }
}
