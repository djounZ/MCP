/*
 * Anthropic API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using JsonSubTypes;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    [JsonSubtypes.KnownSubType(typeof(ContentBlockDeltaEvent), "content_block_delta")]
    [JsonSubtypes.KnownSubType(typeof(ContentBlockStartEvent), "content_block_start")]
    [JsonSubtypes.KnownSubType(typeof(ContentBlockStopEvent), "content_block_stop")]
    [JsonSubtypes.KnownSubType(typeof(MessageDeltaEvent), "message_delta")]
    [JsonSubtypes.KnownSubType(typeof(MessageStartEvent), "message_start")]
    [JsonSubtypes.KnownSubType(typeof(MessageStopEvent), "message_stop")]
    public partial class MessageStreamEvent 
    {

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum MessageStartEnum for message_start
            /// </summary>
            [EnumMember(Value = "message_start")]
            MessageStartEnum = 1,
            
            /// <summary>
            /// Enum MessageDeltaEnum for message_delta
            /// </summary>
            [EnumMember(Value = "message_delta")]
            MessageDeltaEnum = 2,
            
            /// <summary>
            /// Enum MessageStopEnum for message_stop
            /// </summary>
            [EnumMember(Value = "message_stop")]
            MessageStopEnum = 3,
            
            /// <summary>
            /// Enum ContentBlockStartEnum for content_block_start
            /// </summary>
            [EnumMember(Value = "content_block_start")]
            ContentBlockStartEnum = 4,
            
            /// <summary>
            /// Enum ContentBlockDeltaEnum for content_block_delta
            /// </summary>
            [EnumMember(Value = "content_block_delta")]
            ContentBlockDeltaEnum = 5,
            
            /// <summary>
            /// Enum ContentBlockStopEnum for content_block_stop
            /// </summary>
            [EnumMember(Value = "content_block_stop")]
            ContentBlockStopEnum = 6
        }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; } = TypeEnum.MessageStartEnum;

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [Required]
        [DataMember(Name="message", EmitDefaultValue=false)]
        public Message Message { get; set; }

        /// <summary>
        /// Gets or Sets Delta
        /// </summary>
        [Required]
        [DataMember(Name="delta", EmitDefaultValue=false)]
        public Delta1 Delta { get; set; }

        /// <summary>
        /// Billing and rate-limit usage.  Anthropic&#39;s API bills and rate-limits by token counts, as tokens represent the underlying cost to our systems.  Under the hood, the API transforms requests into a format suitable for the model. The model&#39;s output then goes through a parsing stage before becoming an API response. As a result, the token counts in &#x60;usage&#x60; will not match one-to-one with the exact visible content of an API request or response.  For example, &#x60;output_tokens&#x60; will be non-zero, even for an empty string response from Claude.
        /// </summary>
        /// <value>Billing and rate-limit usage.  Anthropic&#39;s API bills and rate-limits by token counts, as tokens represent the underlying cost to our systems.  Under the hood, the API transforms requests into a format suitable for the model. The model&#39;s output then goes through a parsing stage before becoming an API response. As a result, the token counts in &#x60;usage&#x60; will not match one-to-one with the exact visible content of an API request or response.  For example, &#x60;output_tokens&#x60; will be non-zero, even for an empty string response from Claude.</value>
        [Required]
        [DataMember(Name="usage", EmitDefaultValue=false)]
        public MessageDeltaUsage Usage { get; set; }

        /// <summary>
        /// Gets or Sets Index
        /// </summary>
        [Required]
        [DataMember(Name="index", EmitDefaultValue=true)]
        public int Index { get; set; }

        /// <summary>
        /// Gets or Sets ContentBlock
        /// </summary>
        [Required]
        [DataMember(Name="content_block", EmitDefaultValue=false)]
        public ContentBlock1 ContentBlock { get; set; }

    }
}
