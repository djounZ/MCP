/*
 * Mistral AI API
 *
 * Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class Agent 
    {
        /// <summary>
        /// Gets or Sets Instructions
        /// </summary>
        [DataMember(Name="instructions", EmitDefaultValue=true)]
        public string? Instructions { get; set; }

        /// <summary>
        /// List of tools which are available to the model during the conversation.
        /// </summary>
        /// <value>List of tools which are available to the model during the conversation.</value>
        [DataMember(Name="tools", EmitDefaultValue=false)]
        public List<AgentToolsInner> Tools { get; set; }

        /// <summary>
        /// Completion arguments that will be used to generate assistant responses. Can be overridden at each message request.
        /// </summary>
        /// <value>Completion arguments that will be used to generate assistant responses. Can be overridden at each message request.</value>
        [DataMember(Name="completion_args", EmitDefaultValue=false)]
        public CompletionArgs? CompletionArgs { get; set; }

        /// <summary>
        /// Gets or Sets Model
        /// </summary>
        [Required]
        [DataMember(Name="model", EmitDefaultValue=false)]
        public string Model { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [Required]
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=true)]
        public string? Description { get; set; }

        /// <summary>
        /// Gets or Sets Handoffs
        /// </summary>
        [DataMember(Name="handoffs", EmitDefaultValue=true)]
        public List<string> Handoffs { get; set; }


        /// <summary>
        /// Gets or Sets Object
        /// </summary>
        
        public enum ObjectEnum
        {
            
            /// <summary>
            /// Enum AgentEnum for agent
            /// </summary>
            [EnumMember(Value = "agent")]
            AgentEnum = 1
        }

        /// <summary>
        /// Gets or Sets Object
        /// </summary>
        [DataMember(Name="object", EmitDefaultValue=true)]
        public ObjectEnum Object { get; set; } = ObjectEnum.AgentEnum;

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [Required]
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets VarVersion
        /// </summary>
        [Required]
        [DataMember(Name="version", EmitDefaultValue=true)]
        public int VarVersion { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [Required]
        [DataMember(Name="created_at", EmitDefaultValue=true)]
        public DateTimeOffset CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAt
        /// </summary>
        [Required]
        [DataMember(Name="updated_at", EmitDefaultValue=true)]
        public DateTimeOffset UpdatedAt { get; set; }

    }
}
