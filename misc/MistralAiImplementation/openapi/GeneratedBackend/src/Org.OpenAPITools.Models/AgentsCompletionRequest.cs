/*
 * Mistral AI API
 *
 * Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class AgentsCompletionRequest 
    {
        /// <summary>
        /// Gets or Sets MaxTokens
        /// </summary>
        [DataMember(Name="max_tokens", EmitDefaultValue=true)]
        public int? MaxTokens { get; set; }

        /// <summary>
        /// Whether to stream back partial progress. If set, tokens will be sent as data-only server-side events as they become available, with the stream terminated by a data: [DONE] message. Otherwise, the server will hold the request open until the timeout or until completion, with the response containing the full result as JSON.
        /// </summary>
        /// <value>Whether to stream back partial progress. If set, tokens will be sent as data-only server-side events as they become available, with the stream terminated by a data: [DONE] message. Otherwise, the server will hold the request open until the timeout or until completion, with the response containing the full result as JSON.</value>
        [DataMember(Name="stream", EmitDefaultValue=true)]
        public bool? Stream { get; set; } = false;

        /// <summary>
        /// Gets or Sets Stop
        /// </summary>
        [DataMember(Name="stop", EmitDefaultValue=false)]
        public Stop? Stop { get; set; }

        /// <summary>
        /// Gets or Sets RandomSeed
        /// </summary>
        [DataMember(Name="random_seed", EmitDefaultValue=true)]
        public int? RandomSeed { get; set; }

        /// <summary>
        /// The prompt(s) to generate completions for, encoded as a list of dict with role and content.
        /// </summary>
        /// <value>The prompt(s) to generate completions for, encoded as a list of dict with role and content.</value>
        [Required]
        [DataMember(Name="messages", EmitDefaultValue=false)]
        public List<ChatCompletionRequestMessagesInner> Messages { get; set; }

        /// <summary>
        /// Gets or Sets ResponseFormat
        /// </summary>
        [DataMember(Name="response_format", EmitDefaultValue=false)]
        public ResponseFormat? ResponseFormat { get; set; }

        /// <summary>
        /// Gets or Sets Tools
        /// </summary>
        [DataMember(Name="tools", EmitDefaultValue=true)]
        public List<Tool> Tools { get; set; }

        /// <summary>
        /// Gets or Sets ToolChoice
        /// </summary>
        [DataMember(Name="tool_choice", EmitDefaultValue=false)]
        public ToolChoice? ToolChoice { get; set; }

        /// <summary>
        /// presence_penalty determines how much the model penalizes the repetition of words or phrases. A higher presence penalty encourages the model to use a wider variety of words and phrases, making the output more diverse and creative.
        /// </summary>
        /// <value>presence_penalty determines how much the model penalizes the repetition of words or phrases. A higher presence penalty encourages the model to use a wider variety of words and phrases, making the output more diverse and creative.</value>
        [Range(-2, 2)]
        [DataMember(Name="presence_penalty", EmitDefaultValue=true)]
        public decimal? PresencePenalty { get; set; } = 0M;

        /// <summary>
        /// frequency_penalty penalizes the repetition of words based on their frequency in the generated text. A higher frequency penalty discourages the model from repeating words that have already appeared frequently in the output, promoting diversity and reducing repetition.
        /// </summary>
        /// <value>frequency_penalty penalizes the repetition of words based on their frequency in the generated text. A higher frequency penalty discourages the model from repeating words that have already appeared frequently in the output, promoting diversity and reducing repetition.</value>
        [Range(-2, 2)]
        [DataMember(Name="frequency_penalty", EmitDefaultValue=true)]
        public decimal? FrequencyPenalty { get; set; } = 0M;

        /// <summary>
        /// Gets or Sets N
        /// </summary>
        [DataMember(Name="n", EmitDefaultValue=true)]
        public int? N { get; set; }

        /// <summary>
        /// Enable users to specify expected results, optimizing response times by leveraging known or predictable content. This approach is especially effective for updating text documents or code files with minimal changes, reducing latency while maintaining high-quality results.
        /// </summary>
        /// <value>Enable users to specify expected results, optimizing response times by leveraging known or predictable content. This approach is especially effective for updating text documents or code files with minimal changes, reducing latency while maintaining high-quality results.</value>
        [DataMember(Name="prediction", EmitDefaultValue=false)]
        public Prediction? Prediction { get; set; }

        /// <summary>
        /// Gets or Sets ParallelToolCalls
        /// </summary>
        [DataMember(Name="parallel_tool_calls", EmitDefaultValue=true)]
        public bool? ParallelToolCalls { get; set; } = true;

        /// <summary>
        /// Gets or Sets PromptMode
        /// </summary>
        [DataMember(Name="prompt_mode", EmitDefaultValue=true)]
        public MistralPromptMode? PromptMode { get; set; }

        /// <summary>
        /// The ID of the agent to use for this completion.
        /// </summary>
        /// <value>The ID of the agent to use for this completion.</value>
        [Required]
        [DataMember(Name="agent_id", EmitDefaultValue=false)]
        public string AgentId { get; set; }

    }
}
