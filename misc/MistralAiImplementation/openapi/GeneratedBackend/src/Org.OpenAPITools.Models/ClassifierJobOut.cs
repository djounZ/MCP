/*
 * Mistral AI API
 *
 * Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ClassifierJobOut 
    {
        /// <summary>
        /// The ID of the job.
        /// </summary>
        /// <value>The ID of the job.</value>
        [Required]
        [DataMember(Name="id", EmitDefaultValue=true)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or Sets AutoStart
        /// </summary>
        [Required]
        [DataMember(Name="auto_start", EmitDefaultValue=true)]
        public bool AutoStart { get; set; }

        /// <summary>
        /// Gets or Sets Model
        /// </summary>
        [Required]
        [DataMember(Name="model", EmitDefaultValue=true)]
        public FineTuneableModel Model { get; set; }


        /// <summary>
        /// The current status of the fine-tuning job.
        /// </summary>
        /// <value>The current status of the fine-tuning job.</value>
        
        public enum StatusEnum
        {
            
            /// <summary>
            /// Enum QUEUEDEnum for QUEUED
            /// </summary>
            [EnumMember(Value = "QUEUED")]
            QUEUEDEnum = 1,
            
            /// <summary>
            /// Enum STARTEDEnum for STARTED
            /// </summary>
            [EnumMember(Value = "STARTED")]
            STARTEDEnum = 2,
            
            /// <summary>
            /// Enum VALIDATINGEnum for VALIDATING
            /// </summary>
            [EnumMember(Value = "VALIDATING")]
            VALIDATINGEnum = 3,
            
            /// <summary>
            /// Enum VALIDATEDEnum for VALIDATED
            /// </summary>
            [EnumMember(Value = "VALIDATED")]
            VALIDATEDEnum = 4,
            
            /// <summary>
            /// Enum RUNNINGEnum for RUNNING
            /// </summary>
            [EnumMember(Value = "RUNNING")]
            RUNNINGEnum = 5,
            
            /// <summary>
            /// Enum FAILEDVALIDATIONEnum for FAILED_VALIDATION
            /// </summary>
            [EnumMember(Value = "FAILED_VALIDATION")]
            FAILEDVALIDATIONEnum = 6,
            
            /// <summary>
            /// Enum FAILEDEnum for FAILED
            /// </summary>
            [EnumMember(Value = "FAILED")]
            FAILEDEnum = 7,
            
            /// <summary>
            /// Enum SUCCESSEnum for SUCCESS
            /// </summary>
            [EnumMember(Value = "SUCCESS")]
            SUCCESSEnum = 8,
            
            /// <summary>
            /// Enum CANCELLEDEnum for CANCELLED
            /// </summary>
            [EnumMember(Value = "CANCELLED")]
            CANCELLEDEnum = 9,
            
            /// <summary>
            /// Enum CANCELLATIONREQUESTEDEnum for CANCELLATION_REQUESTED
            /// </summary>
            [EnumMember(Value = "CANCELLATION_REQUESTED")]
            CANCELLATIONREQUESTEDEnum = 10
        }

        /// <summary>
        /// The current status of the fine-tuning job.
        /// </summary>
        /// <value>The current status of the fine-tuning job.</value>
        [Required]
        [DataMember(Name="status", EmitDefaultValue=true)]
        public StatusEnum Status { get; set; }

        /// <summary>
        /// The UNIX timestamp (in seconds) for when the fine-tuning job was created.
        /// </summary>
        /// <value>The UNIX timestamp (in seconds) for when the fine-tuning job was created.</value>
        [Required]
        [DataMember(Name="created_at", EmitDefaultValue=true)]
        public int CreatedAt { get; set; }

        /// <summary>
        /// The UNIX timestamp (in seconds) for when the fine-tuning job was last modified.
        /// </summary>
        /// <value>The UNIX timestamp (in seconds) for when the fine-tuning job was last modified.</value>
        [Required]
        [DataMember(Name="modified_at", EmitDefaultValue=true)]
        public int ModifiedAt { get; set; }

        /// <summary>
        /// A list containing the IDs of uploaded files that contain training data.
        /// </summary>
        /// <value>A list containing the IDs of uploaded files that contain training data.</value>
        [Required]
        [DataMember(Name="training_files", EmitDefaultValue=false)]
        public List<Guid> TrainingFiles { get; set; }

        /// <summary>
        /// Gets or Sets ValidationFiles
        /// </summary>
        [DataMember(Name="validation_files", EmitDefaultValue=true)]
        public List<Guid> ValidationFiles { get; set; }


        /// <summary>
        /// The object type of the fine-tuning job.
        /// </summary>
        /// <value>The object type of the fine-tuning job.</value>
        
        public enum ObjectEnum
        {
            
            /// <summary>
            /// Enum JobEnum for job
            /// </summary>
            [EnumMember(Value = "job")]
            JobEnum = 1
        }

        /// <summary>
        /// The object type of the fine-tuning job.
        /// </summary>
        /// <value>The object type of the fine-tuning job.</value>
        [DataMember(Name="object", EmitDefaultValue=true)]
        public ObjectEnum Object { get; set; } = ObjectEnum.JobEnum;

        /// <summary>
        /// Gets or Sets FineTunedModel
        /// </summary>
        [DataMember(Name="fine_tuned_model", EmitDefaultValue=true)]
        public string? FineTunedModel { get; set; }

        /// <summary>
        /// Gets or Sets Suffix
        /// </summary>
        [DataMember(Name="suffix", EmitDefaultValue=true)]
        public string? Suffix { get; set; }

        /// <summary>
        /// Gets or Sets Integrations
        /// </summary>
        [DataMember(Name="integrations", EmitDefaultValue=true)]
        public List<WandbIntegrationOut> Integrations { get; set; }

        /// <summary>
        /// Gets or Sets TrainedTokens
        /// </summary>
        [DataMember(Name="trained_tokens", EmitDefaultValue=true)]
        public int? TrainedTokens { get; set; }

        /// <summary>
        /// Gets or Sets Metadata
        /// </summary>
        [DataMember(Name="metadata", EmitDefaultValue=true)]
        public JobMetadataOut Metadata { get; set; }


        /// <summary>
        /// The type of job (`FT` for fine-tuning).
        /// </summary>
        /// <value>The type of job (`FT` for fine-tuning).</value>
        
        public enum JobTypeEnum
        {
            
            /// <summary>
            /// Enum ClassifierEnum for classifier
            /// </summary>
            [EnumMember(Value = "classifier")]
            ClassifierEnum = 1
        }

        /// <summary>
        /// The type of job (&#x60;FT&#x60; for fine-tuning).
        /// </summary>
        /// <value>The type of job (&#x60;FT&#x60; for fine-tuning).</value>
        [DataMember(Name="job_type", EmitDefaultValue=true)]
        public JobTypeEnum JobType { get; set; } = JobTypeEnum.ClassifierEnum;

        /// <summary>
        /// Gets or Sets Hyperparameters
        /// </summary>
        [Required]
        [DataMember(Name="hyperparameters", EmitDefaultValue=false)]
        public ClassifierTrainingParameters Hyperparameters { get; set; }

    }
}
