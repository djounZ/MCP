/*
 * Mistral AI API
 *
 * Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using JsonSubTypes;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    [JsonSubtypes.KnownSubType(typeof(AgentHandoffDoneEvent), "agent.handoff.done")]
    [JsonSubtypes.KnownSubType(typeof(AgentHandoffStartedEvent), "agent.handoff.started")]
    [JsonSubtypes.KnownSubType(typeof(ResponseDoneEvent), "conversation.response.done")]
    [JsonSubtypes.KnownSubType(typeof(ResponseErrorEvent), "conversation.response.error")]
    [JsonSubtypes.KnownSubType(typeof(ResponseStartedEvent), "conversation.response.started")]
    [JsonSubtypes.KnownSubType(typeof(FunctionCallEvent), "function.call.delta")]
    [JsonSubtypes.KnownSubType(typeof(MessageOutputEvent), "message.output.delta")]
    [JsonSubtypes.KnownSubType(typeof(ToolExecutionDeltaEvent), "tool.execution.delta")]
    [JsonSubtypes.KnownSubType(typeof(ToolExecutionDoneEvent), "tool.execution.done")]
    [JsonSubtypes.KnownSubType(typeof(ToolExecutionStartedEvent), "tool.execution.started")]
    public partial class Data 
    {

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum ConversationResponseStartedEnum for conversation.response.started
            /// </summary>
            [EnumMember(Value = "conversation.response.started")]
            ConversationResponseStartedEnum = 1,
            
            /// <summary>
            /// Enum ConversationResponseDoneEnum for conversation.response.done
            /// </summary>
            [EnumMember(Value = "conversation.response.done")]
            ConversationResponseDoneEnum = 2,
            
            /// <summary>
            /// Enum ConversationResponseErrorEnum for conversation.response.error
            /// </summary>
            [EnumMember(Value = "conversation.response.error")]
            ConversationResponseErrorEnum = 3,
            
            /// <summary>
            /// Enum ToolExecutionStartedEnum for tool.execution.started
            /// </summary>
            [EnumMember(Value = "tool.execution.started")]
            ToolExecutionStartedEnum = 4,
            
            /// <summary>
            /// Enum ToolExecutionDeltaEnum for tool.execution.delta
            /// </summary>
            [EnumMember(Value = "tool.execution.delta")]
            ToolExecutionDeltaEnum = 5,
            
            /// <summary>
            /// Enum ToolExecutionDoneEnum for tool.execution.done
            /// </summary>
            [EnumMember(Value = "tool.execution.done")]
            ToolExecutionDoneEnum = 6,
            
            /// <summary>
            /// Enum MessageOutputDeltaEnum for message.output.delta
            /// </summary>
            [EnumMember(Value = "message.output.delta")]
            MessageOutputDeltaEnum = 7,
            
            /// <summary>
            /// Enum FunctionCallDeltaEnum for function.call.delta
            /// </summary>
            [EnumMember(Value = "function.call.delta")]
            FunctionCallDeltaEnum = 8,
            
            /// <summary>
            /// Enum AgentHandoffStartedEnum for agent.handoff.started
            /// </summary>
            [EnumMember(Value = "agent.handoff.started")]
            AgentHandoffStartedEnum = 9,
            
            /// <summary>
            /// Enum AgentHandoffDoneEnum for agent.handoff.done
            /// </summary>
            [EnumMember(Value = "agent.handoff.done")]
            AgentHandoffDoneEnum = 10
        }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; } = TypeEnum.ConversationResponseStartedEnum;

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name="created_at", EmitDefaultValue=true)]
        public DateTimeOffset? CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets ConversationId
        /// </summary>
        [Required]
        [DataMember(Name="conversation_id", EmitDefaultValue=false)]
        public string ConversationId { get; set; }

        /// <summary>
        /// Gets or Sets Usage
        /// </summary>
        [Required]
        [DataMember(Name="usage", EmitDefaultValue=false)]
        public ConversationUsageInfo Usage { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [Required]
        [DataMember(Name="message", EmitDefaultValue=false)]
        public string Message { get; set; }

        /// <summary>
        /// Gets or Sets Code
        /// </summary>
        [Required]
        [DataMember(Name="code", EmitDefaultValue=true)]
        public int Code { get; set; }

        /// <summary>
        /// Gets or Sets OutputIndex
        /// </summary>
        [DataMember(Name="output_index", EmitDefaultValue=true)]
        public int? OutputIndex { get; set; } = 0;

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [Required]
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [Required]
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Arguments
        /// </summary>
        [Required]
        [DataMember(Name="arguments", EmitDefaultValue=false)]
        public string Arguments { get; set; }

        /// <summary>
        /// Gets or Sets Info
        /// </summary>
        [DataMember(Name="info", EmitDefaultValue=false)]
        public Dictionary<string, Object> Info { get; set; }

        /// <summary>
        /// Gets or Sets ContentIndex
        /// </summary>
        [DataMember(Name="content_index", EmitDefaultValue=true)]
        public int? ContentIndex { get; set; } = 0;

        /// <summary>
        /// Gets or Sets Model
        /// </summary>
        [DataMember(Name="model", EmitDefaultValue=false)]
        public string? Model { get; set; }

        /// <summary>
        /// Gets or Sets AgentId
        /// </summary>
        [DataMember(Name="agent_id", EmitDefaultValue=false)]
        public string? AgentId { get; set; }


        /// <summary>
        /// Gets or Sets Role
        /// </summary>
        
        public enum RoleEnum
        {
            
            /// <summary>
            /// Enum AssistantEnum for assistant
            /// </summary>
            [EnumMember(Value = "assistant")]
            AssistantEnum = 1
        }

        /// <summary>
        /// Gets or Sets Role
        /// </summary>
        [DataMember(Name="role", EmitDefaultValue=true)]
        public RoleEnum Role { get; set; } = RoleEnum.AssistantEnum;

        /// <summary>
        /// Gets or Sets Content
        /// </summary>
        [Required]
        [DataMember(Name="content", EmitDefaultValue=false)]
        public Content2 Content { get; set; }

        /// <summary>
        /// Gets or Sets ToolCallId
        /// </summary>
        [Required]
        [DataMember(Name="tool_call_id", EmitDefaultValue=false)]
        public string ToolCallId { get; set; }

        /// <summary>
        /// Gets or Sets PreviousAgentId
        /// </summary>
        [Required]
        [DataMember(Name="previous_agent_id", EmitDefaultValue=false)]
        public string PreviousAgentId { get; set; }

        /// <summary>
        /// Gets or Sets PreviousAgentName
        /// </summary>
        [Required]
        [DataMember(Name="previous_agent_name", EmitDefaultValue=false)]
        public string PreviousAgentName { get; set; }

        /// <summary>
        /// Gets or Sets NextAgentId
        /// </summary>
        [Required]
        [DataMember(Name="next_agent_id", EmitDefaultValue=false)]
        public string NextAgentId { get; set; }

        /// <summary>
        /// Gets or Sets NextAgentName
        /// </summary>
        [Required]
        [DataMember(Name="next_agent_name", EmitDefaultValue=false)]
        public string NextAgentName { get; set; }

    }
}
