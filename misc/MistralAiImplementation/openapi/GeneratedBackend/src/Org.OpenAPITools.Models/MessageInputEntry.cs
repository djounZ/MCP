/*
 * Mistral AI API
 *
 * Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Representation of an input message inside the conversation.
    /// </summary>
    [DataContract]
    public partial class MessageInputEntry 
    {

        /// <summary>
        /// Gets or Sets Object
        /// </summary>
        
        public enum ObjectEnum
        {
            
            /// <summary>
            /// Enum EntryEnum for entry
            /// </summary>
            [EnumMember(Value = "entry")]
            EntryEnum = 1
        }

        /// <summary>
        /// Gets or Sets Object
        /// </summary>
        [DataMember(Name="object", EmitDefaultValue=true)]
        public ObjectEnum Object { get; set; } = ObjectEnum.EntryEnum;


        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum MessageInputEnum for message.input
            /// </summary>
            [EnumMember(Value = "message.input")]
            MessageInputEnum = 1
        }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; } = TypeEnum.MessageInputEnum;

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name="created_at", EmitDefaultValue=true)]
        public DateTimeOffset? CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets CompletedAt
        /// </summary>
        [DataMember(Name="completed_at", EmitDefaultValue=true)]
        public DateTimeOffset? CompletedAt { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string? Id { get; set; }


        /// <summary>
        /// Gets or Sets Role
        /// </summary>
        
        public enum RoleEnum
        {
            
            /// <summary>
            /// Enum AssistantEnum for assistant
            /// </summary>
            [EnumMember(Value = "assistant")]
            AssistantEnum = 1,
            
            /// <summary>
            /// Enum UserEnum for user
            /// </summary>
            [EnumMember(Value = "user")]
            UserEnum = 2
        }

        /// <summary>
        /// Gets or Sets Role
        /// </summary>
        [Required]
        [DataMember(Name="role", EmitDefaultValue=true)]
        public RoleEnum Role { get; set; }

        /// <summary>
        /// Gets or Sets Content
        /// </summary>
        [Required]
        [DataMember(Name="content", EmitDefaultValue=false)]
        public Content Content { get; set; }

        /// <summary>
        /// Gets or Sets Prefix
        /// </summary>
        [DataMember(Name="prefix", EmitDefaultValue=true)]
        public bool? Prefix { get; set; } = false;

    }
}
