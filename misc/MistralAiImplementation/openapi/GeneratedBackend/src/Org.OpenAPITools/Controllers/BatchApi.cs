/*
 * Mistral AI API
 *
 * Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using System.Text.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class BatchApiController : ControllerBase
    { 
        /// <summary>
        /// Cancel Batch Job
        /// </summary>
        /// <remarks>Request the cancellation of a batch job.</remarks>
        /// <param name="jobId"></param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("/v1/batch/jobs/{job_id}/cancel")]
        [Authorize]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(BatchJobOut))]
        public virtual IActionResult JobsApiRoutesBatchCancelBatchJob([FromRoute (Name = "job_id")][Required]Guid jobId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"succeeded_requests\" : 5,\r\n  \"metadata\" : {\r\n    \"key\" : \"\"\r\n  },\r\n  \"failed_requests\" : 2,\r\n  \"created_at\" : 6,\r\n  \"output_file\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\r\n  \"error_file\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\r\n  \"input_files\" : [ \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" ],\r\n  \"completed_at\" : 9,\r\n  \"endpoint\" : \"endpoint\",\r\n  \"completed_requests\" : 5,\r\n  \"total_requests\" : 1,\r\n  \"started_at\" : 7,\r\n  \"model\" : \"model\",\r\n  \"id\" : \"id\",\r\n  \"errors\" : [ {\r\n    \"count\" : 0,\r\n    \"message\" : \"message\"\r\n  }, {\r\n    \"count\" : 0,\r\n    \"message\" : \"message\"\r\n  } ],\r\n  \"object\" : \"batch\",\r\n  \"status\" : \"QUEUED\"\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<BatchJobOut>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create Batch Job
        /// </summary>
        /// <remarks>Create a new batch job, it will be queued for processing.</remarks>
        /// <param name="batchJobIn"></param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("/v1/batch/jobs")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(BatchJobOut))]
        public virtual IActionResult JobsApiRoutesBatchCreateBatchJob([FromBody]BatchJobIn batchJobIn)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"succeeded_requests\" : 5,\r\n  \"metadata\" : {\r\n    \"key\" : \"\"\r\n  },\r\n  \"failed_requests\" : 2,\r\n  \"created_at\" : 6,\r\n  \"output_file\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\r\n  \"error_file\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\r\n  \"input_files\" : [ \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" ],\r\n  \"completed_at\" : 9,\r\n  \"endpoint\" : \"endpoint\",\r\n  \"completed_requests\" : 5,\r\n  \"total_requests\" : 1,\r\n  \"started_at\" : 7,\r\n  \"model\" : \"model\",\r\n  \"id\" : \"id\",\r\n  \"errors\" : [ {\r\n    \"count\" : 0,\r\n    \"message\" : \"message\"\r\n  }, {\r\n    \"count\" : 0,\r\n    \"message\" : \"message\"\r\n  } ],\r\n  \"object\" : \"batch\",\r\n  \"status\" : \"QUEUED\"\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<BatchJobOut>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Batch Job
        /// </summary>
        /// <remarks>Get a batch job details by its UUID.</remarks>
        /// <param name="jobId"></param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/v1/batch/jobs/{job_id}")]
        [Authorize]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(BatchJobOut))]
        public virtual IActionResult JobsApiRoutesBatchGetBatchJob([FromRoute (Name = "job_id")][Required]Guid jobId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"succeeded_requests\" : 5,\r\n  \"metadata\" : {\r\n    \"key\" : \"\"\r\n  },\r\n  \"failed_requests\" : 2,\r\n  \"created_at\" : 6,\r\n  \"output_file\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\r\n  \"error_file\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\r\n  \"input_files\" : [ \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" ],\r\n  \"completed_at\" : 9,\r\n  \"endpoint\" : \"endpoint\",\r\n  \"completed_requests\" : 5,\r\n  \"total_requests\" : 1,\r\n  \"started_at\" : 7,\r\n  \"model\" : \"model\",\r\n  \"id\" : \"id\",\r\n  \"errors\" : [ {\r\n    \"count\" : 0,\r\n    \"message\" : \"message\"\r\n  }, {\r\n    \"count\" : 0,\r\n    \"message\" : \"message\"\r\n  } ],\r\n  \"object\" : \"batch\",\r\n  \"status\" : \"QUEUED\"\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<BatchJobOut>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Batch Jobs
        /// </summary>
        /// <remarks>Get a list of batch jobs for your organization and user.</remarks>
        /// <param name="page"></param>
        /// <param name="pageSize"></param>
        /// <param name="model"></param>
        /// <param name="metadata"></param>
        /// <param name="createdAfter"></param>
        /// <param name="createdByMe"></param>
        /// <param name="status"></param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/v1/batch/jobs")]
        [Authorize]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(BatchJobsOut))]
        public virtual IActionResult JobsApiRoutesBatchGetBatchJobs([FromQuery (Name = "page")]int? page, [FromQuery (Name = "page_size")]int? pageSize, [FromQuery (Name = "model")]string? model, [FromQuery (Name = "metadata")]Dictionary<string, Object>? metadata, [FromQuery (Name = "created_after")]DateTimeOffset? createdAfter, [FromQuery (Name = "created_by_me")]bool? createdByMe, [FromQuery (Name = "status")]List<BatchJobStatus>? status)
        {
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"total\" : 3,\r\n  \"data\" : [ {\r\n    \"succeeded_requests\" : 5,\r\n    \"metadata\" : {\r\n      \"key\" : \"\"\r\n    },\r\n    \"failed_requests\" : 2,\r\n    \"created_at\" : 6,\r\n    \"output_file\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\r\n    \"error_file\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\r\n    \"input_files\" : [ \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" ],\r\n    \"completed_at\" : 9,\r\n    \"endpoint\" : \"endpoint\",\r\n    \"completed_requests\" : 5,\r\n    \"total_requests\" : 1,\r\n    \"started_at\" : 7,\r\n    \"model\" : \"model\",\r\n    \"id\" : \"id\",\r\n    \"errors\" : [ {\r\n      \"count\" : 0,\r\n      \"message\" : \"message\"\r\n    }, {\r\n      \"count\" : 0,\r\n      \"message\" : \"message\"\r\n    } ],\r\n    \"object\" : \"batch\",\r\n    \"status\" : \"QUEUED\"\r\n  }, {\r\n    \"succeeded_requests\" : 5,\r\n    \"metadata\" : {\r\n      \"key\" : \"\"\r\n    },\r\n    \"failed_requests\" : 2,\r\n    \"created_at\" : 6,\r\n    \"output_file\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\r\n    \"error_file\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\r\n    \"input_files\" : [ \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" ],\r\n    \"completed_at\" : 9,\r\n    \"endpoint\" : \"endpoint\",\r\n    \"completed_requests\" : 5,\r\n    \"total_requests\" : 1,\r\n    \"started_at\" : 7,\r\n    \"model\" : \"model\",\r\n    \"id\" : \"id\",\r\n    \"errors\" : [ {\r\n      \"count\" : 0,\r\n      \"message\" : \"message\"\r\n    }, {\r\n      \"count\" : 0,\r\n      \"message\" : \"message\"\r\n    } ],\r\n    \"object\" : \"batch\",\r\n    \"status\" : \"QUEUED\"\r\n  } ],\r\n  \"object\" : \"list\"\r\n}";

            var example = exampleJson != null
            ? JsonSerializer.Deserialize<BatchJobsOut>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
