/*
 * Mistral AI API
 *
 * Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using System.Text.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class BetaAgentsApiController : ControllerBase
    { 
        /// <summary>
        /// Create a agent that can be used within a conversation.
        /// </summary>
        /// <remarks>Create a new agent giving it instructions, tools, description. The agent is then available to be used as a regular assistant in a conversation or as part of an agent pool from which it can be used.</remarks>
        /// <param name="agentCreationRequest"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="422">Validation Error</response>
        [HttpPost]
        [Route("/v1/agents")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Agent))]
        [ProducesResponseType(statusCode: 422, type: typeof(HTTPValidationError))]
        public virtual IActionResult AgentsApiV1AgentsCreate([FromBody]AgentCreationRequest agentCreationRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"instructions\" : \"instructions\",\r\n  \"handoffs\" : [ \"handoffs\", \"handoffs\" ],\r\n  \"updated_at\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"description\" : \"description\",\r\n  \"created_at\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"completion_args\" : {\r\n    \"top_p\" : 0.5962133916683182,\r\n    \"random_seed\" : 0,\r\n    \"frequency_penalty\" : 0.4109824732281613,\r\n    \"response_format\" : {\r\n      \"json_schema\" : {\r\n        \"schema\" : {\r\n          \"key\" : \"\"\r\n        },\r\n        \"name\" : \"name\",\r\n        \"description\" : \"Description\",\r\n        \"strict\" : false\r\n      },\r\n      \"type\" : \"text\"\r\n    },\r\n    \"stop\" : \"CompletionArgsStop\",\r\n    \"max_tokens\" : 0,\r\n    \"presence_penalty\" : -1.6796687238155954,\r\n    \"temperature\" : 0.14658129805029452,\r\n    \"prediction\" : {\r\n      \"type\" : \"content\",\r\n      \"content\" : \"\"\r\n    },\r\n    \"tool_choice\" : \"auto\"\r\n  },\r\n  \"model\" : \"model\",\r\n  \"id\" : \"id\",\r\n  \"tools\" : [ {\r\n    \"function\" : {\r\n      \"name\" : \"name\",\r\n      \"description\" : \"\",\r\n      \"strict\" : false,\r\n      \"parameters\" : {\r\n        \"key\" : \"\"\r\n      }\r\n    },\r\n    \"type\" : \"function\"\r\n  }, {\r\n    \"function\" : {\r\n      \"name\" : \"name\",\r\n      \"description\" : \"\",\r\n      \"strict\" : false,\r\n      \"parameters\" : {\r\n        \"key\" : \"\"\r\n      }\r\n    },\r\n    \"type\" : \"function\"\r\n  } ],\r\n  \"version\" : 0,\r\n  \"object\" : \"agent\"\r\n}";
            exampleJson = "{\r\n  \"detail\" : [ {\r\n    \"msg\" : \"msg\",\r\n    \"loc\" : [ \"ValidationError_loc_inner\", \"ValidationError_loc_inner\" ],\r\n    \"type\" : \"type\"\r\n  }, {\r\n    \"msg\" : \"msg\",\r\n    \"loc\" : [ \"ValidationError_loc_inner\", \"ValidationError_loc_inner\" ],\r\n    \"type\" : \"type\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<Agent>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Retrieve an agent entity.
        /// </summary>
        /// <remarks>Given an agent retrieve an agent entity with its attributes.</remarks>
        /// <param name="agentId"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="422">Validation Error</response>
        [HttpGet]
        [Route("/v1/agents/{agent_id}")]
        [Authorize]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Agent))]
        [ProducesResponseType(statusCode: 422, type: typeof(HTTPValidationError))]
        public virtual IActionResult AgentsApiV1AgentsGet([FromRoute (Name = "agent_id")][Required]string agentId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"instructions\" : \"instructions\",\r\n  \"handoffs\" : [ \"handoffs\", \"handoffs\" ],\r\n  \"updated_at\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"description\" : \"description\",\r\n  \"created_at\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"completion_args\" : {\r\n    \"top_p\" : 0.5962133916683182,\r\n    \"random_seed\" : 0,\r\n    \"frequency_penalty\" : 0.4109824732281613,\r\n    \"response_format\" : {\r\n      \"json_schema\" : {\r\n        \"schema\" : {\r\n          \"key\" : \"\"\r\n        },\r\n        \"name\" : \"name\",\r\n        \"description\" : \"Description\",\r\n        \"strict\" : false\r\n      },\r\n      \"type\" : \"text\"\r\n    },\r\n    \"stop\" : \"CompletionArgsStop\",\r\n    \"max_tokens\" : 0,\r\n    \"presence_penalty\" : -1.6796687238155954,\r\n    \"temperature\" : 0.14658129805029452,\r\n    \"prediction\" : {\r\n      \"type\" : \"content\",\r\n      \"content\" : \"\"\r\n    },\r\n    \"tool_choice\" : \"auto\"\r\n  },\r\n  \"model\" : \"model\",\r\n  \"id\" : \"id\",\r\n  \"tools\" : [ {\r\n    \"function\" : {\r\n      \"name\" : \"name\",\r\n      \"description\" : \"\",\r\n      \"strict\" : false,\r\n      \"parameters\" : {\r\n        \"key\" : \"\"\r\n      }\r\n    },\r\n    \"type\" : \"function\"\r\n  }, {\r\n    \"function\" : {\r\n      \"name\" : \"name\",\r\n      \"description\" : \"\",\r\n      \"strict\" : false,\r\n      \"parameters\" : {\r\n        \"key\" : \"\"\r\n      }\r\n    },\r\n    \"type\" : \"function\"\r\n  } ],\r\n  \"version\" : 0,\r\n  \"object\" : \"agent\"\r\n}";
            exampleJson = "{\r\n  \"detail\" : [ {\r\n    \"msg\" : \"msg\",\r\n    \"loc\" : [ \"ValidationError_loc_inner\", \"ValidationError_loc_inner\" ],\r\n    \"type\" : \"type\"\r\n  }, {\r\n    \"msg\" : \"msg\",\r\n    \"loc\" : [ \"ValidationError_loc_inner\", \"ValidationError_loc_inner\" ],\r\n    \"type\" : \"type\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<Agent>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List agent entities.
        /// </summary>
        /// <remarks>Retrieve a list of agent entities sorted by creation time.</remarks>
        /// <param name="page"></param>
        /// <param name="pageSize"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="422">Validation Error</response>
        [HttpGet]
        [Route("/v1/agents")]
        [Authorize]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<Agent>))]
        [ProducesResponseType(statusCode: 422, type: typeof(HTTPValidationError))]
        public virtual IActionResult AgentsApiV1AgentsList([FromQuery (Name = "page")]int? page, [FromQuery (Name = "page_size")]int? pageSize)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default);
            string exampleJson = null;
            exampleJson = "[ {\r\n  \"instructions\" : \"instructions\",\r\n  \"handoffs\" : [ \"handoffs\", \"handoffs\" ],\r\n  \"updated_at\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"description\" : \"description\",\r\n  \"created_at\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"completion_args\" : {\r\n    \"top_p\" : 0.5962133916683182,\r\n    \"random_seed\" : 0,\r\n    \"frequency_penalty\" : 0.4109824732281613,\r\n    \"response_format\" : {\r\n      \"json_schema\" : {\r\n        \"schema\" : {\r\n          \"key\" : \"\"\r\n        },\r\n        \"name\" : \"name\",\r\n        \"description\" : \"Description\",\r\n        \"strict\" : false\r\n      },\r\n      \"type\" : \"text\"\r\n    },\r\n    \"stop\" : \"CompletionArgsStop\",\r\n    \"max_tokens\" : 0,\r\n    \"presence_penalty\" : -1.6796687238155954,\r\n    \"temperature\" : 0.14658129805029452,\r\n    \"prediction\" : {\r\n      \"type\" : \"content\",\r\n      \"content\" : \"\"\r\n    },\r\n    \"tool_choice\" : \"auto\"\r\n  },\r\n  \"model\" : \"model\",\r\n  \"id\" : \"id\",\r\n  \"tools\" : [ {\r\n    \"function\" : {\r\n      \"name\" : \"name\",\r\n      \"description\" : \"\",\r\n      \"strict\" : false,\r\n      \"parameters\" : {\r\n        \"key\" : \"\"\r\n      }\r\n    },\r\n    \"type\" : \"function\"\r\n  }, {\r\n    \"function\" : {\r\n      \"name\" : \"name\",\r\n      \"description\" : \"\",\r\n      \"strict\" : false,\r\n      \"parameters\" : {\r\n        \"key\" : \"\"\r\n      }\r\n    },\r\n    \"type\" : \"function\"\r\n  } ],\r\n  \"version\" : 0,\r\n  \"object\" : \"agent\"\r\n}, {\r\n  \"instructions\" : \"instructions\",\r\n  \"handoffs\" : [ \"handoffs\", \"handoffs\" ],\r\n  \"updated_at\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"description\" : \"description\",\r\n  \"created_at\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"completion_args\" : {\r\n    \"top_p\" : 0.5962133916683182,\r\n    \"random_seed\" : 0,\r\n    \"frequency_penalty\" : 0.4109824732281613,\r\n    \"response_format\" : {\r\n      \"json_schema\" : {\r\n        \"schema\" : {\r\n          \"key\" : \"\"\r\n        },\r\n        \"name\" : \"name\",\r\n        \"description\" : \"Description\",\r\n        \"strict\" : false\r\n      },\r\n      \"type\" : \"text\"\r\n    },\r\n    \"stop\" : \"CompletionArgsStop\",\r\n    \"max_tokens\" : 0,\r\n    \"presence_penalty\" : -1.6796687238155954,\r\n    \"temperature\" : 0.14658129805029452,\r\n    \"prediction\" : {\r\n      \"type\" : \"content\",\r\n      \"content\" : \"\"\r\n    },\r\n    \"tool_choice\" : \"auto\"\r\n  },\r\n  \"model\" : \"model\",\r\n  \"id\" : \"id\",\r\n  \"tools\" : [ {\r\n    \"function\" : {\r\n      \"name\" : \"name\",\r\n      \"description\" : \"\",\r\n      \"strict\" : false,\r\n      \"parameters\" : {\r\n        \"key\" : \"\"\r\n      }\r\n    },\r\n    \"type\" : \"function\"\r\n  }, {\r\n    \"function\" : {\r\n      \"name\" : \"name\",\r\n      \"description\" : \"\",\r\n      \"strict\" : false,\r\n      \"parameters\" : {\r\n        \"key\" : \"\"\r\n      }\r\n    },\r\n    \"type\" : \"function\"\r\n  } ],\r\n  \"version\" : 0,\r\n  \"object\" : \"agent\"\r\n} ]";
            exampleJson = "{\r\n  \"detail\" : [ {\r\n    \"msg\" : \"msg\",\r\n    \"loc\" : [ \"ValidationError_loc_inner\", \"ValidationError_loc_inner\" ],\r\n    \"type\" : \"type\"\r\n  }, {\r\n    \"msg\" : \"msg\",\r\n    \"loc\" : [ \"ValidationError_loc_inner\", \"ValidationError_loc_inner\" ],\r\n    \"type\" : \"type\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<List<Agent>>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update an agent entity.
        /// </summary>
        /// <remarks>Update an agent attributes and create a new version.</remarks>
        /// <param name="agentId"></param>
        /// <param name="agentUpdateRequest"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="422">Validation Error</response>
        [HttpPatch]
        [Route("/v1/agents/{agent_id}")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Agent))]
        [ProducesResponseType(statusCode: 422, type: typeof(HTTPValidationError))]
        public virtual IActionResult AgentsApiV1AgentsUpdate([FromRoute (Name = "agent_id")][Required]string agentId, [FromBody]AgentUpdateRequest agentUpdateRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"instructions\" : \"instructions\",\r\n  \"handoffs\" : [ \"handoffs\", \"handoffs\" ],\r\n  \"updated_at\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"description\" : \"description\",\r\n  \"created_at\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"completion_args\" : {\r\n    \"top_p\" : 0.5962133916683182,\r\n    \"random_seed\" : 0,\r\n    \"frequency_penalty\" : 0.4109824732281613,\r\n    \"response_format\" : {\r\n      \"json_schema\" : {\r\n        \"schema\" : {\r\n          \"key\" : \"\"\r\n        },\r\n        \"name\" : \"name\",\r\n        \"description\" : \"Description\",\r\n        \"strict\" : false\r\n      },\r\n      \"type\" : \"text\"\r\n    },\r\n    \"stop\" : \"CompletionArgsStop\",\r\n    \"max_tokens\" : 0,\r\n    \"presence_penalty\" : -1.6796687238155954,\r\n    \"temperature\" : 0.14658129805029452,\r\n    \"prediction\" : {\r\n      \"type\" : \"content\",\r\n      \"content\" : \"\"\r\n    },\r\n    \"tool_choice\" : \"auto\"\r\n  },\r\n  \"model\" : \"model\",\r\n  \"id\" : \"id\",\r\n  \"tools\" : [ {\r\n    \"function\" : {\r\n      \"name\" : \"name\",\r\n      \"description\" : \"\",\r\n      \"strict\" : false,\r\n      \"parameters\" : {\r\n        \"key\" : \"\"\r\n      }\r\n    },\r\n    \"type\" : \"function\"\r\n  }, {\r\n    \"function\" : {\r\n      \"name\" : \"name\",\r\n      \"description\" : \"\",\r\n      \"strict\" : false,\r\n      \"parameters\" : {\r\n        \"key\" : \"\"\r\n      }\r\n    },\r\n    \"type\" : \"function\"\r\n  } ],\r\n  \"version\" : 0,\r\n  \"object\" : \"agent\"\r\n}";
            exampleJson = "{\r\n  \"detail\" : [ {\r\n    \"msg\" : \"msg\",\r\n    \"loc\" : [ \"ValidationError_loc_inner\", \"ValidationError_loc_inner\" ],\r\n    \"type\" : \"type\"\r\n  }, {\r\n    \"msg\" : \"msg\",\r\n    \"loc\" : [ \"ValidationError_loc_inner\", \"ValidationError_loc_inner\" ],\r\n    \"type\" : \"type\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<Agent>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update an agent version.
        /// </summary>
        /// <remarks>Switch the version of an agent.</remarks>
        /// <param name="agentId"></param>
        /// <param name="version"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="422">Validation Error</response>
        [HttpPatch]
        [Route("/v1/agents/{agent_id}/version")]
        [Authorize]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Agent))]
        [ProducesResponseType(statusCode: 422, type: typeof(HTTPValidationError))]
        public virtual IActionResult AgentsApiV1AgentsUpdateVersion([FromRoute (Name = "agent_id")][Required]string agentId, [FromQuery (Name = "version")][Required()]int version)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"instructions\" : \"instructions\",\r\n  \"handoffs\" : [ \"handoffs\", \"handoffs\" ],\r\n  \"updated_at\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"name\" : \"name\",\r\n  \"description\" : \"description\",\r\n  \"created_at\" : \"2000-01-23T04:56:07.000+00:00\",\r\n  \"completion_args\" : {\r\n    \"top_p\" : 0.5962133916683182,\r\n    \"random_seed\" : 0,\r\n    \"frequency_penalty\" : 0.4109824732281613,\r\n    \"response_format\" : {\r\n      \"json_schema\" : {\r\n        \"schema\" : {\r\n          \"key\" : \"\"\r\n        },\r\n        \"name\" : \"name\",\r\n        \"description\" : \"Description\",\r\n        \"strict\" : false\r\n      },\r\n      \"type\" : \"text\"\r\n    },\r\n    \"stop\" : \"CompletionArgsStop\",\r\n    \"max_tokens\" : 0,\r\n    \"presence_penalty\" : -1.6796687238155954,\r\n    \"temperature\" : 0.14658129805029452,\r\n    \"prediction\" : {\r\n      \"type\" : \"content\",\r\n      \"content\" : \"\"\r\n    },\r\n    \"tool_choice\" : \"auto\"\r\n  },\r\n  \"model\" : \"model\",\r\n  \"id\" : \"id\",\r\n  \"tools\" : [ {\r\n    \"function\" : {\r\n      \"name\" : \"name\",\r\n      \"description\" : \"\",\r\n      \"strict\" : false,\r\n      \"parameters\" : {\r\n        \"key\" : \"\"\r\n      }\r\n    },\r\n    \"type\" : \"function\"\r\n  }, {\r\n    \"function\" : {\r\n      \"name\" : \"name\",\r\n      \"description\" : \"\",\r\n      \"strict\" : false,\r\n      \"parameters\" : {\r\n        \"key\" : \"\"\r\n      }\r\n    },\r\n    \"type\" : \"function\"\r\n  } ],\r\n  \"version\" : 0,\r\n  \"object\" : \"agent\"\r\n}";
            exampleJson = "{\r\n  \"detail\" : [ {\r\n    \"msg\" : \"msg\",\r\n    \"loc\" : [ \"ValidationError_loc_inner\", \"ValidationError_loc_inner\" ],\r\n    \"type\" : \"type\"\r\n  }, {\r\n    \"msg\" : \"msg\",\r\n    \"loc\" : [ \"ValidationError_loc_inner\", \"ValidationError_loc_inner\" ],\r\n    \"type\" : \"type\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<Agent>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
