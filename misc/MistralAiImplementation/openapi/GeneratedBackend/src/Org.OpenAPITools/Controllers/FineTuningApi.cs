/*
 * Mistral AI API
 *
 * Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using System.Text.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class FineTuningApiController : ControllerBase
    { 
        /// <summary>
        /// Cancel Fine Tuning Job
        /// </summary>
        /// <remarks>Request the cancellation of a fine tuning job.</remarks>
        /// <param name="jobId">The ID of the job to cancel.</param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("/v1/fine_tuning/jobs/{job_id}/cancel")]
        [Authorize]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Response1))]
        public virtual IActionResult JobsApiRoutesFineTuningCancelFineTuningJob([FromRoute (Name = "job_id")][Required]Guid jobId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"job_type\" : \"completion\",\r\n  \"metadata\" : {\r\n    \"data_tokens\" : 9,\r\n    \"train_tokens_per_step\" : 2,\r\n    \"cost\" : 5.637376656633329,\r\n    \"cost_currency\" : \"cost_currency\",\r\n    \"estimated_start_time\" : 3,\r\n    \"expected_duration_seconds\" : 5,\r\n    \"train_tokens\" : 7\r\n  },\r\n  \"fine_tuned_model\" : \"fine_tuned_model\",\r\n  \"created_at\" : 0,\r\n  \"checkpoints\" : [ {\r\n    \"step_number\" : 9,\r\n    \"created_at\" : 3,\r\n    \"metrics\" : {\r\n      \"valid_loss\" : 2.3021358869347655,\r\n      \"valid_mean_token_accuracy\" : 7.061401241503109,\r\n      \"train_loss\" : 5.637376656633329\r\n    }\r\n  }, {\r\n    \"step_number\" : 9,\r\n    \"created_at\" : 3,\r\n    \"metrics\" : {\r\n      \"valid_loss\" : 2.3021358869347655,\r\n      \"valid_mean_token_accuracy\" : 7.061401241503109,\r\n      \"train_loss\" : 5.637376656633329\r\n    }\r\n  } ],\r\n  \"suffix\" : \"suffix\",\r\n  \"auto_start\" : true,\r\n  \"training_files\" : [ \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" ],\r\n  \"repositories\" : [ {\r\n    \"owner\" : \"owner\",\r\n    \"ref\" : \"ref\",\r\n    \"name\" : \"name\",\r\n    \"weight\" : 7.457744773683766,\r\n    \"type\" : \"github\",\r\n    \"commit_id\" : \"commit_id\"\r\n  }, {\r\n    \"owner\" : \"owner\",\r\n    \"ref\" : \"ref\",\r\n    \"name\" : \"name\",\r\n    \"weight\" : 7.457744773683766,\r\n    \"type\" : \"github\",\r\n    \"commit_id\" : \"commit_id\"\r\n  } ],\r\n  \"hyperparameters\" : {\r\n    \"fim_ratio\" : 0.684685269835264,\r\n    \"weight_decay\" : 0.7386281948385884,\r\n    \"training_steps\" : 1,\r\n    \"learning_rate\" : 0.41456080884278557,\r\n    \"epochs\" : 1.0246457001441578,\r\n    \"seq_len\" : 100,\r\n    \"warmup_fraction\" : 0.12315135367772556\r\n  },\r\n  \"model\" : \"open-mistral-7b\",\r\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\r\n  \"trained_tokens\" : 1,\r\n  \"modified_at\" : 6,\r\n  \"integrations\" : [ {\r\n    \"name\" : \"name\",\r\n    \"project\" : \"project\",\r\n    \"type\" : \"wandb\",\r\n    \"run_name\" : \"run_name\",\r\n    \"url\" : \"url\"\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"project\" : \"project\",\r\n    \"type\" : \"wandb\",\r\n    \"run_name\" : \"run_name\",\r\n    \"url\" : \"url\"\r\n  } ],\r\n  \"events\" : [ {\r\n    \"data\" : {\r\n      \"key\" : \"\"\r\n    },\r\n    \"name\" : \"name\",\r\n    \"created_at\" : 5\r\n  }, {\r\n    \"data\" : {\r\n      \"key\" : \"\"\r\n    },\r\n    \"name\" : \"name\",\r\n    \"created_at\" : 5\r\n  } ],\r\n  \"status\" : \"QUEUED\",\r\n  \"validation_files\" : [ \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" ],\r\n  \"object\" : \"job\"\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<Response1>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create Fine Tuning Job
        /// </summary>
        /// <remarks>Create a new fine-tuning job, it will be queued for processing.</remarks>
        /// <param name="jobIn"></param>
        /// <param name="dryRun">* If &#x60;true&#x60; the job is not spawned, instead the query returns a handful of useful metadata   for the user to perform sanity checks (see &#x60;LegacyJobMetadataOut&#x60; response). * Otherwise, the job is started and the query returns the job ID along with some of the   input parameters (see &#x60;JobOut&#x60; response). </param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("/v1/fine_tuning/jobs")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Response))]
        public virtual IActionResult JobsApiRoutesFineTuningCreateFineTuningJob([FromBody]JobIn jobIn, [FromQuery (Name = "dry_run")]bool? dryRun)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"job_type\" : \"completion\",\r\n  \"metadata\" : {\r\n    \"data_tokens\" : 9,\r\n    \"train_tokens_per_step\" : 2,\r\n    \"cost\" : 5.637376656633329,\r\n    \"cost_currency\" : \"cost_currency\",\r\n    \"estimated_start_time\" : 3,\r\n    \"expected_duration_seconds\" : 5,\r\n    \"train_tokens\" : 7\r\n  },\r\n  \"fine_tuned_model\" : \"fine_tuned_model\",\r\n  \"created_at\" : 0,\r\n  \"suffix\" : \"suffix\",\r\n  \"auto_start\" : true,\r\n  \"training_files\" : [ \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" ],\r\n  \"repositories\" : [ {\r\n    \"owner\" : \"owner\",\r\n    \"ref\" : \"ref\",\r\n    \"name\" : \"name\",\r\n    \"weight\" : 7.457744773683766,\r\n    \"type\" : \"github\",\r\n    \"commit_id\" : \"commit_id\"\r\n  }, {\r\n    \"owner\" : \"owner\",\r\n    \"ref\" : \"ref\",\r\n    \"name\" : \"name\",\r\n    \"weight\" : 7.457744773683766,\r\n    \"type\" : \"github\",\r\n    \"commit_id\" : \"commit_id\"\r\n  } ],\r\n  \"hyperparameters\" : {\r\n    \"fim_ratio\" : 0.684685269835264,\r\n    \"weight_decay\" : 0.7386281948385884,\r\n    \"training_steps\" : 1,\r\n    \"learning_rate\" : 0.41456080884278557,\r\n    \"epochs\" : 1.0246457001441578,\r\n    \"seq_len\" : 100,\r\n    \"warmup_fraction\" : 0.12315135367772556\r\n  },\r\n  \"model\" : \"open-mistral-7b\",\r\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\r\n  \"trained_tokens\" : 1,\r\n  \"modified_at\" : 6,\r\n  \"integrations\" : [ {\r\n    \"name\" : \"name\",\r\n    \"project\" : \"project\",\r\n    \"type\" : \"wandb\",\r\n    \"run_name\" : \"run_name\",\r\n    \"url\" : \"url\"\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"project\" : \"project\",\r\n    \"type\" : \"wandb\",\r\n    \"run_name\" : \"run_name\",\r\n    \"url\" : \"url\"\r\n  } ],\r\n  \"status\" : \"QUEUED\",\r\n  \"validation_files\" : [ \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" ],\r\n  \"object\" : \"job\"\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<Response>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Fine Tuning Job
        /// </summary>
        /// <remarks>Get a fine-tuned job details by its UUID.</remarks>
        /// <param name="jobId">The ID of the job to analyse.</param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/v1/fine_tuning/jobs/{job_id}")]
        [Authorize]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Response1))]
        public virtual IActionResult JobsApiRoutesFineTuningGetFineTuningJob([FromRoute (Name = "job_id")][Required]Guid jobId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"job_type\" : \"completion\",\r\n  \"metadata\" : {\r\n    \"data_tokens\" : 9,\r\n    \"train_tokens_per_step\" : 2,\r\n    \"cost\" : 5.637376656633329,\r\n    \"cost_currency\" : \"cost_currency\",\r\n    \"estimated_start_time\" : 3,\r\n    \"expected_duration_seconds\" : 5,\r\n    \"train_tokens\" : 7\r\n  },\r\n  \"fine_tuned_model\" : \"fine_tuned_model\",\r\n  \"created_at\" : 0,\r\n  \"checkpoints\" : [ {\r\n    \"step_number\" : 9,\r\n    \"created_at\" : 3,\r\n    \"metrics\" : {\r\n      \"valid_loss\" : 2.3021358869347655,\r\n      \"valid_mean_token_accuracy\" : 7.061401241503109,\r\n      \"train_loss\" : 5.637376656633329\r\n    }\r\n  }, {\r\n    \"step_number\" : 9,\r\n    \"created_at\" : 3,\r\n    \"metrics\" : {\r\n      \"valid_loss\" : 2.3021358869347655,\r\n      \"valid_mean_token_accuracy\" : 7.061401241503109,\r\n      \"train_loss\" : 5.637376656633329\r\n    }\r\n  } ],\r\n  \"suffix\" : \"suffix\",\r\n  \"auto_start\" : true,\r\n  \"training_files\" : [ \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" ],\r\n  \"repositories\" : [ {\r\n    \"owner\" : \"owner\",\r\n    \"ref\" : \"ref\",\r\n    \"name\" : \"name\",\r\n    \"weight\" : 7.457744773683766,\r\n    \"type\" : \"github\",\r\n    \"commit_id\" : \"commit_id\"\r\n  }, {\r\n    \"owner\" : \"owner\",\r\n    \"ref\" : \"ref\",\r\n    \"name\" : \"name\",\r\n    \"weight\" : 7.457744773683766,\r\n    \"type\" : \"github\",\r\n    \"commit_id\" : \"commit_id\"\r\n  } ],\r\n  \"hyperparameters\" : {\r\n    \"fim_ratio\" : 0.684685269835264,\r\n    \"weight_decay\" : 0.7386281948385884,\r\n    \"training_steps\" : 1,\r\n    \"learning_rate\" : 0.41456080884278557,\r\n    \"epochs\" : 1.0246457001441578,\r\n    \"seq_len\" : 100,\r\n    \"warmup_fraction\" : 0.12315135367772556\r\n  },\r\n  \"model\" : \"open-mistral-7b\",\r\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\r\n  \"trained_tokens\" : 1,\r\n  \"modified_at\" : 6,\r\n  \"integrations\" : [ {\r\n    \"name\" : \"name\",\r\n    \"project\" : \"project\",\r\n    \"type\" : \"wandb\",\r\n    \"run_name\" : \"run_name\",\r\n    \"url\" : \"url\"\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"project\" : \"project\",\r\n    \"type\" : \"wandb\",\r\n    \"run_name\" : \"run_name\",\r\n    \"url\" : \"url\"\r\n  } ],\r\n  \"events\" : [ {\r\n    \"data\" : {\r\n      \"key\" : \"\"\r\n    },\r\n    \"name\" : \"name\",\r\n    \"created_at\" : 5\r\n  }, {\r\n    \"data\" : {\r\n      \"key\" : \"\"\r\n    },\r\n    \"name\" : \"name\",\r\n    \"created_at\" : 5\r\n  } ],\r\n  \"status\" : \"QUEUED\",\r\n  \"validation_files\" : [ \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" ],\r\n  \"object\" : \"job\"\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<Response1>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Fine Tuning Jobs
        /// </summary>
        /// <remarks>Get a list of fine-tuning jobs for your organization and user.</remarks>
        /// <param name="page">The page number of the results to be returned.</param>
        /// <param name="pageSize">The number of items to return per page.</param>
        /// <param name="model">The model name used for fine-tuning to filter on. When set, the other results are not displayed.</param>
        /// <param name="createdAfter">The date/time to filter on. When set, the results for previous creation times are not displayed.</param>
        /// <param name="createdBefore"></param>
        /// <param name="createdByMe">When set, only return results for jobs created by the API caller. Other results are not displayed.</param>
        /// <param name="status">The current job state to filter on. When set, the other results are not displayed.</param>
        /// <param name="wandbProject">The Weights and Biases project to filter on. When set, the other results are not displayed.</param>
        /// <param name="wandbName">The Weight and Biases run name to filter on. When set, the other results are not displayed.</param>
        /// <param name="suffix">The model suffix to filter on. When set, the other results are not displayed.</param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/v1/fine_tuning/jobs")]
        [Authorize]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(JobsOut))]
        public virtual IActionResult JobsApiRoutesFineTuningGetFineTuningJobs([FromQuery (Name = "page")]int? page, [FromQuery (Name = "page_size")]int? pageSize, [FromQuery (Name = "model")]string? model, [FromQuery (Name = "created_after")]DateTimeOffset? createdAfter, [FromQuery (Name = "created_before")]DateTimeOffset? createdBefore, [FromQuery (Name = "created_by_me")]bool? createdByMe, [FromQuery (Name = "status")]string? status, [FromQuery (Name = "wandb_project")]string? wandbProject, [FromQuery (Name = "wandb_name")]string? wandbName, [FromQuery (Name = "suffix")]string? suffix)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"total\" : 1,\r\n  \"data\" : [ {\r\n    \"job_type\" : \"completion\",\r\n    \"metadata\" : {\r\n      \"data_tokens\" : 9,\r\n      \"train_tokens_per_step\" : 2,\r\n      \"cost\" : 5.637376656633329,\r\n      \"cost_currency\" : \"cost_currency\",\r\n      \"estimated_start_time\" : 3,\r\n      \"expected_duration_seconds\" : 5,\r\n      \"train_tokens\" : 7\r\n    },\r\n    \"fine_tuned_model\" : \"fine_tuned_model\",\r\n    \"created_at\" : 0,\r\n    \"suffix\" : \"suffix\",\r\n    \"auto_start\" : true,\r\n    \"training_files\" : [ \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" ],\r\n    \"repositories\" : [ {\r\n      \"owner\" : \"owner\",\r\n      \"ref\" : \"ref\",\r\n      \"name\" : \"name\",\r\n      \"weight\" : 7.457744773683766,\r\n      \"type\" : \"github\",\r\n      \"commit_id\" : \"commit_id\"\r\n    }, {\r\n      \"owner\" : \"owner\",\r\n      \"ref\" : \"ref\",\r\n      \"name\" : \"name\",\r\n      \"weight\" : 7.457744773683766,\r\n      \"type\" : \"github\",\r\n      \"commit_id\" : \"commit_id\"\r\n    } ],\r\n    \"hyperparameters\" : {\r\n      \"fim_ratio\" : 0.684685269835264,\r\n      \"weight_decay\" : 0.7386281948385884,\r\n      \"training_steps\" : 1,\r\n      \"learning_rate\" : 0.41456080884278557,\r\n      \"epochs\" : 1.0246457001441578,\r\n      \"seq_len\" : 100,\r\n      \"warmup_fraction\" : 0.12315135367772556\r\n    },\r\n    \"model\" : \"open-mistral-7b\",\r\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\r\n    \"trained_tokens\" : 1,\r\n    \"modified_at\" : 6,\r\n    \"integrations\" : [ {\r\n      \"name\" : \"name\",\r\n      \"project\" : \"project\",\r\n      \"type\" : \"wandb\",\r\n      \"run_name\" : \"run_name\",\r\n      \"url\" : \"url\"\r\n    }, {\r\n      \"name\" : \"name\",\r\n      \"project\" : \"project\",\r\n      \"type\" : \"wandb\",\r\n      \"run_name\" : \"run_name\",\r\n      \"url\" : \"url\"\r\n    } ],\r\n    \"status\" : \"QUEUED\",\r\n    \"validation_files\" : [ \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" ],\r\n    \"object\" : \"job\"\r\n  }, {\r\n    \"job_type\" : \"completion\",\r\n    \"metadata\" : {\r\n      \"data_tokens\" : 9,\r\n      \"train_tokens_per_step\" : 2,\r\n      \"cost\" : 5.637376656633329,\r\n      \"cost_currency\" : \"cost_currency\",\r\n      \"estimated_start_time\" : 3,\r\n      \"expected_duration_seconds\" : 5,\r\n      \"train_tokens\" : 7\r\n    },\r\n    \"fine_tuned_model\" : \"fine_tuned_model\",\r\n    \"created_at\" : 0,\r\n    \"suffix\" : \"suffix\",\r\n    \"auto_start\" : true,\r\n    \"training_files\" : [ \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" ],\r\n    \"repositories\" : [ {\r\n      \"owner\" : \"owner\",\r\n      \"ref\" : \"ref\",\r\n      \"name\" : \"name\",\r\n      \"weight\" : 7.457744773683766,\r\n      \"type\" : \"github\",\r\n      \"commit_id\" : \"commit_id\"\r\n    }, {\r\n      \"owner\" : \"owner\",\r\n      \"ref\" : \"ref\",\r\n      \"name\" : \"name\",\r\n      \"weight\" : 7.457744773683766,\r\n      \"type\" : \"github\",\r\n      \"commit_id\" : \"commit_id\"\r\n    } ],\r\n    \"hyperparameters\" : {\r\n      \"fim_ratio\" : 0.684685269835264,\r\n      \"weight_decay\" : 0.7386281948385884,\r\n      \"training_steps\" : 1,\r\n      \"learning_rate\" : 0.41456080884278557,\r\n      \"epochs\" : 1.0246457001441578,\r\n      \"seq_len\" : 100,\r\n      \"warmup_fraction\" : 0.12315135367772556\r\n    },\r\n    \"model\" : \"open-mistral-7b\",\r\n    \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\r\n    \"trained_tokens\" : 1,\r\n    \"modified_at\" : 6,\r\n    \"integrations\" : [ {\r\n      \"name\" : \"name\",\r\n      \"project\" : \"project\",\r\n      \"type\" : \"wandb\",\r\n      \"run_name\" : \"run_name\",\r\n      \"url\" : \"url\"\r\n    }, {\r\n      \"name\" : \"name\",\r\n      \"project\" : \"project\",\r\n      \"type\" : \"wandb\",\r\n      \"run_name\" : \"run_name\",\r\n      \"url\" : \"url\"\r\n    } ],\r\n    \"status\" : \"QUEUED\",\r\n    \"validation_files\" : [ \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" ],\r\n    \"object\" : \"job\"\r\n  } ],\r\n  \"object\" : \"list\"\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<JobsOut>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Start Fine Tuning Job
        /// </summary>
        /// <remarks>Request the start of a validated fine tuning job.</remarks>
        /// <param name="jobId"></param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("/v1/fine_tuning/jobs/{job_id}/start")]
        [Authorize]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Response1))]
        public virtual IActionResult JobsApiRoutesFineTuningStartFineTuningJob([FromRoute (Name = "job_id")][Required]Guid jobId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"job_type\" : \"completion\",\r\n  \"metadata\" : {\r\n    \"data_tokens\" : 9,\r\n    \"train_tokens_per_step\" : 2,\r\n    \"cost\" : 5.637376656633329,\r\n    \"cost_currency\" : \"cost_currency\",\r\n    \"estimated_start_time\" : 3,\r\n    \"expected_duration_seconds\" : 5,\r\n    \"train_tokens\" : 7\r\n  },\r\n  \"fine_tuned_model\" : \"fine_tuned_model\",\r\n  \"created_at\" : 0,\r\n  \"checkpoints\" : [ {\r\n    \"step_number\" : 9,\r\n    \"created_at\" : 3,\r\n    \"metrics\" : {\r\n      \"valid_loss\" : 2.3021358869347655,\r\n      \"valid_mean_token_accuracy\" : 7.061401241503109,\r\n      \"train_loss\" : 5.637376656633329\r\n    }\r\n  }, {\r\n    \"step_number\" : 9,\r\n    \"created_at\" : 3,\r\n    \"metrics\" : {\r\n      \"valid_loss\" : 2.3021358869347655,\r\n      \"valid_mean_token_accuracy\" : 7.061401241503109,\r\n      \"train_loss\" : 5.637376656633329\r\n    }\r\n  } ],\r\n  \"suffix\" : \"suffix\",\r\n  \"auto_start\" : true,\r\n  \"training_files\" : [ \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" ],\r\n  \"repositories\" : [ {\r\n    \"owner\" : \"owner\",\r\n    \"ref\" : \"ref\",\r\n    \"name\" : \"name\",\r\n    \"weight\" : 7.457744773683766,\r\n    \"type\" : \"github\",\r\n    \"commit_id\" : \"commit_id\"\r\n  }, {\r\n    \"owner\" : \"owner\",\r\n    \"ref\" : \"ref\",\r\n    \"name\" : \"name\",\r\n    \"weight\" : 7.457744773683766,\r\n    \"type\" : \"github\",\r\n    \"commit_id\" : \"commit_id\"\r\n  } ],\r\n  \"hyperparameters\" : {\r\n    \"fim_ratio\" : 0.684685269835264,\r\n    \"weight_decay\" : 0.7386281948385884,\r\n    \"training_steps\" : 1,\r\n    \"learning_rate\" : 0.41456080884278557,\r\n    \"epochs\" : 1.0246457001441578,\r\n    \"seq_len\" : 100,\r\n    \"warmup_fraction\" : 0.12315135367772556\r\n  },\r\n  \"model\" : \"open-mistral-7b\",\r\n  \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\",\r\n  \"trained_tokens\" : 1,\r\n  \"modified_at\" : 6,\r\n  \"integrations\" : [ {\r\n    \"name\" : \"name\",\r\n    \"project\" : \"project\",\r\n    \"type\" : \"wandb\",\r\n    \"run_name\" : \"run_name\",\r\n    \"url\" : \"url\"\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"project\" : \"project\",\r\n    \"type\" : \"wandb\",\r\n    \"run_name\" : \"run_name\",\r\n    \"url\" : \"url\"\r\n  } ],\r\n  \"events\" : [ {\r\n    \"data\" : {\r\n      \"key\" : \"\"\r\n    },\r\n    \"name\" : \"name\",\r\n    \"created_at\" : 5\r\n  }, {\r\n    \"data\" : {\r\n      \"key\" : \"\"\r\n    },\r\n    \"name\" : \"name\",\r\n    \"created_at\" : 5\r\n  } ],\r\n  \"status\" : \"QUEUED\",\r\n  \"validation_files\" : [ \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" ],\r\n  \"object\" : \"job\"\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<Response1>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
