/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Constrains the tools available to the model to a pre-defined set. 
    /// </summary>
    [DataContract]
    public partial class ChatCompletionAllowedTools 
    {

        /// <summary>
        /// Constrains the tools available to the model to a pre-defined set.  `auto` allows the model to pick from among the allowed tools and generate a message.  `required` requires the model to call one or more of the allowed tools. 
        /// </summary>
        /// <value>Constrains the tools available to the model to a pre-defined set.  `auto` allows the model to pick from among the allowed tools and generate a message.  `required` requires the model to call one or more of the allowed tools. </value>
        
        public enum ModeEnum
        {
            
            /// <summary>
            /// Enum AutoEnum for auto
            /// </summary>
            [EnumMember(Value = "auto")]
            AutoEnum = 1,
            
            /// <summary>
            /// Enum RequiredEnum for required
            /// </summary>
            [EnumMember(Value = "required")]
            RequiredEnum = 2
        }

        /// <summary>
        /// Constrains the tools available to the model to a pre-defined set.  &#x60;auto&#x60; allows the model to pick from among the allowed tools and generate a message.  &#x60;required&#x60; requires the model to call one or more of the allowed tools. 
        /// </summary>
        /// <value>Constrains the tools available to the model to a pre-defined set.  &#x60;auto&#x60; allows the model to pick from among the allowed tools and generate a message.  &#x60;required&#x60; requires the model to call one or more of the allowed tools. </value>
        [Required]
        [DataMember(Name="mode", EmitDefaultValue=true)]
        public ModeEnum Mode { get; set; }

        /// <summary>
        /// A list of tool definitions that the model should be allowed to call.  For the Chat Completions API, the list of tool definitions might look like: &#x60;&#x60;&#x60;json [   { \&quot;type\&quot;: \&quot;function\&quot;, \&quot;function\&quot;: { \&quot;name\&quot;: \&quot;get_weather\&quot; } },   { \&quot;type\&quot;: \&quot;function\&quot;, \&quot;function\&quot;: { \&quot;name\&quot;: \&quot;get_time\&quot; } } ] &#x60;&#x60;&#x60; 
        /// </summary>
        /// <value>A list of tool definitions that the model should be allowed to call.  For the Chat Completions API, the list of tool definitions might look like: &#x60;&#x60;&#x60;json [   { \&quot;type\&quot;: \&quot;function\&quot;, \&quot;function\&quot;: { \&quot;name\&quot;: \&quot;get_weather\&quot; } },   { \&quot;type\&quot;: \&quot;function\&quot;, \&quot;function\&quot;: { \&quot;name\&quot;: \&quot;get_time\&quot; } } ] &#x60;&#x60;&#x60; </value>
        [Required]
        [DataMember(Name="tools", EmitDefaultValue=false)]
        public List<Dictionary<string, Object>> Tools { get; set; }

    }
}
