/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// A click action. 
    /// </summary>
    [DataContract]
    public partial class Click 
    {

        /// <summary>
        /// Specifies the event type. For a click action, this property is  always set to `click`. 
        /// </summary>
        /// <value>Specifies the event type. For a click action, this property is  always set to `click`. </value>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum ClickEnum for click
            /// </summary>
            [EnumMember(Value = "click")]
            ClickEnum = 1
        }

        /// <summary>
        /// Specifies the event type. For a click action, this property is  always set to &#x60;click&#x60;. 
        /// </summary>
        /// <value>Specifies the event type. For a click action, this property is  always set to &#x60;click&#x60;. </value>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; } = TypeEnum.ClickEnum;


        /// <summary>
        /// Indicates which mouse button was pressed during the click. One of `left`, `right`, `wheel`, `back`, or `forward`. 
        /// </summary>
        /// <value>Indicates which mouse button was pressed during the click. One of `left`, `right`, `wheel`, `back`, or `forward`. </value>
        
        public enum ButtonEnum
        {
            
            /// <summary>
            /// Enum LeftEnum for left
            /// </summary>
            [EnumMember(Value = "left")]
            LeftEnum = 1,
            
            /// <summary>
            /// Enum RightEnum for right
            /// </summary>
            [EnumMember(Value = "right")]
            RightEnum = 2,
            
            /// <summary>
            /// Enum WheelEnum for wheel
            /// </summary>
            [EnumMember(Value = "wheel")]
            WheelEnum = 3,
            
            /// <summary>
            /// Enum BackEnum for back
            /// </summary>
            [EnumMember(Value = "back")]
            BackEnum = 4,
            
            /// <summary>
            /// Enum ForwardEnum for forward
            /// </summary>
            [EnumMember(Value = "forward")]
            ForwardEnum = 5
        }

        /// <summary>
        /// Indicates which mouse button was pressed during the click. One of &#x60;left&#x60;, &#x60;right&#x60;, &#x60;wheel&#x60;, &#x60;back&#x60;, or &#x60;forward&#x60;. 
        /// </summary>
        /// <value>Indicates which mouse button was pressed during the click. One of &#x60;left&#x60;, &#x60;right&#x60;, &#x60;wheel&#x60;, &#x60;back&#x60;, or &#x60;forward&#x60;. </value>
        [Required]
        [DataMember(Name="button", EmitDefaultValue=true)]
        public ButtonEnum Button { get; set; }

        /// <summary>
        /// The x-coordinate where the click occurred. 
        /// </summary>
        /// <value>The x-coordinate where the click occurred. </value>
        [Required]
        [DataMember(Name="x", EmitDefaultValue=true)]
        public int X { get; set; }

        /// <summary>
        /// The y-coordinate where the click occurred. 
        /// </summary>
        /// <value>The y-coordinate where the click occurred. </value>
        [Required]
        [DataMember(Name="y", EmitDefaultValue=true)]
        public int Y { get; set; }

    }
}
