/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Combine multiple filters using &#x60;and&#x60; or &#x60;or&#x60;.
    /// </summary>
    [DataContract]
    public partial class CompoundFilter 
    {

        /// <summary>
        /// Type of operation: `and` or `or`.
        /// </summary>
        /// <value>Type of operation: `and` or `or`.</value>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum AndEnum for and
            /// </summary>
            [EnumMember(Value = "and")]
            AndEnum = 1,
            
            /// <summary>
            /// Enum OrEnum for or
            /// </summary>
            [EnumMember(Value = "or")]
            OrEnum = 2
        }

        /// <summary>
        /// Type of operation: &#x60;and&#x60; or &#x60;or&#x60;.
        /// </summary>
        /// <value>Type of operation: &#x60;and&#x60; or &#x60;or&#x60;.</value>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; }

        /// <summary>
        /// Array of filters to combine. Items can be &#x60;ComparisonFilter&#x60; or &#x60;CompoundFilter&#x60;.
        /// </summary>
        /// <value>Array of filters to combine. Items can be &#x60;ComparisonFilter&#x60; or &#x60;CompoundFilter&#x60;.</value>
        [Required]
        [DataMember(Name="filters", EmitDefaultValue=false)]
        public List<ComparisonFilter> Filters { get; set; }

    }
}
