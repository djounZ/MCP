/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// A tool call to a computer use tool. See the  [computer use guide](https://platform.openai.com/docs/guides/tools-computer-use) for more information. 
    /// </summary>
    [DataContract]
    public partial class ComputerToolCall 
    {

        /// <summary>
        /// The type of the computer call. Always `computer_call`.
        /// </summary>
        /// <value>The type of the computer call. Always `computer_call`.</value>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum ComputerCallEnum for computer_call
            /// </summary>
            [EnumMember(Value = "computer_call")]
            ComputerCallEnum = 1
        }

        /// <summary>
        /// The type of the computer call. Always &#x60;computer_call&#x60;.
        /// </summary>
        /// <value>The type of the computer call. Always &#x60;computer_call&#x60;.</value>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; } = TypeEnum.ComputerCallEnum;

        /// <summary>
        /// The unique ID of the computer call.
        /// </summary>
        /// <value>The unique ID of the computer call.</value>
        [Required]
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// An identifier used when responding to the tool call with output. 
        /// </summary>
        /// <value>An identifier used when responding to the tool call with output. </value>
        [Required]
        [DataMember(Name="call_id", EmitDefaultValue=false)]
        public string CallId { get; set; }

        /// <summary>
        /// Gets or Sets Action
        /// </summary>
        [Required]
        [DataMember(Name="action", EmitDefaultValue=false)]
        public ComputerAction Action { get; set; }

        /// <summary>
        /// The pending safety checks for the computer call. 
        /// </summary>
        /// <value>The pending safety checks for the computer call. </value>
        [Required]
        [DataMember(Name="pending_safety_checks", EmitDefaultValue=false)]
        public List<ComputerToolCallSafetyCheck> PendingSafetyChecks { get; set; }


        /// <summary>
        /// The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API. 
        /// </summary>
        /// <value>The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API. </value>
        
        public enum StatusEnum
        {
            
            /// <summary>
            /// Enum InProgressEnum for in_progress
            /// </summary>
            [EnumMember(Value = "in_progress")]
            InProgressEnum = 1,
            
            /// <summary>
            /// Enum CompletedEnum for completed
            /// </summary>
            [EnumMember(Value = "completed")]
            CompletedEnum = 2,
            
            /// <summary>
            /// Enum IncompleteEnum for incomplete
            /// </summary>
            [EnumMember(Value = "incomplete")]
            IncompleteEnum = 3
        }

        /// <summary>
        /// The status of the item. One of &#x60;in_progress&#x60;, &#x60;completed&#x60;, or &#x60;incomplete&#x60;. Populated when items are returned via API. 
        /// </summary>
        /// <value>The status of the item. One of &#x60;in_progress&#x60;, &#x60;completed&#x60;, or &#x60;incomplete&#x60;. Populated when items are returned via API. </value>
        [Required]
        [DataMember(Name="status", EmitDefaultValue=true)]
        public StatusEnum Status { get; set; }

    }
}
