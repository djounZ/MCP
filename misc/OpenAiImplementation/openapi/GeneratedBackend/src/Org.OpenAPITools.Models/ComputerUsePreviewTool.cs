/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// A tool that controls a virtual computer. Learn more about the [computer tool](https://platform.openai.com/docs/guides/tools-computer-use).
    /// </summary>
    [DataContract]
    public partial class ComputerUsePreviewTool 
    {

        /// <summary>
        /// The type of the computer use tool. Always `computer_use_preview`.
        /// </summary>
        /// <value>The type of the computer use tool. Always `computer_use_preview`.</value>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum ComputerUsePreviewEnum for computer_use_preview
            /// </summary>
            [EnumMember(Value = "computer_use_preview")]
            ComputerUsePreviewEnum = 1
        }

        /// <summary>
        /// The type of the computer use tool. Always &#x60;computer_use_preview&#x60;.
        /// </summary>
        /// <value>The type of the computer use tool. Always &#x60;computer_use_preview&#x60;.</value>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; } = TypeEnum.ComputerUsePreviewEnum;


        /// <summary>
        /// The type of computer environment to control.
        /// </summary>
        /// <value>The type of computer environment to control.</value>
        
        public enum VarEnvironmentEnum
        {
            
            /// <summary>
            /// Enum WindowsEnum for windows
            /// </summary>
            [EnumMember(Value = "windows")]
            WindowsEnum = 1,
            
            /// <summary>
            /// Enum MacEnum for mac
            /// </summary>
            [EnumMember(Value = "mac")]
            MacEnum = 2,
            
            /// <summary>
            /// Enum LinuxEnum for linux
            /// </summary>
            [EnumMember(Value = "linux")]
            LinuxEnum = 3,
            
            /// <summary>
            /// Enum UbuntuEnum for ubuntu
            /// </summary>
            [EnumMember(Value = "ubuntu")]
            UbuntuEnum = 4,
            
            /// <summary>
            /// Enum BrowserEnum for browser
            /// </summary>
            [EnumMember(Value = "browser")]
            BrowserEnum = 5
        }

        /// <summary>
        /// The type of computer environment to control.
        /// </summary>
        /// <value>The type of computer environment to control.</value>
        [Required]
        [DataMember(Name="environment", EmitDefaultValue=true)]
        public VarEnvironmentEnum VarEnvironment { get; set; }

        /// <summary>
        /// The width of the computer display.
        /// </summary>
        /// <value>The width of the computer display.</value>
        [Required]
        [DataMember(Name="display_width", EmitDefaultValue=true)]
        public int DisplayWidth { get; set; }

        /// <summary>
        /// The height of the computer display.
        /// </summary>
        /// <value>The height of the computer display.</value>
        [Required]
        [DataMember(Name="display_height", EmitDefaultValue=true)]
        public int DisplayHeight { get; set; }

    }
}
