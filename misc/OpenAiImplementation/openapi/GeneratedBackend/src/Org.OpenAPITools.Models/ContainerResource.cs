/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ContainerResource 
    {
        /// <summary>
        /// Unique identifier for the container.
        /// </summary>
        /// <value>Unique identifier for the container.</value>
        [Required]
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// The type of this object.
        /// </summary>
        /// <value>The type of this object.</value>
        [Required]
        [DataMember(Name="object", EmitDefaultValue=false)]
        public string Object { get; set; }

        /// <summary>
        /// Name of the container.
        /// </summary>
        /// <value>Name of the container.</value>
        [Required]
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Unix timestamp (in seconds) when the container was created.
        /// </summary>
        /// <value>Unix timestamp (in seconds) when the container was created.</value>
        [Required]
        [DataMember(Name="created_at", EmitDefaultValue=true)]
        public int CreatedAt { get; set; }

        /// <summary>
        /// Status of the container (e.g., active, deleted).
        /// </summary>
        /// <value>Status of the container (e.g., active, deleted).</value>
        [Required]
        [DataMember(Name="status", EmitDefaultValue=false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets ExpiresAfter
        /// </summary>
        [DataMember(Name="expires_after", EmitDefaultValue=false)]
        public ContainerResourceExpiresAfter? ExpiresAfter { get; set; }

    }
}
