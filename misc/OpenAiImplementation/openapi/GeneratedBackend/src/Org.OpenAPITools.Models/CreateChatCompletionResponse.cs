/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Represents a chat completion response returned by model, based on the provided input.
    /// </summary>
    [DataContract]
    public partial class CreateChatCompletionResponse 
    {
        /// <summary>
        /// A unique identifier for the chat completion.
        /// </summary>
        /// <value>A unique identifier for the chat completion.</value>
        [Required]
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// A list of chat completion choices. Can be more than one if &#x60;n&#x60; is greater than 1.
        /// </summary>
        /// <value>A list of chat completion choices. Can be more than one if &#x60;n&#x60; is greater than 1.</value>
        [Required]
        [DataMember(Name="choices", EmitDefaultValue=false)]
        public List<CreateChatCompletionResponseChoicesInner> Choices { get; set; }

        /// <summary>
        /// The Unix timestamp (in seconds) of when the chat completion was created.
        /// </summary>
        /// <value>The Unix timestamp (in seconds) of when the chat completion was created.</value>
        [Required]
        [DataMember(Name="created", EmitDefaultValue=true)]
        public int Created { get; set; }

        /// <summary>
        /// The model used for the chat completion.
        /// </summary>
        /// <value>The model used for the chat completion.</value>
        [Required]
        [DataMember(Name="model", EmitDefaultValue=false)]
        public string Model { get; set; }

        /// <summary>
        /// Gets or Sets ServiceTier
        /// </summary>
        [DataMember(Name="service_tier", EmitDefaultValue=true)]
        public ServiceTier ServiceTier { get; set; }

        /// <summary>
        /// This fingerprint represents the backend configuration that the model runs with.  Can be used in conjunction with the &#x60;seed&#x60; request parameter to understand when backend changes have been made that might impact determinism. 
        /// </summary>
        /// <value>This fingerprint represents the backend configuration that the model runs with.  Can be used in conjunction with the &#x60;seed&#x60; request parameter to understand when backend changes have been made that might impact determinism. </value>
        [DataMember(Name="system_fingerprint", EmitDefaultValue=false)]
        public string? SystemFingerprint { get; set; }


        /// <summary>
        /// The object type, which is always `chat.completion`.
        /// </summary>
        /// <value>The object type, which is always `chat.completion`.</value>
        
        public enum ObjectEnum
        {
            
            /// <summary>
            /// Enum ChatCompletionEnum for chat.completion
            /// </summary>
            [EnumMember(Value = "chat.completion")]
            ChatCompletionEnum = 1
        }

        /// <summary>
        /// The object type, which is always &#x60;chat.completion&#x60;.
        /// </summary>
        /// <value>The object type, which is always &#x60;chat.completion&#x60;.</value>
        [Required]
        [DataMember(Name="object", EmitDefaultValue=true)]
        public ObjectEnum Object { get; set; }

        /// <summary>
        /// Gets or Sets Usage
        /// </summary>
        [DataMember(Name="usage", EmitDefaultValue=false)]
        public CompletionUsage? Usage { get; set; }

    }
}
