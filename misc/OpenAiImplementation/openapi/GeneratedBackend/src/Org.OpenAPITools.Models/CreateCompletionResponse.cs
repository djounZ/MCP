/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Represents a completion response from the API. Note: both the streamed and non-streamed response objects share the same shape (unlike the chat endpoint). 
    /// </summary>
    [DataContract]
    public partial class CreateCompletionResponse 
    {
        /// <summary>
        /// A unique identifier for the completion.
        /// </summary>
        /// <value>A unique identifier for the completion.</value>
        [Required]
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// The list of completion choices the model generated for the input prompt.
        /// </summary>
        /// <value>The list of completion choices the model generated for the input prompt.</value>
        [Required]
        [DataMember(Name="choices", EmitDefaultValue=false)]
        public List<CreateCompletionResponseChoicesInner> Choices { get; set; }

        /// <summary>
        /// The Unix timestamp (in seconds) of when the completion was created.
        /// </summary>
        /// <value>The Unix timestamp (in seconds) of when the completion was created.</value>
        [Required]
        [DataMember(Name="created", EmitDefaultValue=true)]
        public int Created { get; set; }

        /// <summary>
        /// The model used for completion.
        /// </summary>
        /// <value>The model used for completion.</value>
        [Required]
        [DataMember(Name="model", EmitDefaultValue=false)]
        public string Model { get; set; }

        /// <summary>
        /// This fingerprint represents the backend configuration that the model runs with.  Can be used in conjunction with the &#x60;seed&#x60; request parameter to understand when backend changes have been made that might impact determinism. 
        /// </summary>
        /// <value>This fingerprint represents the backend configuration that the model runs with.  Can be used in conjunction with the &#x60;seed&#x60; request parameter to understand when backend changes have been made that might impact determinism. </value>
        [DataMember(Name="system_fingerprint", EmitDefaultValue=false)]
        public string? SystemFingerprint { get; set; }


        /// <summary>
        /// The object type, which is always \"text_completion\"
        /// </summary>
        /// <value>The object type, which is always \"text_completion\"</value>
        
        public enum ObjectEnum
        {
            
            /// <summary>
            /// Enum TextCompletionEnum for text_completion
            /// </summary>
            [EnumMember(Value = "text_completion")]
            TextCompletionEnum = 1
        }

        /// <summary>
        /// The object type, which is always \&quot;text_completion\&quot;
        /// </summary>
        /// <value>The object type, which is always \&quot;text_completion\&quot;</value>
        [Required]
        [DataMember(Name="object", EmitDefaultValue=true)]
        public ObjectEnum Object { get; set; }

        /// <summary>
        /// Gets or Sets Usage
        /// </summary>
        [DataMember(Name="usage", EmitDefaultValue=false)]
        public CompletionUsage? Usage { get; set; }

    }
}
