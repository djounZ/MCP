/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class CreateEvalRequest 
    {
        /// <summary>
        /// The name of the evaluation.
        /// </summary>
        /// <value>The name of the evaluation.</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string? Name { get; set; }

        /// <summary>
        /// Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard.   Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters. 
        /// </summary>
        /// <value>Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard.   Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters. </value>
        [DataMember(Name="metadata", EmitDefaultValue=false)]
        public Dictionary<string, string> Metadata { get; set; }

        /// <summary>
        /// Gets or Sets DataSourceConfig
        /// </summary>
        [Required]
        [DataMember(Name="data_source_config", EmitDefaultValue=false)]
        public CreateEvalRequestDataSourceConfig DataSourceConfig { get; set; }

        /// <summary>
        /// A list of graders for all eval runs in this group. Graders can reference variables in the data source using double curly braces notation, like &#x60;{{item.variable_name}}&#x60;. To reference the model&#39;s output, use the &#x60;sample&#x60; namespace (ie, &#x60;{{sample.output_text}}&#x60;).
        /// </summary>
        /// <value>A list of graders for all eval runs in this group. Graders can reference variables in the data source using double curly braces notation, like &#x60;{{item.variable_name}}&#x60;. To reference the model&#39;s output, use the &#x60;sample&#x60; namespace (ie, &#x60;{{sample.output_text}}&#x60;).</value>
        [Required]
        [DataMember(Name="testing_criteria", EmitDefaultValue=false)]
        public List<CreateEvalRequestTestingCriteriaInner> TestingCriteria { get; set; }

    }
}
