/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using JsonSubTypes;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Determines what populates the &#x60;item&#x60; namespace in this run&#39;s data source.
    /// </summary>
    [DataContract]
    public partial class CreateEvalResponsesRunDataSourceSource 
    {

        /// <summary>
        /// The type of jsonl source. Always `file_content`.
        /// </summary>
        /// <value>The type of jsonl source. Always `file_content`.</value>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum FileContentEnum for file_content
            /// </summary>
            [EnumMember(Value = "file_content")]
            FileContentEnum = 1,
            
            /// <summary>
            /// Enum FileIdEnum for file_id
            /// </summary>
            [EnumMember(Value = "file_id")]
            FileIdEnum = 2,
            
            /// <summary>
            /// Enum ResponsesEnum for responses
            /// </summary>
            [EnumMember(Value = "responses")]
            ResponsesEnum = 3
        }

        /// <summary>
        /// The type of jsonl source. Always &#x60;file_content&#x60;.
        /// </summary>
        /// <value>The type of jsonl source. Always &#x60;file_content&#x60;.</value>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; } = TypeEnum.FileContentEnum;

        /// <summary>
        /// The content of the jsonl file.
        /// </summary>
        /// <value>The content of the jsonl file.</value>
        [Required]
        [DataMember(Name="content", EmitDefaultValue=false)]
        public List<EvalJsonlFileContentSourceContentInner> Content { get; set; }

        /// <summary>
        /// The identifier of the file.
        /// </summary>
        /// <value>The identifier of the file.</value>
        [Required]
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Metadata filter for the responses. This is a query parameter used to select responses.
        /// </summary>
        /// <value>Metadata filter for the responses. This is a query parameter used to select responses.</value>
        [DataMember(Name="metadata", EmitDefaultValue=false)]
        public Object? Metadata { get; set; }

        /// <summary>
        /// The name of the model to find responses for. This is a query parameter used to select responses.
        /// </summary>
        /// <value>The name of the model to find responses for. This is a query parameter used to select responses.</value>
        [DataMember(Name="model", EmitDefaultValue=false)]
        public string? Model { get; set; }

        /// <summary>
        /// Optional string to search the &#39;instructions&#39; field. This is a query parameter used to select responses.
        /// </summary>
        /// <value>Optional string to search the &#39;instructions&#39; field. This is a query parameter used to select responses.</value>
        [DataMember(Name="instructions_search", EmitDefaultValue=false)]
        public string? InstructionsSearch { get; set; }

        /// <summary>
        /// Only include items created after this timestamp (inclusive). This is a query parameter used to select responses.
        /// </summary>
        /// <value>Only include items created after this timestamp (inclusive). This is a query parameter used to select responses.</value>
        [DataMember(Name="created_after", EmitDefaultValue=true)]
        public int? CreatedAfter { get; set; }

        /// <summary>
        /// Only include items created before this timestamp (inclusive). This is a query parameter used to select responses.
        /// </summary>
        /// <value>Only include items created before this timestamp (inclusive). This is a query parameter used to select responses.</value>
        [DataMember(Name="created_before", EmitDefaultValue=true)]
        public int? CreatedBefore { get; set; }

        /// <summary>
        /// Optional reasoning effort parameter. This is a query parameter used to select responses.
        /// </summary>
        /// <value>Optional reasoning effort parameter. This is a query parameter used to select responses.</value>
        [DataMember(Name="reasoning_effort", EmitDefaultValue=true)]
        public ReasoningEffort ReasoningEffort { get; set; }

        /// <summary>
        /// Sampling temperature. This is a query parameter used to select responses.
        /// </summary>
        /// <value>Sampling temperature. This is a query parameter used to select responses.</value>
        [DataMember(Name="temperature", EmitDefaultValue=true)]
        public decimal? Temperature { get; set; }

        /// <summary>
        /// Nucleus sampling parameter. This is a query parameter used to select responses.
        /// </summary>
        /// <value>Nucleus sampling parameter. This is a query parameter used to select responses.</value>
        [DataMember(Name="top_p", EmitDefaultValue=true)]
        public decimal? TopP { get; set; }

        /// <summary>
        /// List of user identifiers. This is a query parameter used to select responses.
        /// </summary>
        /// <value>List of user identifiers. This is a query parameter used to select responses.</value>
        [DataMember(Name="users", EmitDefaultValue=false)]
        public List<string> Users { get; set; }

        /// <summary>
        /// List of tool names. This is a query parameter used to select responses.
        /// </summary>
        /// <value>List of tool names. This is a query parameter used to select responses.</value>
        [DataMember(Name="tools", EmitDefaultValue=false)]
        public List<string> Tools { get; set; }

    }
}
