/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// A list of the categories along with the input type(s) that the score applies to.
    /// </summary>
    [DataContract]
    public partial class CreateModerationResponseResultsInnerCategoryAppliedInputTypes 
    {

        /// <summary>
        /// Gets or Sets Hate
        /// </summary>
        
        public enum HateEnum
        {
            
            /// <summary>
            /// Enum TextEnum for text
            /// </summary>
            [EnumMember(Value = "text")]
            TextEnum = 1
        }

        /// <summary>
        /// The applied input type(s) for the category &#39;hate&#39;.
        /// </summary>
        /// <value>The applied input type(s) for the category &#39;hate&#39;.</value>
        [Required]
        [DataMember(Name="hate", EmitDefaultValue=false)]
        public List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.HateEnum> Hate { get; set; }


        /// <summary>
        /// Gets or Sets HateThreatening
        /// </summary>
        
        public enum HateThreateningEnum
        {
            
            /// <summary>
            /// Enum TextEnum for text
            /// </summary>
            [EnumMember(Value = "text")]
            TextEnum = 1
        }

        /// <summary>
        /// The applied input type(s) for the category &#39;hate/threatening&#39;.
        /// </summary>
        /// <value>The applied input type(s) for the category &#39;hate/threatening&#39;.</value>
        [Required]
        [DataMember(Name="hate/threatening", EmitDefaultValue=false)]
        public List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.HateThreateningEnum> HateThreatening { get; set; }


        /// <summary>
        /// Gets or Sets Harassment
        /// </summary>
        
        public enum HarassmentEnum
        {
            
            /// <summary>
            /// Enum TextEnum for text
            /// </summary>
            [EnumMember(Value = "text")]
            TextEnum = 1
        }

        /// <summary>
        /// The applied input type(s) for the category &#39;harassment&#39;.
        /// </summary>
        /// <value>The applied input type(s) for the category &#39;harassment&#39;.</value>
        [Required]
        [DataMember(Name="harassment", EmitDefaultValue=false)]
        public List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.HarassmentEnum> Harassment { get; set; }


        /// <summary>
        /// Gets or Sets HarassmentThreatening
        /// </summary>
        
        public enum HarassmentThreateningEnum
        {
            
            /// <summary>
            /// Enum TextEnum for text
            /// </summary>
            [EnumMember(Value = "text")]
            TextEnum = 1
        }

        /// <summary>
        /// The applied input type(s) for the category &#39;harassment/threatening&#39;.
        /// </summary>
        /// <value>The applied input type(s) for the category &#39;harassment/threatening&#39;.</value>
        [Required]
        [DataMember(Name="harassment/threatening", EmitDefaultValue=false)]
        public List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.HarassmentThreateningEnum> HarassmentThreatening { get; set; }


        /// <summary>
        /// Gets or Sets Illicit
        /// </summary>
        
        public enum IllicitEnum
        {
            
            /// <summary>
            /// Enum TextEnum for text
            /// </summary>
            [EnumMember(Value = "text")]
            TextEnum = 1
        }

        /// <summary>
        /// The applied input type(s) for the category &#39;illicit&#39;.
        /// </summary>
        /// <value>The applied input type(s) for the category &#39;illicit&#39;.</value>
        [Required]
        [DataMember(Name="illicit", EmitDefaultValue=false)]
        public List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.IllicitEnum> Illicit { get; set; }


        /// <summary>
        /// Gets or Sets IllicitViolent
        /// </summary>
        
        public enum IllicitViolentEnum
        {
            
            /// <summary>
            /// Enum TextEnum for text
            /// </summary>
            [EnumMember(Value = "text")]
            TextEnum = 1
        }

        /// <summary>
        /// The applied input type(s) for the category &#39;illicit/violent&#39;.
        /// </summary>
        /// <value>The applied input type(s) for the category &#39;illicit/violent&#39;.</value>
        [Required]
        [DataMember(Name="illicit/violent", EmitDefaultValue=false)]
        public List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.IllicitViolentEnum> IllicitViolent { get; set; }


        /// <summary>
        /// Gets or Sets SelfHarm
        /// </summary>
        
        public enum SelfHarmEnum
        {
            
            /// <summary>
            /// Enum TextEnum for text
            /// </summary>
            [EnumMember(Value = "text")]
            TextEnum = 1,
            
            /// <summary>
            /// Enum ImageEnum for image
            /// </summary>
            [EnumMember(Value = "image")]
            ImageEnum = 2
        }

        /// <summary>
        /// The applied input type(s) for the category &#39;self-harm&#39;.
        /// </summary>
        /// <value>The applied input type(s) for the category &#39;self-harm&#39;.</value>
        [Required]
        [DataMember(Name="self-harm", EmitDefaultValue=false)]
        public List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.SelfHarmEnum> SelfHarm { get; set; }


        /// <summary>
        /// Gets or Sets SelfHarmIntent
        /// </summary>
        
        public enum SelfHarmIntentEnum
        {
            
            /// <summary>
            /// Enum TextEnum for text
            /// </summary>
            [EnumMember(Value = "text")]
            TextEnum = 1,
            
            /// <summary>
            /// Enum ImageEnum for image
            /// </summary>
            [EnumMember(Value = "image")]
            ImageEnum = 2
        }

        /// <summary>
        /// The applied input type(s) for the category &#39;self-harm/intent&#39;.
        /// </summary>
        /// <value>The applied input type(s) for the category &#39;self-harm/intent&#39;.</value>
        [Required]
        [DataMember(Name="self-harm/intent", EmitDefaultValue=false)]
        public List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.SelfHarmIntentEnum> SelfHarmIntent { get; set; }


        /// <summary>
        /// Gets or Sets SelfHarmInstructions
        /// </summary>
        
        public enum SelfHarmInstructionsEnum
        {
            
            /// <summary>
            /// Enum TextEnum for text
            /// </summary>
            [EnumMember(Value = "text")]
            TextEnum = 1,
            
            /// <summary>
            /// Enum ImageEnum for image
            /// </summary>
            [EnumMember(Value = "image")]
            ImageEnum = 2
        }

        /// <summary>
        /// The applied input type(s) for the category &#39;self-harm/instructions&#39;.
        /// </summary>
        /// <value>The applied input type(s) for the category &#39;self-harm/instructions&#39;.</value>
        [Required]
        [DataMember(Name="self-harm/instructions", EmitDefaultValue=false)]
        public List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.SelfHarmInstructionsEnum> SelfHarmInstructions { get; set; }


        /// <summary>
        /// Gets or Sets Sexual
        /// </summary>
        
        public enum SexualEnum
        {
            
            /// <summary>
            /// Enum TextEnum for text
            /// </summary>
            [EnumMember(Value = "text")]
            TextEnum = 1,
            
            /// <summary>
            /// Enum ImageEnum for image
            /// </summary>
            [EnumMember(Value = "image")]
            ImageEnum = 2
        }

        /// <summary>
        /// The applied input type(s) for the category &#39;sexual&#39;.
        /// </summary>
        /// <value>The applied input type(s) for the category &#39;sexual&#39;.</value>
        [Required]
        [DataMember(Name="sexual", EmitDefaultValue=false)]
        public List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.SexualEnum> Sexual { get; set; }


        /// <summary>
        /// Gets or Sets SexualMinors
        /// </summary>
        
        public enum SexualMinorsEnum
        {
            
            /// <summary>
            /// Enum TextEnum for text
            /// </summary>
            [EnumMember(Value = "text")]
            TextEnum = 1
        }

        /// <summary>
        /// The applied input type(s) for the category &#39;sexual/minors&#39;.
        /// </summary>
        /// <value>The applied input type(s) for the category &#39;sexual/minors&#39;.</value>
        [Required]
        [DataMember(Name="sexual/minors", EmitDefaultValue=false)]
        public List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.SexualMinorsEnum> SexualMinors { get; set; }


        /// <summary>
        /// Gets or Sets Violence
        /// </summary>
        
        public enum ViolenceEnum
        {
            
            /// <summary>
            /// Enum TextEnum for text
            /// </summary>
            [EnumMember(Value = "text")]
            TextEnum = 1,
            
            /// <summary>
            /// Enum ImageEnum for image
            /// </summary>
            [EnumMember(Value = "image")]
            ImageEnum = 2
        }

        /// <summary>
        /// The applied input type(s) for the category &#39;violence&#39;.
        /// </summary>
        /// <value>The applied input type(s) for the category &#39;violence&#39;.</value>
        [Required]
        [DataMember(Name="violence", EmitDefaultValue=false)]
        public List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.ViolenceEnum> Violence { get; set; }


        /// <summary>
        /// Gets or Sets ViolenceGraphic
        /// </summary>
        
        public enum ViolenceGraphicEnum
        {
            
            /// <summary>
            /// Enum TextEnum for text
            /// </summary>
            [EnumMember(Value = "text")]
            TextEnum = 1,
            
            /// <summary>
            /// Enum ImageEnum for image
            /// </summary>
            [EnumMember(Value = "image")]
            ImageEnum = 2
        }

        /// <summary>
        /// The applied input type(s) for the category &#39;violence/graphic&#39;.
        /// </summary>
        /// <value>The applied input type(s) for the category &#39;violence/graphic&#39;.</value>
        [Required]
        [DataMember(Name="violence/graphic", EmitDefaultValue=false)]
        public List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.ViolenceGraphicEnum> ViolenceGraphic { get; set; }

    }
}
