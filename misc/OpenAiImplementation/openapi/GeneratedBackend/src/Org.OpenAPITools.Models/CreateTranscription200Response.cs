/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class CreateTranscription200Response 
    {
        /// <summary>
        /// The transcribed text.
        /// </summary>
        /// <value>The transcribed text.</value>
        [Required]
        [DataMember(Name="text", EmitDefaultValue=false)]
        public string Text { get; set; }

        /// <summary>
        /// The log probabilities of the tokens in the transcription. Only returned with the models &#x60;gpt-4o-transcribe&#x60; and &#x60;gpt-4o-mini-transcribe&#x60; if &#x60;logprobs&#x60; is added to the &#x60;include&#x60; array. 
        /// </summary>
        /// <value>The log probabilities of the tokens in the transcription. Only returned with the models &#x60;gpt-4o-transcribe&#x60; and &#x60;gpt-4o-mini-transcribe&#x60; if &#x60;logprobs&#x60; is added to the &#x60;include&#x60; array. </value>
        [DataMember(Name="logprobs", EmitDefaultValue=false)]
        public List<CreateTranscriptionResponseJsonLogprobsInner> Logprobs { get; set; }

        /// <summary>
        /// Gets or Sets Usage
        /// </summary>
        [DataMember(Name="usage", EmitDefaultValue=false)]
        public TranscriptTextUsageDuration? Usage { get; set; }

        /// <summary>
        /// The language of the input audio.
        /// </summary>
        /// <value>The language of the input audio.</value>
        [Required]
        [DataMember(Name="language", EmitDefaultValue=false)]
        public string Language { get; set; }

        /// <summary>
        /// The duration of the input audio.
        /// </summary>
        /// <value>The duration of the input audio.</value>
        [Required]
        [DataMember(Name="duration", EmitDefaultValue=true)]
        public decimal Duration { get; set; }

        /// <summary>
        /// Extracted words and their corresponding timestamps.
        /// </summary>
        /// <value>Extracted words and their corresponding timestamps.</value>
        [DataMember(Name="words", EmitDefaultValue=false)]
        public List<TranscriptionWord> Words { get; set; }

        /// <summary>
        /// Segments of the transcribed text and their corresponding details.
        /// </summary>
        /// <value>Segments of the transcribed text and their corresponding details.</value>
        [DataMember(Name="segments", EmitDefaultValue=false)]
        public List<TranscriptionSegment> Segments { get; set; }

    }
}
