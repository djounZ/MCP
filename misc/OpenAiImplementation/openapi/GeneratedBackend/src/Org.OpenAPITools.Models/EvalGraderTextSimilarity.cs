/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class EvalGraderTextSimilarity 
    {

        /// <summary>
        /// The type of grader.
        /// </summary>
        /// <value>The type of grader.</value>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum TextSimilarityEnum for text_similarity
            /// </summary>
            [EnumMember(Value = "text_similarity")]
            TextSimilarityEnum = 1
        }

        /// <summary>
        /// The type of grader.
        /// </summary>
        /// <value>The type of grader.</value>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; } = TypeEnum.TextSimilarityEnum;

        /// <summary>
        /// The name of the grader.
        /// </summary>
        /// <value>The name of the grader.</value>
        [Required]
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// The text being graded.
        /// </summary>
        /// <value>The text being graded.</value>
        [Required]
        [DataMember(Name="input", EmitDefaultValue=false)]
        public string Input { get; set; }

        /// <summary>
        /// The text being graded against.
        /// </summary>
        /// <value>The text being graded against.</value>
        [Required]
        [DataMember(Name="reference", EmitDefaultValue=false)]
        public string Reference { get; set; }


        /// <summary>
        /// The evaluation metric to use. One of `fuzzy_match`, `bleu`, `gleu`, `meteor`, `rouge_1`, `rouge_2`, `rouge_3`, `rouge_4`, `rouge_5`, or `rouge_l`.
        /// </summary>
        /// <value>The evaluation metric to use. One of `fuzzy_match`, `bleu`, `gleu`, `meteor`, `rouge_1`, `rouge_2`, `rouge_3`, `rouge_4`, `rouge_5`, or `rouge_l`.</value>
        
        public enum EvaluationMetricEnum
        {
            
            /// <summary>
            /// Enum FuzzyMatchEnum for fuzzy_match
            /// </summary>
            [EnumMember(Value = "fuzzy_match")]
            FuzzyMatchEnum = 1,
            
            /// <summary>
            /// Enum BleuEnum for bleu
            /// </summary>
            [EnumMember(Value = "bleu")]
            BleuEnum = 2,
            
            /// <summary>
            /// Enum GleuEnum for gleu
            /// </summary>
            [EnumMember(Value = "gleu")]
            GleuEnum = 3,
            
            /// <summary>
            /// Enum MeteorEnum for meteor
            /// </summary>
            [EnumMember(Value = "meteor")]
            MeteorEnum = 4,
            
            /// <summary>
            /// Enum Rouge1Enum for rouge_1
            /// </summary>
            [EnumMember(Value = "rouge_1")]
            Rouge1Enum = 5,
            
            /// <summary>
            /// Enum Rouge2Enum for rouge_2
            /// </summary>
            [EnumMember(Value = "rouge_2")]
            Rouge2Enum = 6,
            
            /// <summary>
            /// Enum Rouge3Enum for rouge_3
            /// </summary>
            [EnumMember(Value = "rouge_3")]
            Rouge3Enum = 7,
            
            /// <summary>
            /// Enum Rouge4Enum for rouge_4
            /// </summary>
            [EnumMember(Value = "rouge_4")]
            Rouge4Enum = 8,
            
            /// <summary>
            /// Enum Rouge5Enum for rouge_5
            /// </summary>
            [EnumMember(Value = "rouge_5")]
            Rouge5Enum = 9,
            
            /// <summary>
            /// Enum RougeLEnum for rouge_l
            /// </summary>
            [EnumMember(Value = "rouge_l")]
            RougeLEnum = 10
        }

        /// <summary>
        /// The evaluation metric to use. One of &#x60;fuzzy_match&#x60;, &#x60;bleu&#x60;, &#x60;gleu&#x60;, &#x60;meteor&#x60;, &#x60;rouge_1&#x60;, &#x60;rouge_2&#x60;, &#x60;rouge_3&#x60;, &#x60;rouge_4&#x60;, &#x60;rouge_5&#x60;, or &#x60;rouge_l&#x60;.
        /// </summary>
        /// <value>The evaluation metric to use. One of &#x60;fuzzy_match&#x60;, &#x60;bleu&#x60;, &#x60;gleu&#x60;, &#x60;meteor&#x60;, &#x60;rouge_1&#x60;, &#x60;rouge_2&#x60;, &#x60;rouge_3&#x60;, &#x60;rouge_4&#x60;, &#x60;rouge_5&#x60;, or &#x60;rouge_l&#x60;.</value>
        [Required]
        [DataMember(Name="evaluation_metric", EmitDefaultValue=true)]
        public EvaluationMetricEnum EvaluationMetric { get; set; }

        /// <summary>
        /// The threshold for the score.
        /// </summary>
        /// <value>The threshold for the score.</value>
        [Required]
        [DataMember(Name="pass_threshold", EmitDefaultValue=true)]
        public decimal PassThreshold { get; set; }

    }
}
