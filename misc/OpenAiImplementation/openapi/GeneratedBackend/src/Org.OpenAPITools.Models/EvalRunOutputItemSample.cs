/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// A sample containing the input and output of the evaluation run.
    /// </summary>
    [DataContract]
    public partial class EvalRunOutputItemSample 
    {
        /// <summary>
        /// An array of input messages.
        /// </summary>
        /// <value>An array of input messages.</value>
        [Required]
        [DataMember(Name="input", EmitDefaultValue=false)]
        public List<EvalRunOutputItemSampleInputInner> Input { get; set; }

        /// <summary>
        /// An array of output messages.
        /// </summary>
        /// <value>An array of output messages.</value>
        [Required]
        [DataMember(Name="output", EmitDefaultValue=false)]
        public List<EvalRunOutputItemSampleOutputInner> Output { get; set; }

        /// <summary>
        /// The reason why the sample generation was finished.
        /// </summary>
        /// <value>The reason why the sample generation was finished.</value>
        [Required]
        [DataMember(Name="finish_reason", EmitDefaultValue=false)]
        public string FinishReason { get; set; }

        /// <summary>
        /// The model used for generating the sample.
        /// </summary>
        /// <value>The model used for generating the sample.</value>
        [Required]
        [DataMember(Name="model", EmitDefaultValue=false)]
        public string Model { get; set; }

        /// <summary>
        /// Gets or Sets Usage
        /// </summary>
        [Required]
        [DataMember(Name="usage", EmitDefaultValue=false)]
        public EvalRunOutputItemSampleUsage Usage { get; set; }

        /// <summary>
        /// Gets or Sets Error
        /// </summary>
        [Required]
        [DataMember(Name="error", EmitDefaultValue=false)]
        public EvalApiError Error { get; set; }

        /// <summary>
        /// The sampling temperature used.
        /// </summary>
        /// <value>The sampling temperature used.</value>
        [Required]
        [DataMember(Name="temperature", EmitDefaultValue=true)]
        public decimal Temperature { get; set; }

        /// <summary>
        /// The maximum number of tokens allowed for completion.
        /// </summary>
        /// <value>The maximum number of tokens allowed for completion.</value>
        [Required]
        [DataMember(Name="max_completion_tokens", EmitDefaultValue=true)]
        public int MaxCompletionTokens { get; set; }

        /// <summary>
        /// The top_p value used for sampling.
        /// </summary>
        /// <value>The top_p value used for sampling.</value>
        [Required]
        [DataMember(Name="top_p", EmitDefaultValue=true)]
        public decimal TopP { get; set; }

        /// <summary>
        /// The seed used for generating the sample.
        /// </summary>
        /// <value>The seed used for generating the sample.</value>
        [Required]
        [DataMember(Name="seed", EmitDefaultValue=true)]
        public int Seed { get; set; }

    }
}
