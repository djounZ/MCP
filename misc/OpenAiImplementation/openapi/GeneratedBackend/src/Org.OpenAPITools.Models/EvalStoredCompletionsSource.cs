/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// A StoredCompletionsRunDataSource configuration describing a set of filters 
    /// </summary>
    [DataContract]
    public partial class EvalStoredCompletionsSource 
    {

        /// <summary>
        /// The type of source. Always `stored_completions`.
        /// </summary>
        /// <value>The type of source. Always `stored_completions`.</value>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum StoredCompletionsEnum for stored_completions
            /// </summary>
            [EnumMember(Value = "stored_completions")]
            StoredCompletionsEnum = 1
        }

        /// <summary>
        /// The type of source. Always &#x60;stored_completions&#x60;.
        /// </summary>
        /// <value>The type of source. Always &#x60;stored_completions&#x60;.</value>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; } = TypeEnum.StoredCompletionsEnum;

        /// <summary>
        /// Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard.   Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters. 
        /// </summary>
        /// <value>Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard.   Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters. </value>
        [DataMember(Name="metadata", EmitDefaultValue=false)]
        public Dictionary<string, string> Metadata { get; set; }

        /// <summary>
        /// An optional model to filter by (e.g., &#39;gpt-4o&#39;).
        /// </summary>
        /// <value>An optional model to filter by (e.g., &#39;gpt-4o&#39;).</value>
        [DataMember(Name="model", EmitDefaultValue=false)]
        public string? Model { get; set; }

        /// <summary>
        /// An optional Unix timestamp to filter items created after this time.
        /// </summary>
        /// <value>An optional Unix timestamp to filter items created after this time.</value>
        [DataMember(Name="created_after", EmitDefaultValue=true)]
        public int? CreatedAfter { get; set; }

        /// <summary>
        /// An optional Unix timestamp to filter items created before this time.
        /// </summary>
        /// <value>An optional Unix timestamp to filter items created before this time.</value>
        [DataMember(Name="created_before", EmitDefaultValue=true)]
        public int? CreatedBefore { get; set; }

        /// <summary>
        /// An optional maximum number of items to return.
        /// </summary>
        /// <value>An optional maximum number of items to return.</value>
        [DataMember(Name="limit", EmitDefaultValue=true)]
        public int? Limit { get; set; }

    }
}
