/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
        /// <summary>
        /// The intended purpose of the uploaded file. One of: - `assistants`: Used in the Assistants API - `batch`: Used in the Batch API - `fine-tune`: Used for fine-tuning - `vision`: Images used for vision fine-tuning - `user_data`: Flexible file type for any purpose - `evals`: Used for eval data sets 
        /// </summary>
        /// <value>The intended purpose of the uploaded file. One of: - `assistants`: Used in the Assistants API - `batch`: Used in the Batch API - `fine-tune`: Used for fine-tuning - `vision`: Images used for vision fine-tuning - `user_data`: Flexible file type for any purpose - `evals`: Used for eval data sets </value>
        
        public enum FilePurpose
        {
            
            /// <summary>
            /// Enum AssistantsEnum for assistants
            /// </summary>
            [EnumMember(Value = "assistants")]
            AssistantsEnum = 1,
            
            /// <summary>
            /// Enum BatchEnum for batch
            /// </summary>
            [EnumMember(Value = "batch")]
            BatchEnum = 2,
            
            /// <summary>
            /// Enum FineTuneEnum for fine-tune
            /// </summary>
            [EnumMember(Value = "fine-tune")]
            FineTuneEnum = 3,
            
            /// <summary>
            /// Enum VisionEnum for vision
            /// </summary>
            [EnumMember(Value = "vision")]
            VisionEnum = 4,
            
            /// <summary>
            /// Enum UserDataEnum for user_data
            /// </summary>
            [EnumMember(Value = "user_data")]
            UserDataEnum = 5,
            
            /// <summary>
            /// Enum EvalsEnum for evals
            /// </summary>
            [EnumMember(Value = "evals")]
            EvalsEnum = 6
        }
}
