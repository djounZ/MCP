/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// A tool that searches for relevant content from uploaded files. Learn more about the [file search tool](https://platform.openai.com/docs/guides/tools-file-search).
    /// </summary>
    [DataContract]
    public partial class FileSearchTool 
    {

        /// <summary>
        /// The type of the file search tool. Always `file_search`.
        /// </summary>
        /// <value>The type of the file search tool. Always `file_search`.</value>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum FileSearchEnum for file_search
            /// </summary>
            [EnumMember(Value = "file_search")]
            FileSearchEnum = 1
        }

        /// <summary>
        /// The type of the file search tool. Always &#x60;file_search&#x60;.
        /// </summary>
        /// <value>The type of the file search tool. Always &#x60;file_search&#x60;.</value>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; } = TypeEnum.FileSearchEnum;

        /// <summary>
        /// The IDs of the vector stores to search.
        /// </summary>
        /// <value>The IDs of the vector stores to search.</value>
        [Required]
        [DataMember(Name="vector_store_ids", EmitDefaultValue=false)]
        public List<string> VectorStoreIds { get; set; }

        /// <summary>
        /// The maximum number of results to return. This number should be between 1 and 50 inclusive.
        /// </summary>
        /// <value>The maximum number of results to return. This number should be between 1 and 50 inclusive.</value>
        [DataMember(Name="max_num_results", EmitDefaultValue=true)]
        public int? MaxNumResults { get; set; }

        /// <summary>
        /// Ranking options for search.
        /// </summary>
        /// <value>Ranking options for search.</value>
        [DataMember(Name="ranking_options", EmitDefaultValue=false)]
        public RankingOptions? RankingOptions { get; set; }

        /// <summary>
        /// A filter to apply.
        /// </summary>
        /// <value>A filter to apply.</value>
        [DataMember(Name="filters", EmitDefaultValue=true)]
        public Filters Filters { get; set; }

    }
}
