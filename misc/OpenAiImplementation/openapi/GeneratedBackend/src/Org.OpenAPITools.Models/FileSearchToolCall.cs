/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// The results of a file search tool call. See the  [file search guide](https://platform.openai.com/docs/guides/tools-file-search) for more information. 
    /// </summary>
    [DataContract]
    public partial class FileSearchToolCall 
    {
        /// <summary>
        /// The unique ID of the file search tool call. 
        /// </summary>
        /// <value>The unique ID of the file search tool call. </value>
        [Required]
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }


        /// <summary>
        /// The type of the file search tool call. Always `file_search_call`. 
        /// </summary>
        /// <value>The type of the file search tool call. Always `file_search_call`. </value>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum FileSearchCallEnum for file_search_call
            /// </summary>
            [EnumMember(Value = "file_search_call")]
            FileSearchCallEnum = 1
        }

        /// <summary>
        /// The type of the file search tool call. Always &#x60;file_search_call&#x60;. 
        /// </summary>
        /// <value>The type of the file search tool call. Always &#x60;file_search_call&#x60;. </value>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; }


        /// <summary>
        /// The status of the file search tool call. One of `in_progress`,  `searching`, `incomplete` or `failed`, 
        /// </summary>
        /// <value>The status of the file search tool call. One of `in_progress`,  `searching`, `incomplete` or `failed`, </value>
        
        public enum StatusEnum
        {
            
            /// <summary>
            /// Enum InProgressEnum for in_progress
            /// </summary>
            [EnumMember(Value = "in_progress")]
            InProgressEnum = 1,
            
            /// <summary>
            /// Enum SearchingEnum for searching
            /// </summary>
            [EnumMember(Value = "searching")]
            SearchingEnum = 2,
            
            /// <summary>
            /// Enum CompletedEnum for completed
            /// </summary>
            [EnumMember(Value = "completed")]
            CompletedEnum = 3,
            
            /// <summary>
            /// Enum IncompleteEnum for incomplete
            /// </summary>
            [EnumMember(Value = "incomplete")]
            IncompleteEnum = 4,
            
            /// <summary>
            /// Enum FailedEnum for failed
            /// </summary>
            [EnumMember(Value = "failed")]
            FailedEnum = 5
        }

        /// <summary>
        /// The status of the file search tool call. One of &#x60;in_progress&#x60;,  &#x60;searching&#x60;, &#x60;incomplete&#x60; or &#x60;failed&#x60;, 
        /// </summary>
        /// <value>The status of the file search tool call. One of &#x60;in_progress&#x60;,  &#x60;searching&#x60;, &#x60;incomplete&#x60; or &#x60;failed&#x60;, </value>
        [Required]
        [DataMember(Name="status", EmitDefaultValue=true)]
        public StatusEnum Status { get; set; }

        /// <summary>
        /// The queries used to search for files. 
        /// </summary>
        /// <value>The queries used to search for files. </value>
        [Required]
        [DataMember(Name="queries", EmitDefaultValue=false)]
        public List<string> Queries { get; set; }

        /// <summary>
        /// The results of the file search tool call. 
        /// </summary>
        /// <value>The results of the file search tool call. </value>
        [DataMember(Name="results", EmitDefaultValue=false)]
        public List<FileSearchToolCallResultsInner> Results { get; set; }

    }
}
