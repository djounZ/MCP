/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// The &#x60;fine_tuning.job&#x60; object represents a fine-tuning job that has been created through the API. 
    /// </summary>
    [DataContract]
    public partial class FineTuningJob 
    {
        /// <summary>
        /// The object identifier, which can be referenced in the API endpoints.
        /// </summary>
        /// <value>The object identifier, which can be referenced in the API endpoints.</value>
        [Required]
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// The Unix timestamp (in seconds) for when the fine-tuning job was created.
        /// </summary>
        /// <value>The Unix timestamp (in seconds) for when the fine-tuning job was created.</value>
        [Required]
        [DataMember(Name="created_at", EmitDefaultValue=true)]
        public int CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets Error
        /// </summary>
        [Required]
        [DataMember(Name="error", EmitDefaultValue=false)]
        public FineTuningJobError Error { get; set; }

        /// <summary>
        /// The name of the fine-tuned model that is being created. The value will be null if the fine-tuning job is still running.
        /// </summary>
        /// <value>The name of the fine-tuned model that is being created. The value will be null if the fine-tuning job is still running.</value>
        [Required]
        [DataMember(Name="fine_tuned_model", EmitDefaultValue=false)]
        public string FineTunedModel { get; set; }

        /// <summary>
        /// The Unix timestamp (in seconds) for when the fine-tuning job was finished. The value will be null if the fine-tuning job is still running.
        /// </summary>
        /// <value>The Unix timestamp (in seconds) for when the fine-tuning job was finished. The value will be null if the fine-tuning job is still running.</value>
        [Required]
        [DataMember(Name="finished_at", EmitDefaultValue=true)]
        public int FinishedAt { get; set; }

        /// <summary>
        /// Gets or Sets Hyperparameters
        /// </summary>
        [Required]
        [DataMember(Name="hyperparameters", EmitDefaultValue=false)]
        public FineTuningJobHyperparameters Hyperparameters { get; set; }

        /// <summary>
        /// The base model that is being fine-tuned.
        /// </summary>
        /// <value>The base model that is being fine-tuned.</value>
        [Required]
        [DataMember(Name="model", EmitDefaultValue=false)]
        public string Model { get; set; }


        /// <summary>
        /// The object type, which is always \"fine_tuning.job\".
        /// </summary>
        /// <value>The object type, which is always \"fine_tuning.job\".</value>
        
        public enum ObjectEnum
        {
            
            /// <summary>
            /// Enum FineTuningJobEnum for fine_tuning.job
            /// </summary>
            [EnumMember(Value = "fine_tuning.job")]
            FineTuningJobEnum = 1
        }

        /// <summary>
        /// The object type, which is always \&quot;fine_tuning.job\&quot;.
        /// </summary>
        /// <value>The object type, which is always \&quot;fine_tuning.job\&quot;.</value>
        [Required]
        [DataMember(Name="object", EmitDefaultValue=true)]
        public ObjectEnum Object { get; set; }

        /// <summary>
        /// The organization that owns the fine-tuning job.
        /// </summary>
        /// <value>The organization that owns the fine-tuning job.</value>
        [Required]
        [DataMember(Name="organization_id", EmitDefaultValue=false)]
        public string OrganizationId { get; set; }

        /// <summary>
        /// The compiled results file ID(s) for the fine-tuning job. You can retrieve the results with the [Files API](https://platform.openai.com/docs/api-reference/files/retrieve-contents).
        /// </summary>
        /// <value>The compiled results file ID(s) for the fine-tuning job. You can retrieve the results with the [Files API](https://platform.openai.com/docs/api-reference/files/retrieve-contents).</value>
        [Required]
        [DataMember(Name="result_files", EmitDefaultValue=false)]
        public List<string> ResultFiles { get; set; }


        /// <summary>
        /// The current status of the fine-tuning job, which can be either `validating_files`, `queued`, `running`, `succeeded`, `failed`, or `cancelled`.
        /// </summary>
        /// <value>The current status of the fine-tuning job, which can be either `validating_files`, `queued`, `running`, `succeeded`, `failed`, or `cancelled`.</value>
        
        public enum StatusEnum
        {
            
            /// <summary>
            /// Enum ValidatingFilesEnum for validating_files
            /// </summary>
            [EnumMember(Value = "validating_files")]
            ValidatingFilesEnum = 1,
            
            /// <summary>
            /// Enum QueuedEnum for queued
            /// </summary>
            [EnumMember(Value = "queued")]
            QueuedEnum = 2,
            
            /// <summary>
            /// Enum RunningEnum for running
            /// </summary>
            [EnumMember(Value = "running")]
            RunningEnum = 3,
            
            /// <summary>
            /// Enum SucceededEnum for succeeded
            /// </summary>
            [EnumMember(Value = "succeeded")]
            SucceededEnum = 4,
            
            /// <summary>
            /// Enum FailedEnum for failed
            /// </summary>
            [EnumMember(Value = "failed")]
            FailedEnum = 5,
            
            /// <summary>
            /// Enum CancelledEnum for cancelled
            /// </summary>
            [EnumMember(Value = "cancelled")]
            CancelledEnum = 6
        }

        /// <summary>
        /// The current status of the fine-tuning job, which can be either &#x60;validating_files&#x60;, &#x60;queued&#x60;, &#x60;running&#x60;, &#x60;succeeded&#x60;, &#x60;failed&#x60;, or &#x60;cancelled&#x60;.
        /// </summary>
        /// <value>The current status of the fine-tuning job, which can be either &#x60;validating_files&#x60;, &#x60;queued&#x60;, &#x60;running&#x60;, &#x60;succeeded&#x60;, &#x60;failed&#x60;, or &#x60;cancelled&#x60;.</value>
        [Required]
        [DataMember(Name="status", EmitDefaultValue=true)]
        public StatusEnum Status { get; set; }

        /// <summary>
        /// The total number of billable tokens processed by this fine-tuning job. The value will be null if the fine-tuning job is still running.
        /// </summary>
        /// <value>The total number of billable tokens processed by this fine-tuning job. The value will be null if the fine-tuning job is still running.</value>
        [Required]
        [DataMember(Name="trained_tokens", EmitDefaultValue=true)]
        public int TrainedTokens { get; set; }

        /// <summary>
        /// The file ID used for training. You can retrieve the training data with the [Files API](https://platform.openai.com/docs/api-reference/files/retrieve-contents).
        /// </summary>
        /// <value>The file ID used for training. You can retrieve the training data with the [Files API](https://platform.openai.com/docs/api-reference/files/retrieve-contents).</value>
        [Required]
        [DataMember(Name="training_file", EmitDefaultValue=false)]
        public string TrainingFile { get; set; }

        /// <summary>
        /// The file ID used for validation. You can retrieve the validation results with the [Files API](https://platform.openai.com/docs/api-reference/files/retrieve-contents).
        /// </summary>
        /// <value>The file ID used for validation. You can retrieve the validation results with the [Files API](https://platform.openai.com/docs/api-reference/files/retrieve-contents).</value>
        [Required]
        [DataMember(Name="validation_file", EmitDefaultValue=false)]
        public string ValidationFile { get; set; }

        /// <summary>
        /// A list of integrations to enable for this fine-tuning job.
        /// </summary>
        /// <value>A list of integrations to enable for this fine-tuning job.</value>
        [DataMember(Name="integrations", EmitDefaultValue=false)]
        public List<FineTuningIntegration> Integrations { get; set; }

        /// <summary>
        /// The seed used for the fine-tuning job.
        /// </summary>
        /// <value>The seed used for the fine-tuning job.</value>
        [Required]
        [DataMember(Name="seed", EmitDefaultValue=true)]
        public int Seed { get; set; }

        /// <summary>
        /// The Unix timestamp (in seconds) for when the fine-tuning job is estimated to finish. The value will be null if the fine-tuning job is not running.
        /// </summary>
        /// <value>The Unix timestamp (in seconds) for when the fine-tuning job is estimated to finish. The value will be null if the fine-tuning job is not running.</value>
        [DataMember(Name="estimated_finish", EmitDefaultValue=true)]
        public int? EstimatedFinish { get; set; }

        /// <summary>
        /// Gets or Sets Method
        /// </summary>
        [DataMember(Name="method", EmitDefaultValue=false)]
        public FineTuneMethod? Method { get; set; }

        /// <summary>
        /// Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard.   Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters. 
        /// </summary>
        /// <value>Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard.   Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters. </value>
        [DataMember(Name="metadata", EmitDefaultValue=false)]
        public Dictionary<string, string> Metadata { get; set; }

    }
}
