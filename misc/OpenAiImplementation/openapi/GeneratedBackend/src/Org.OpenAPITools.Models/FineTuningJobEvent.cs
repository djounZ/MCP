/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Fine-tuning job event object
    /// </summary>
    [DataContract]
    public partial class FineTuningJobEvent 
    {

        /// <summary>
        /// The object type, which is always \"fine_tuning.job.event\".
        /// </summary>
        /// <value>The object type, which is always \"fine_tuning.job.event\".</value>
        
        public enum ObjectEnum
        {
            
            /// <summary>
            /// Enum FineTuningJobEventEnum for fine_tuning.job.event
            /// </summary>
            [EnumMember(Value = "fine_tuning.job.event")]
            FineTuningJobEventEnum = 1
        }

        /// <summary>
        /// The object type, which is always \&quot;fine_tuning.job.event\&quot;.
        /// </summary>
        /// <value>The object type, which is always \&quot;fine_tuning.job.event\&quot;.</value>
        [Required]
        [DataMember(Name="object", EmitDefaultValue=true)]
        public ObjectEnum Object { get; set; }

        /// <summary>
        /// The object identifier.
        /// </summary>
        /// <value>The object identifier.</value>
        [Required]
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// The Unix timestamp (in seconds) for when the fine-tuning job was created.
        /// </summary>
        /// <value>The Unix timestamp (in seconds) for when the fine-tuning job was created.</value>
        [Required]
        [DataMember(Name="created_at", EmitDefaultValue=true)]
        public int CreatedAt { get; set; }


        /// <summary>
        /// The log level of the event.
        /// </summary>
        /// <value>The log level of the event.</value>
        
        public enum LevelEnum
        {
            
            /// <summary>
            /// Enum InfoEnum for info
            /// </summary>
            [EnumMember(Value = "info")]
            InfoEnum = 1,
            
            /// <summary>
            /// Enum WarnEnum for warn
            /// </summary>
            [EnumMember(Value = "warn")]
            WarnEnum = 2,
            
            /// <summary>
            /// Enum ErrorEnum for error
            /// </summary>
            [EnumMember(Value = "error")]
            ErrorEnum = 3
        }

        /// <summary>
        /// The log level of the event.
        /// </summary>
        /// <value>The log level of the event.</value>
        [Required]
        [DataMember(Name="level", EmitDefaultValue=true)]
        public LevelEnum Level { get; set; }

        /// <summary>
        /// The message of the event.
        /// </summary>
        /// <value>The message of the event.</value>
        [Required]
        [DataMember(Name="message", EmitDefaultValue=false)]
        public string Message { get; set; }


        /// <summary>
        /// The type of event.
        /// </summary>
        /// <value>The type of event.</value>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum MessageEnum for message
            /// </summary>
            [EnumMember(Value = "message")]
            MessageEnum = 1,
            
            /// <summary>
            /// Enum MetricsEnum for metrics
            /// </summary>
            [EnumMember(Value = "metrics")]
            MetricsEnum = 2
        }

        /// <summary>
        /// The type of event.
        /// </summary>
        /// <value>The type of event.</value>
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; }

        /// <summary>
        /// The data associated with the event.
        /// </summary>
        /// <value>The data associated with the event.</value>
        [DataMember(Name="data", EmitDefaultValue=false)]
        public Object? Data { get; set; }

    }
}
