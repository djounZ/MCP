/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// A StringCheckGrader object that performs a string comparison between input and reference using a specified operation. 
    /// </summary>
    [DataContract]
    public partial class GraderStringCheck 
    {

        /// <summary>
        /// The object type, which is always `string_check`.
        /// </summary>
        /// <value>The object type, which is always `string_check`.</value>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum StringCheckEnum for string_check
            /// </summary>
            [EnumMember(Value = "string_check")]
            StringCheckEnum = 1
        }

        /// <summary>
        /// The object type, which is always &#x60;string_check&#x60;.
        /// </summary>
        /// <value>The object type, which is always &#x60;string_check&#x60;.</value>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; }

        /// <summary>
        /// The name of the grader.
        /// </summary>
        /// <value>The name of the grader.</value>
        [Required]
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// The input text. This may include template strings.
        /// </summary>
        /// <value>The input text. This may include template strings.</value>
        [Required]
        [DataMember(Name="input", EmitDefaultValue=false)]
        public string Input { get; set; }

        /// <summary>
        /// The reference text. This may include template strings.
        /// </summary>
        /// <value>The reference text. This may include template strings.</value>
        [Required]
        [DataMember(Name="reference", EmitDefaultValue=false)]
        public string Reference { get; set; }


        /// <summary>
        /// The string check operation to perform. One of `eq`, `ne`, `like`, or `ilike`.
        /// </summary>
        /// <value>The string check operation to perform. One of `eq`, `ne`, `like`, or `ilike`.</value>
        
        public enum OperationEnum
        {
            
            /// <summary>
            /// Enum EqEnum for eq
            /// </summary>
            [EnumMember(Value = "eq")]
            EqEnum = 1,
            
            /// <summary>
            /// Enum NeEnum for ne
            /// </summary>
            [EnumMember(Value = "ne")]
            NeEnum = 2,
            
            /// <summary>
            /// Enum LikeEnum for like
            /// </summary>
            [EnumMember(Value = "like")]
            LikeEnum = 3,
            
            /// <summary>
            /// Enum IlikeEnum for ilike
            /// </summary>
            [EnumMember(Value = "ilike")]
            IlikeEnum = 4
        }

        /// <summary>
        /// The string check operation to perform. One of &#x60;eq&#x60;, &#x60;ne&#x60;, &#x60;like&#x60;, or &#x60;ilike&#x60;.
        /// </summary>
        /// <value>The string check operation to perform. One of &#x60;eq&#x60;, &#x60;ne&#x60;, &#x60;like&#x60;, or &#x60;ilike&#x60;.</value>
        [Required]
        [DataMember(Name="operation", EmitDefaultValue=true)]
        public OperationEnum Operation { get; set; }

    }
}
