/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Execute a shell command on the server. 
    /// </summary>
    [DataContract]
    public partial class LocalShellExecAction 
    {

        /// <summary>
        /// The type of the local shell action. Always `exec`. 
        /// </summary>
        /// <value>The type of the local shell action. Always `exec`. </value>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum ExecEnum for exec
            /// </summary>
            [EnumMember(Value = "exec")]
            ExecEnum = 1
        }

        /// <summary>
        /// The type of the local shell action. Always &#x60;exec&#x60;. 
        /// </summary>
        /// <value>The type of the local shell action. Always &#x60;exec&#x60;. </value>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; }

        /// <summary>
        /// The command to run. 
        /// </summary>
        /// <value>The command to run. </value>
        [Required]
        [DataMember(Name="command", EmitDefaultValue=false)]
        public List<string> Command { get; set; }

        /// <summary>
        /// Optional timeout in milliseconds for the command. 
        /// </summary>
        /// <value>Optional timeout in milliseconds for the command. </value>
        [DataMember(Name="timeout_ms", EmitDefaultValue=true)]
        public int? TimeoutMs { get; set; }

        /// <summary>
        /// Optional working directory to run the command in. 
        /// </summary>
        /// <value>Optional working directory to run the command in. </value>
        [DataMember(Name="working_directory", EmitDefaultValue=false)]
        public string? WorkingDirectory { get; set; }

        /// <summary>
        /// Environment variables to set for the command. 
        /// </summary>
        /// <value>Environment variables to set for the command. </value>
        [Required]
        [DataMember(Name="env", EmitDefaultValue=false)]
        public Dictionary<string, string> Env { get; set; }

        /// <summary>
        /// Optional user to run the command as. 
        /// </summary>
        /// <value>Optional user to run the command as. </value>
        [DataMember(Name="user", EmitDefaultValue=false)]
        public string? User { get; set; }

    }
}
