/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// A list of tools available on an MCP server. 
    /// </summary>
    [DataContract]
    public partial class MCPListTools 
    {

        /// <summary>
        /// The type of the item. Always `mcp_list_tools`. 
        /// </summary>
        /// <value>The type of the item. Always `mcp_list_tools`. </value>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum McpListToolsEnum for mcp_list_tools
            /// </summary>
            [EnumMember(Value = "mcp_list_tools")]
            McpListToolsEnum = 1
        }

        /// <summary>
        /// The type of the item. Always &#x60;mcp_list_tools&#x60;. 
        /// </summary>
        /// <value>The type of the item. Always &#x60;mcp_list_tools&#x60;. </value>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; }

        /// <summary>
        /// The unique ID of the list. 
        /// </summary>
        /// <value>The unique ID of the list. </value>
        [Required]
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// The label of the MCP server. 
        /// </summary>
        /// <value>The label of the MCP server. </value>
        [Required]
        [DataMember(Name="server_label", EmitDefaultValue=false)]
        public string ServerLabel { get; set; }

        /// <summary>
        /// The tools available on the server. 
        /// </summary>
        /// <value>The tools available on the server. </value>
        [Required]
        [DataMember(Name="tools", EmitDefaultValue=false)]
        public List<MCPListToolsTool> Tools { get; set; }

        /// <summary>
        /// Error message if the server could not list tools. 
        /// </summary>
        /// <value>Error message if the server could not list tools. </value>
        [DataMember(Name="error", EmitDefaultValue=false)]
        public string? Error { get; set; }

    }
}
