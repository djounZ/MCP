/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Represents a project rate limit config.
    /// </summary>
    [DataContract]
    public partial class ProjectRateLimit 
    {

        /// <summary>
        /// The object type, which is always `project.rate_limit`
        /// </summary>
        /// <value>The object type, which is always `project.rate_limit`</value>
        
        public enum ObjectEnum
        {
            
            /// <summary>
            /// Enum ProjectRateLimitEnum for project.rate_limit
            /// </summary>
            [EnumMember(Value = "project.rate_limit")]
            ProjectRateLimitEnum = 1
        }

        /// <summary>
        /// The object type, which is always &#x60;project.rate_limit&#x60;
        /// </summary>
        /// <value>The object type, which is always &#x60;project.rate_limit&#x60;</value>
        [Required]
        [DataMember(Name="object", EmitDefaultValue=true)]
        public ObjectEnum Object { get; set; }

        /// <summary>
        /// The identifier, which can be referenced in API endpoints.
        /// </summary>
        /// <value>The identifier, which can be referenced in API endpoints.</value>
        [Required]
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// The model this rate limit applies to.
        /// </summary>
        /// <value>The model this rate limit applies to.</value>
        [Required]
        [DataMember(Name="model", EmitDefaultValue=false)]
        public string Model { get; set; }

        /// <summary>
        /// The maximum requests per minute.
        /// </summary>
        /// <value>The maximum requests per minute.</value>
        [Required]
        [DataMember(Name="max_requests_per_1_minute", EmitDefaultValue=true)]
        public int MaxRequestsPer1Minute { get; set; }

        /// <summary>
        /// The maximum tokens per minute.
        /// </summary>
        /// <value>The maximum tokens per minute.</value>
        [Required]
        [DataMember(Name="max_tokens_per_1_minute", EmitDefaultValue=true)]
        public int MaxTokensPer1Minute { get; set; }

        /// <summary>
        /// The maximum images per minute. Only present for relevant models.
        /// </summary>
        /// <value>The maximum images per minute. Only present for relevant models.</value>
        [DataMember(Name="max_images_per_1_minute", EmitDefaultValue=true)]
        public int? MaxImagesPer1Minute { get; set; }

        /// <summary>
        /// The maximum audio megabytes per minute. Only present for relevant models.
        /// </summary>
        /// <value>The maximum audio megabytes per minute. Only present for relevant models.</value>
        [DataMember(Name="max_audio_megabytes_per_1_minute", EmitDefaultValue=true)]
        public int? MaxAudioMegabytesPer1Minute { get; set; }

        /// <summary>
        /// The maximum requests per day. Only present for relevant models.
        /// </summary>
        /// <value>The maximum requests per day. Only present for relevant models.</value>
        [DataMember(Name="max_requests_per_1_day", EmitDefaultValue=true)]
        public int? MaxRequestsPer1Day { get; set; }

        /// <summary>
        /// The maximum batch input tokens per day. Only present for relevant models.
        /// </summary>
        /// <value>The maximum batch input tokens per day. Only present for relevant models.</value>
        [DataMember(Name="batch_1_day_max_input_tokens", EmitDefaultValue=true)]
        public int? Batch1DayMaxInputTokens { get; set; }

    }
}
