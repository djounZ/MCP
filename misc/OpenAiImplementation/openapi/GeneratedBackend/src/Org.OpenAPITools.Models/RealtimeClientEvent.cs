/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using JsonSubTypes;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// A realtime client event. 
    /// </summary>
    [DataContract]
    public partial class RealtimeClientEvent 
    {
        /// <summary>
        /// Optional client-generated ID used to identify this event.
        /// </summary>
        /// <value>Optional client-generated ID used to identify this event.</value>
        [DataMember(Name="event_id", EmitDefaultValue=false)]
        public string? EventId { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public Object Type { get; set; }

        /// <summary>
        /// The ID of the preceding item after which the new item will be inserted.  If not set, the new item will be appended to the end of the conversation. If set to &#x60;root&#x60;, the new item will be added to the beginning of the conversation. If set to an existing ID, it allows an item to be inserted mid-conversation. If the ID cannot be found, an error will be returned and the item will not be added. 
        /// </summary>
        /// <value>The ID of the preceding item after which the new item will be inserted.  If not set, the new item will be appended to the end of the conversation. If set to &#x60;root&#x60;, the new item will be added to the beginning of the conversation. If set to an existing ID, it allows an item to be inserted mid-conversation. If the ID cannot be found, an error will be returned and the item will not be added. </value>
        [DataMember(Name="previous_item_id", EmitDefaultValue=false)]
        public string? PreviousItemId { get; set; }

        /// <summary>
        /// Gets or Sets Item
        /// </summary>
        [Required]
        [DataMember(Name="item", EmitDefaultValue=false)]
        public RealtimeConversationItem Item { get; set; }

        /// <summary>
        /// The ID of the assistant message item to truncate. Only assistant message  items can be truncated. 
        /// </summary>
        /// <value>The ID of the assistant message item to truncate. Only assistant message  items can be truncated. </value>
        [Required]
        [DataMember(Name="item_id", EmitDefaultValue=false)]
        public string ItemId { get; set; }

        /// <summary>
        /// The index of the content part to truncate. Set this to 0.
        /// </summary>
        /// <value>The index of the content part to truncate. Set this to 0.</value>
        [Required]
        [DataMember(Name="content_index", EmitDefaultValue=true)]
        public int ContentIndex { get; set; }

        /// <summary>
        /// Inclusive duration up to which audio is truncated, in milliseconds. If  the audio_end_ms is greater than the actual audio duration, the server  will respond with an error. 
        /// </summary>
        /// <value>Inclusive duration up to which audio is truncated, in milliseconds. If  the audio_end_ms is greater than the actual audio duration, the server  will respond with an error. </value>
        [Required]
        [DataMember(Name="audio_end_ms", EmitDefaultValue=true)]
        public int AudioEndMs { get; set; }

        /// <summary>
        /// Base64-encoded audio bytes. This must be in the format specified by the  &#x60;input_audio_format&#x60; field in the session configuration. 
        /// </summary>
        /// <value>Base64-encoded audio bytes. This must be in the format specified by the  &#x60;input_audio_format&#x60; field in the session configuration. </value>
        [Required]
        [DataMember(Name="audio", EmitDefaultValue=false)]
        public string Audio { get; set; }

        /// <summary>
        /// A specific response ID to cancel - if not provided, will cancel an  in-progress response in the default conversation. 
        /// </summary>
        /// <value>A specific response ID to cancel - if not provided, will cancel an  in-progress response in the default conversation. </value>
        [DataMember(Name="response_id", EmitDefaultValue=false)]
        public string? ResponseId { get; set; }

        /// <summary>
        /// Gets or Sets Response
        /// </summary>
        [DataMember(Name="response", EmitDefaultValue=false)]
        public RealtimeResponseCreateParams? Response { get; set; }

        /// <summary>
        /// Gets or Sets Session
        /// </summary>
        [Required]
        [DataMember(Name="session", EmitDefaultValue=false)]
        public RealtimeTranscriptionSessionCreateRequest Session { get; set; }

    }
}
