/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// This event is the output of audio transcription for user audio written to the user audio buffer. Transcription begins when the input audio buffer is committed by the client or server (in &#x60;server_vad&#x60; mode). Transcription runs asynchronously with Response creation, so this event may come before or after the Response events.  Realtime API models accept audio natively, and thus input transcription is a separate process run on a separate ASR (Automatic Speech Recognition) model. The transcript may diverge somewhat from the model&#39;s interpretation, and should be treated as a rough guide. 
    /// </summary>
    [DataContract]
    public partial class RealtimeServerEventConversationItemInputAudioTranscriptionCompleted 
    {
        /// <summary>
        /// The unique ID of the server event.
        /// </summary>
        /// <value>The unique ID of the server event.</value>
        [Required]
        [DataMember(Name="event_id", EmitDefaultValue=false)]
        public string EventId { get; set; }


        /// <summary>
        /// The event type, must be `conversation.item.input_audio_transcription.completed`. 
        /// </summary>
        /// <value>The event type, must be `conversation.item.input_audio_transcription.completed`. </value>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum ConversationItemInputAudioTranscriptionCompletedEnum for conversation.item.input_audio_transcription.completed
            /// </summary>
            [EnumMember(Value = "conversation.item.input_audio_transcription.completed")]
            ConversationItemInputAudioTranscriptionCompletedEnum = 1
        }

        /// <summary>
        /// The event type, must be &#x60;conversation.item.input_audio_transcription.completed&#x60;. 
        /// </summary>
        /// <value>The event type, must be &#x60;conversation.item.input_audio_transcription.completed&#x60;. </value>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; }

        /// <summary>
        /// The ID of the user message item containing the audio.
        /// </summary>
        /// <value>The ID of the user message item containing the audio.</value>
        [Required]
        [DataMember(Name="item_id", EmitDefaultValue=false)]
        public string ItemId { get; set; }

        /// <summary>
        /// The index of the content part containing the audio.
        /// </summary>
        /// <value>The index of the content part containing the audio.</value>
        [Required]
        [DataMember(Name="content_index", EmitDefaultValue=true)]
        public int ContentIndex { get; set; }

        /// <summary>
        /// The transcribed text.
        /// </summary>
        /// <value>The transcribed text.</value>
        [Required]
        [DataMember(Name="transcript", EmitDefaultValue=false)]
        public string Transcript { get; set; }

        /// <summary>
        /// The log probabilities of the transcription.
        /// </summary>
        /// <value>The log probabilities of the transcription.</value>
        [DataMember(Name="logprobs", EmitDefaultValue=false)]
        public List<LogProbProperties> Logprobs { get; set; }

        /// <summary>
        /// Gets or Sets Usage
        /// </summary>
        [Required]
        [DataMember(Name="usage", EmitDefaultValue=false)]
        public RealtimeServerEventConversationItemInputAudioTranscriptionCompletedUsage Usage { get; set; }

    }
}
