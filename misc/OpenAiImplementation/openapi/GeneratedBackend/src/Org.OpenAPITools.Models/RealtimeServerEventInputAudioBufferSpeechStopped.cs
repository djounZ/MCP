/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Returned in &#x60;server_vad&#x60; mode when the server detects the end of speech in  the audio buffer. The server will also send an &#x60;conversation.item.created&#x60;  event with the user message item that is created from the audio buffer. 
    /// </summary>
    [DataContract]
    public partial class RealtimeServerEventInputAudioBufferSpeechStopped 
    {
        /// <summary>
        /// The unique ID of the server event.
        /// </summary>
        /// <value>The unique ID of the server event.</value>
        [Required]
        [DataMember(Name="event_id", EmitDefaultValue=false)]
        public string EventId { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public Object Type { get; set; }

        /// <summary>
        /// Milliseconds since the session started when speech stopped. This will  correspond to the end of audio sent to the model, and thus includes the  &#x60;min_silence_duration_ms&#x60; configured in the Session. 
        /// </summary>
        /// <value>Milliseconds since the session started when speech stopped. This will  correspond to the end of audio sent to the model, and thus includes the  &#x60;min_silence_duration_ms&#x60; configured in the Session. </value>
        [Required]
        [DataMember(Name="audio_end_ms", EmitDefaultValue=true)]
        public int AudioEndMs { get; set; }

        /// <summary>
        /// The ID of the user message item that will be created.
        /// </summary>
        /// <value>The ID of the user message item that will be created.</value>
        [Required]
        [DataMember(Name="item_id", EmitDefaultValue=false)]
        public string ItemId { get; set; }

    }
}
