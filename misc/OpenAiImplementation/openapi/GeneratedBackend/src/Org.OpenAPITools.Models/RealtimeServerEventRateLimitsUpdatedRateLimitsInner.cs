/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class RealtimeServerEventRateLimitsUpdatedRateLimitsInner 
    {

        /// <summary>
        /// The name of the rate limit (`requests`, `tokens`). 
        /// </summary>
        /// <value>The name of the rate limit (`requests`, `tokens`). </value>
        
        public enum NameEnum
        {
            
            /// <summary>
            /// Enum RequestsEnum for requests
            /// </summary>
            [EnumMember(Value = "requests")]
            RequestsEnum = 1,
            
            /// <summary>
            /// Enum TokensEnum for tokens
            /// </summary>
            [EnumMember(Value = "tokens")]
            TokensEnum = 2
        }

        /// <summary>
        /// The name of the rate limit (&#x60;requests&#x60;, &#x60;tokens&#x60;). 
        /// </summary>
        /// <value>The name of the rate limit (&#x60;requests&#x60;, &#x60;tokens&#x60;). </value>
        [DataMember(Name="name", EmitDefaultValue=true)]
        public NameEnum Name { get; set; }

        /// <summary>
        /// The maximum allowed value for the rate limit.
        /// </summary>
        /// <value>The maximum allowed value for the rate limit.</value>
        [DataMember(Name="limit", EmitDefaultValue=true)]
        public int? Limit { get; set; }

        /// <summary>
        /// The remaining value before the limit is reached.
        /// </summary>
        /// <value>The remaining value before the limit is reached.</value>
        [DataMember(Name="remaining", EmitDefaultValue=true)]
        public int? Remaining { get; set; }

        /// <summary>
        /// Seconds until the rate limit resets.
        /// </summary>
        /// <value>Seconds until the rate limit resets.</value>
        [DataMember(Name="reset_seconds", EmitDefaultValue=true)]
        public decimal? ResetSeconds { get; set; }

    }
}
