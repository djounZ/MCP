/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// The content part that was added.
    /// </summary>
    [DataContract]
    public partial class RealtimeServerEventResponseContentPartAddedPart 
    {

        /// <summary>
        /// The content type (\"text\", \"audio\").
        /// </summary>
        /// <value>The content type (\"text\", \"audio\").</value>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum TextEnum for text
            /// </summary>
            [EnumMember(Value = "text")]
            TextEnum = 1,
            
            /// <summary>
            /// Enum AudioEnum for audio
            /// </summary>
            [EnumMember(Value = "audio")]
            AudioEnum = 2
        }

        /// <summary>
        /// The content type (\&quot;text\&quot;, \&quot;audio\&quot;).
        /// </summary>
        /// <value>The content type (\&quot;text\&quot;, \&quot;audio\&quot;).</value>
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; }

        /// <summary>
        /// The text content (if type is \&quot;text\&quot;).
        /// </summary>
        /// <value>The text content (if type is \&quot;text\&quot;).</value>
        [DataMember(Name="text", EmitDefaultValue=false)]
        public string? Text { get; set; }

        /// <summary>
        /// Base64-encoded audio data (if type is \&quot;audio\&quot;).
        /// </summary>
        /// <value>Base64-encoded audio data (if type is \&quot;audio\&quot;).</value>
        [DataMember(Name="audio", EmitDefaultValue=false)]
        public string? Audio { get; set; }

        /// <summary>
        /// The transcript of the audio (if type is \&quot;audio\&quot;).
        /// </summary>
        /// <value>The transcript of the audio (if type is \&quot;audio\&quot;).</value>
        [DataMember(Name="transcript", EmitDefaultValue=false)]
        public string? Transcript { get; set; }

    }
}
