/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Realtime session object configuration.
    /// </summary>
    [DataContract]
    public partial class RealtimeSession 
    {
        /// <summary>
        /// Unique identifier for the session that looks like &#x60;sess_1234567890abcdef&#x60;. 
        /// </summary>
        /// <value>Unique identifier for the session that looks like &#x60;sess_1234567890abcdef&#x60;. </value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string? Id { get; set; }

        /// <summary>
        /// Gets or Sets Modalities
        /// </summary>
        [DataMember(Name="modalities", EmitDefaultValue=true)]
        public Object Modalities { get; set; }


        /// <summary>
        /// The Realtime model used for this session. 
        /// </summary>
        /// <value>The Realtime model used for this session. </value>
        
        public enum ModelEnum
        {
            
            /// <summary>
            /// Enum Gpt4oRealtimePreviewEnum for gpt-4o-realtime-preview
            /// </summary>
            [EnumMember(Value = "gpt-4o-realtime-preview")]
            Gpt4oRealtimePreviewEnum = 1,
            
            /// <summary>
            /// Enum Gpt4oRealtimePreview20241001Enum for gpt-4o-realtime-preview-2024-10-01
            /// </summary>
            [EnumMember(Value = "gpt-4o-realtime-preview-2024-10-01")]
            Gpt4oRealtimePreview20241001Enum = 2,
            
            /// <summary>
            /// Enum Gpt4oRealtimePreview20241217Enum for gpt-4o-realtime-preview-2024-12-17
            /// </summary>
            [EnumMember(Value = "gpt-4o-realtime-preview-2024-12-17")]
            Gpt4oRealtimePreview20241217Enum = 3,
            
            /// <summary>
            /// Enum Gpt4oRealtimePreview20250603Enum for gpt-4o-realtime-preview-2025-06-03
            /// </summary>
            [EnumMember(Value = "gpt-4o-realtime-preview-2025-06-03")]
            Gpt4oRealtimePreview20250603Enum = 4,
            
            /// <summary>
            /// Enum Gpt4oMiniRealtimePreviewEnum for gpt-4o-mini-realtime-preview
            /// </summary>
            [EnumMember(Value = "gpt-4o-mini-realtime-preview")]
            Gpt4oMiniRealtimePreviewEnum = 5,
            
            /// <summary>
            /// Enum Gpt4oMiniRealtimePreview20241217Enum for gpt-4o-mini-realtime-preview-2024-12-17
            /// </summary>
            [EnumMember(Value = "gpt-4o-mini-realtime-preview-2024-12-17")]
            Gpt4oMiniRealtimePreview20241217Enum = 6
        }

        /// <summary>
        /// The Realtime model used for this session. 
        /// </summary>
        /// <value>The Realtime model used for this session. </value>
        [DataMember(Name="model", EmitDefaultValue=true)]
        public ModelEnum Model { get; set; }

        /// <summary>
        /// The default system instructions (i.e. system message) prepended to model  calls. This field allows the client to guide the model on desired  responses. The model can be instructed on response content and format,  (e.g. \&quot;be extremely succinct\&quot;, \&quot;act friendly\&quot;, \&quot;here are examples of good  responses\&quot;) and on audio behavior (e.g. \&quot;talk quickly\&quot;, \&quot;inject emotion  into your voice\&quot;, \&quot;laugh frequently\&quot;). The instructions are not guaranteed to be followed by the model, but they provide guidance to the  model on the desired behavior.   Note that the server sets default instructions which will be used if this field is not set and are visible in the &#x60;session.created&#x60; event at the start of the session. 
        /// </summary>
        /// <value>The default system instructions (i.e. system message) prepended to model  calls. This field allows the client to guide the model on desired  responses. The model can be instructed on response content and format,  (e.g. \&quot;be extremely succinct\&quot;, \&quot;act friendly\&quot;, \&quot;here are examples of good  responses\&quot;) and on audio behavior (e.g. \&quot;talk quickly\&quot;, \&quot;inject emotion  into your voice\&quot;, \&quot;laugh frequently\&quot;). The instructions are not guaranteed to be followed by the model, but they provide guidance to the  model on the desired behavior.   Note that the server sets default instructions which will be used if this field is not set and are visible in the &#x60;session.created&#x60; event at the start of the session. </value>
        [DataMember(Name="instructions", EmitDefaultValue=false)]
        public string? Instructions { get; set; }

        /// <summary>
        /// The voice the model uses to respond. Voice cannot be changed during the session once the model has responded with audio at least once. Current voice options are &#x60;alloy&#x60;, &#x60;ash&#x60;, &#x60;ballad&#x60;, &#x60;coral&#x60;, &#x60;echo&#x60;, &#x60;sage&#x60;, &#x60;shimmer&#x60;, and &#x60;verse&#x60;. 
        /// </summary>
        /// <value>The voice the model uses to respond. Voice cannot be changed during the session once the model has responded with audio at least once. Current voice options are &#x60;alloy&#x60;, &#x60;ash&#x60;, &#x60;ballad&#x60;, &#x60;coral&#x60;, &#x60;echo&#x60;, &#x60;sage&#x60;, &#x60;shimmer&#x60;, and &#x60;verse&#x60;. </value>
        [DataMember(Name="voice", EmitDefaultValue=false)]
        public VoiceIdsShared? Voice { get; set; }


        /// <summary>
        /// The format of input audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`. For `pcm16`, input audio must be 16-bit PCM at a 24kHz sample rate,  single channel (mono), and little-endian byte order. 
        /// </summary>
        /// <value>The format of input audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`. For `pcm16`, input audio must be 16-bit PCM at a 24kHz sample rate,  single channel (mono), and little-endian byte order. </value>
        
        public enum InputAudioFormatEnum
        {
            
            /// <summary>
            /// Enum Pcm16Enum for pcm16
            /// </summary>
            [EnumMember(Value = "pcm16")]
            Pcm16Enum = 1,
            
            /// <summary>
            /// Enum G711UlawEnum for g711_ulaw
            /// </summary>
            [EnumMember(Value = "g711_ulaw")]
            G711UlawEnum = 2,
            
            /// <summary>
            /// Enum G711AlawEnum for g711_alaw
            /// </summary>
            [EnumMember(Value = "g711_alaw")]
            G711AlawEnum = 3
        }

        /// <summary>
        /// The format of input audio. Options are &#x60;pcm16&#x60;, &#x60;g711_ulaw&#x60;, or &#x60;g711_alaw&#x60;. For &#x60;pcm16&#x60;, input audio must be 16-bit PCM at a 24kHz sample rate,  single channel (mono), and little-endian byte order. 
        /// </summary>
        /// <value>The format of input audio. Options are &#x60;pcm16&#x60;, &#x60;g711_ulaw&#x60;, or &#x60;g711_alaw&#x60;. For &#x60;pcm16&#x60;, input audio must be 16-bit PCM at a 24kHz sample rate,  single channel (mono), and little-endian byte order. </value>
        [DataMember(Name="input_audio_format", EmitDefaultValue=true)]
        public InputAudioFormatEnum InputAudioFormat { get; set; } = InputAudioFormatEnum.Pcm16Enum;


        /// <summary>
        /// The format of output audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`. For `pcm16`, output audio is sampled at a rate of 24kHz. 
        /// </summary>
        /// <value>The format of output audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`. For `pcm16`, output audio is sampled at a rate of 24kHz. </value>
        
        public enum OutputAudioFormatEnum
        {
            
            /// <summary>
            /// Enum Pcm16Enum for pcm16
            /// </summary>
            [EnumMember(Value = "pcm16")]
            Pcm16Enum = 1,
            
            /// <summary>
            /// Enum G711UlawEnum for g711_ulaw
            /// </summary>
            [EnumMember(Value = "g711_ulaw")]
            G711UlawEnum = 2,
            
            /// <summary>
            /// Enum G711AlawEnum for g711_alaw
            /// </summary>
            [EnumMember(Value = "g711_alaw")]
            G711AlawEnum = 3
        }

        /// <summary>
        /// The format of output audio. Options are &#x60;pcm16&#x60;, &#x60;g711_ulaw&#x60;, or &#x60;g711_alaw&#x60;. For &#x60;pcm16&#x60;, output audio is sampled at a rate of 24kHz. 
        /// </summary>
        /// <value>The format of output audio. Options are &#x60;pcm16&#x60;, &#x60;g711_ulaw&#x60;, or &#x60;g711_alaw&#x60;. For &#x60;pcm16&#x60;, output audio is sampled at a rate of 24kHz. </value>
        [DataMember(Name="output_audio_format", EmitDefaultValue=true)]
        public OutputAudioFormatEnum OutputAudioFormat { get; set; } = OutputAudioFormatEnum.Pcm16Enum;

        /// <summary>
        /// Gets or Sets InputAudioTranscription
        /// </summary>
        [DataMember(Name="input_audio_transcription", EmitDefaultValue=false)]
        public RealtimeSessionInputAudioTranscription? InputAudioTranscription { get; set; }

        /// <summary>
        /// Gets or Sets TurnDetection
        /// </summary>
        [DataMember(Name="turn_detection", EmitDefaultValue=false)]
        public RealtimeSessionTurnDetection? TurnDetection { get; set; }

        /// <summary>
        /// Gets or Sets InputAudioNoiseReduction
        /// </summary>
        [DataMember(Name="input_audio_noise_reduction", EmitDefaultValue=false)]
        public RealtimeSessionInputAudioNoiseReduction? InputAudioNoiseReduction { get; set; }

        /// <summary>
        /// The speed of the model&#39;s spoken response. 1.0 is the default speed. 0.25 is the minimum speed. 1.5 is the maximum speed. This value can only be changed in between model turns, not while a response is in progress. 
        /// </summary>
        /// <value>The speed of the model&#39;s spoken response. 1.0 is the default speed. 0.25 is the minimum speed. 1.5 is the maximum speed. This value can only be changed in between model turns, not while a response is in progress. </value>
        [Range(0.25, 1.5)]
        [DataMember(Name="speed", EmitDefaultValue=true)]
        public decimal? Speed { get; set; } = 1M;

        /// <summary>
        /// Gets or Sets Tracing
        /// </summary>
        [DataMember(Name="tracing", EmitDefaultValue=false)]
        public TracingConfiguration? Tracing { get; set; }

        /// <summary>
        /// Tools (functions) available to the model.
        /// </summary>
        /// <value>Tools (functions) available to the model.</value>
        [DataMember(Name="tools", EmitDefaultValue=false)]
        public List<RealtimeResponseCreateParamsToolsInner> Tools { get; set; }

        /// <summary>
        /// How the model chooses tools. Options are &#x60;auto&#x60;, &#x60;none&#x60;, &#x60;required&#x60;, or  specify a function. 
        /// </summary>
        /// <value>How the model chooses tools. Options are &#x60;auto&#x60;, &#x60;none&#x60;, &#x60;required&#x60;, or  specify a function. </value>
        [DataMember(Name="tool_choice", EmitDefaultValue=false)]
        public string? ToolChoice { get; set; } = "auto";

        /// <summary>
        /// Sampling temperature for the model, limited to [0.6, 1.2]. For audio models a temperature of 0.8 is highly recommended for best performance. 
        /// </summary>
        /// <value>Sampling temperature for the model, limited to [0.6, 1.2]. For audio models a temperature of 0.8 is highly recommended for best performance. </value>
        [DataMember(Name="temperature", EmitDefaultValue=true)]
        public decimal? Temperature { get; set; } = 0.8M;

        /// <summary>
        /// Gets or Sets MaxResponseOutputTokens
        /// </summary>
        [DataMember(Name="max_response_output_tokens", EmitDefaultValue=false)]
        public RealtimeResponseCreateParamsMaxResponseOutputTokens? MaxResponseOutputTokens { get; set; }

    }
}
