/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class RealtimeSessionCreateRequestToolsInner 
    {

        /// <summary>
        /// The type of the tool, i.e. `function`.
        /// </summary>
        /// <value>The type of the tool, i.e. `function`.</value>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum FunctionEnum for function
            /// </summary>
            [EnumMember(Value = "function")]
            FunctionEnum = 1
        }

        /// <summary>
        /// The type of the tool, i.e. &#x60;function&#x60;.
        /// </summary>
        /// <value>The type of the tool, i.e. &#x60;function&#x60;.</value>
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; }

        /// <summary>
        /// The name of the function.
        /// </summary>
        /// <value>The name of the function.</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string? Name { get; set; }

        /// <summary>
        /// The description of the function, including guidance on when and how to call it, and guidance about what to tell the user when calling (if anything). 
        /// </summary>
        /// <value>The description of the function, including guidance on when and how to call it, and guidance about what to tell the user when calling (if anything). </value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string? Description { get; set; }

        /// <summary>
        /// Parameters of the function in JSON Schema.
        /// </summary>
        /// <value>Parameters of the function in JSON Schema.</value>
        [DataMember(Name="parameters", EmitDefaultValue=false)]
        public Object? Parameters { get; set; }

    }
}
