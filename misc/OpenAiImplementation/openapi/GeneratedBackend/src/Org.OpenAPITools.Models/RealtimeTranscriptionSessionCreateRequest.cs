/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Realtime transcription session object configuration.
    /// </summary>
    [DataContract]
    public partial class RealtimeTranscriptionSessionCreateRequest 
    {
        /// <summary>
        /// Gets or Sets Modalities
        /// </summary>
        [DataMember(Name="modalities", EmitDefaultValue=true)]
        public Object Modalities { get; set; }


        /// <summary>
        /// The format of input audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`. For `pcm16`, input audio must be 16-bit PCM at a 24kHz sample rate, single channel (mono), and little-endian byte order. 
        /// </summary>
        /// <value>The format of input audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`. For `pcm16`, input audio must be 16-bit PCM at a 24kHz sample rate, single channel (mono), and little-endian byte order. </value>
        
        public enum InputAudioFormatEnum
        {
            
            /// <summary>
            /// Enum Pcm16Enum for pcm16
            /// </summary>
            [EnumMember(Value = "pcm16")]
            Pcm16Enum = 1,
            
            /// <summary>
            /// Enum G711UlawEnum for g711_ulaw
            /// </summary>
            [EnumMember(Value = "g711_ulaw")]
            G711UlawEnum = 2,
            
            /// <summary>
            /// Enum G711AlawEnum for g711_alaw
            /// </summary>
            [EnumMember(Value = "g711_alaw")]
            G711AlawEnum = 3
        }

        /// <summary>
        /// The format of input audio. Options are &#x60;pcm16&#x60;, &#x60;g711_ulaw&#x60;, or &#x60;g711_alaw&#x60;. For &#x60;pcm16&#x60;, input audio must be 16-bit PCM at a 24kHz sample rate, single channel (mono), and little-endian byte order. 
        /// </summary>
        /// <value>The format of input audio. Options are &#x60;pcm16&#x60;, &#x60;g711_ulaw&#x60;, or &#x60;g711_alaw&#x60;. For &#x60;pcm16&#x60;, input audio must be 16-bit PCM at a 24kHz sample rate, single channel (mono), and little-endian byte order. </value>
        [DataMember(Name="input_audio_format", EmitDefaultValue=true)]
        public InputAudioFormatEnum InputAudioFormat { get; set; } = InputAudioFormatEnum.Pcm16Enum;

        /// <summary>
        /// Gets or Sets InputAudioTranscription
        /// </summary>
        [DataMember(Name="input_audio_transcription", EmitDefaultValue=false)]
        public RealtimeTranscriptionSessionCreateRequestInputAudioTranscription? InputAudioTranscription { get; set; }

        /// <summary>
        /// Gets or Sets TurnDetection
        /// </summary>
        [DataMember(Name="turn_detection", EmitDefaultValue=false)]
        public RealtimeTranscriptionSessionCreateRequestTurnDetection? TurnDetection { get; set; }

        /// <summary>
        /// Gets or Sets InputAudioNoiseReduction
        /// </summary>
        [DataMember(Name="input_audio_noise_reduction", EmitDefaultValue=false)]
        public RealtimeSessionInputAudioNoiseReduction? InputAudioNoiseReduction { get; set; }

        /// <summary>
        /// The set of items to include in the transcription. Current available items are: - &#x60;item.input_audio_transcription.logprobs&#x60; 
        /// </summary>
        /// <value>The set of items to include in the transcription. Current available items are: - &#x60;item.input_audio_transcription.logprobs&#x60; </value>
        [DataMember(Name="include", EmitDefaultValue=false)]
        public List<string> Include { get; set; }

        /// <summary>
        /// Gets or Sets ClientSecret
        /// </summary>
        [DataMember(Name="client_secret", EmitDefaultValue=false)]
        public RealtimeTranscriptionSessionCreateRequestClientSecret? ClientSecret { get; set; }

    }
}
