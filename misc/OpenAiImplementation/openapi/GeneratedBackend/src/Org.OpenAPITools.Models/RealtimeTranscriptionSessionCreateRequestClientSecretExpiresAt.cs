/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Configuration for the ephemeral token expiration. 
    /// </summary>
    [DataContract]
    public partial class RealtimeTranscriptionSessionCreateRequestClientSecretExpiresAt 
    {

        /// <summary>
        /// The anchor point for the ephemeral token expiration. Only `created_at` is currently supported. 
        /// </summary>
        /// <value>The anchor point for the ephemeral token expiration. Only `created_at` is currently supported. </value>
        
        public enum AnchorEnum
        {
            
            /// <summary>
            /// Enum CreatedAtEnum for created_at
            /// </summary>
            [EnumMember(Value = "created_at")]
            CreatedAtEnum = 1
        }

        /// <summary>
        /// The anchor point for the ephemeral token expiration. Only &#x60;created_at&#x60; is currently supported. 
        /// </summary>
        /// <value>The anchor point for the ephemeral token expiration. Only &#x60;created_at&#x60; is currently supported. </value>
        [DataMember(Name="anchor", EmitDefaultValue=true)]
        public AnchorEnum Anchor { get; set; } = AnchorEnum.CreatedAtEnum;

        /// <summary>
        /// The number of seconds from the anchor point to the expiration. Select a value between &#x60;10&#x60; and &#x60;7200&#x60;. 
        /// </summary>
        /// <value>The number of seconds from the anchor point to the expiration. Select a value between &#x60;10&#x60; and &#x60;7200&#x60;. </value>
        [DataMember(Name="seconds", EmitDefaultValue=true)]
        public int? Seconds { get; set; } = 600;

    }
}
