/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// A new Realtime transcription session configuration.  When a session is created on the server via REST API, the session object also contains an ephemeral key. Default TTL for keys is 10 minutes. This  property is not present when a session is updated via the WebSocket API. 
    /// </summary>
    [DataContract]
    public partial class RealtimeTranscriptionSessionCreateResponse 
    {
        /// <summary>
        /// Gets or Sets ClientSecret
        /// </summary>
        [Required]
        [DataMember(Name="client_secret", EmitDefaultValue=false)]
        public RealtimeTranscriptionSessionCreateResponseClientSecret ClientSecret { get; set; }

        /// <summary>
        /// Gets or Sets Modalities
        /// </summary>
        [DataMember(Name="modalities", EmitDefaultValue=true)]
        public Object Modalities { get; set; }

        /// <summary>
        /// The format of input audio. Options are &#x60;pcm16&#x60;, &#x60;g711_ulaw&#x60;, or &#x60;g711_alaw&#x60;. 
        /// </summary>
        /// <value>The format of input audio. Options are &#x60;pcm16&#x60;, &#x60;g711_ulaw&#x60;, or &#x60;g711_alaw&#x60;. </value>
        [DataMember(Name="input_audio_format", EmitDefaultValue=false)]
        public string? InputAudioFormat { get; set; }

        /// <summary>
        /// Gets or Sets InputAudioTranscription
        /// </summary>
        [DataMember(Name="input_audio_transcription", EmitDefaultValue=false)]
        public RealtimeTranscriptionSessionCreateResponseInputAudioTranscription? InputAudioTranscription { get; set; }

        /// <summary>
        /// Gets or Sets TurnDetection
        /// </summary>
        [DataMember(Name="turn_detection", EmitDefaultValue=false)]
        public RealtimeSessionCreateResponseTurnDetection? TurnDetection { get; set; }

    }
}
