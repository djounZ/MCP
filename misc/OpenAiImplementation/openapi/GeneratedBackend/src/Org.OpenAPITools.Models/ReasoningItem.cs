/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// A description of the chain of thought used by a reasoning model while generating a response. Be sure to include these items in your &#x60;input&#x60; to the Responses API for subsequent turns of a conversation if you are manually  [managing context](https://platform.openai.com/docs/guides/conversation-state). 
    /// </summary>
    [DataContract]
    public partial class ReasoningItem 
    {

        /// <summary>
        /// The type of the object. Always `reasoning`. 
        /// </summary>
        /// <value>The type of the object. Always `reasoning`. </value>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum ReasoningEnum for reasoning
            /// </summary>
            [EnumMember(Value = "reasoning")]
            ReasoningEnum = 1
        }

        /// <summary>
        /// The type of the object. Always &#x60;reasoning&#x60;. 
        /// </summary>
        /// <value>The type of the object. Always &#x60;reasoning&#x60;. </value>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; }

        /// <summary>
        /// The unique identifier of the reasoning content. 
        /// </summary>
        /// <value>The unique identifier of the reasoning content. </value>
        [Required]
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// The encrypted content of the reasoning item - populated when a response is generated with &#x60;reasoning.encrypted_content&#x60; in the &#x60;include&#x60; parameter. 
        /// </summary>
        /// <value>The encrypted content of the reasoning item - populated when a response is generated with &#x60;reasoning.encrypted_content&#x60; in the &#x60;include&#x60; parameter. </value>
        [DataMember(Name="encrypted_content", EmitDefaultValue=false)]
        public string? EncryptedContent { get; set; }

        /// <summary>
        /// Reasoning summary content. 
        /// </summary>
        /// <value>Reasoning summary content. </value>
        [Required]
        [DataMember(Name="summary", EmitDefaultValue=false)]
        public List<ReasoningItemSummaryInner> Summary { get; set; }

        /// <summary>
        /// Reasoning text content. 
        /// </summary>
        /// <value>Reasoning text content. </value>
        [DataMember(Name="content", EmitDefaultValue=false)]
        public List<ReasoningItemContentInner> Content { get; set; }


        /// <summary>
        /// The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API. 
        /// </summary>
        /// <value>The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API. </value>
        
        public enum StatusEnum
        {
            
            /// <summary>
            /// Enum InProgressEnum for in_progress
            /// </summary>
            [EnumMember(Value = "in_progress")]
            InProgressEnum = 1,
            
            /// <summary>
            /// Enum CompletedEnum for completed
            /// </summary>
            [EnumMember(Value = "completed")]
            CompletedEnum = 2,
            
            /// <summary>
            /// Enum IncompleteEnum for incomplete
            /// </summary>
            [EnumMember(Value = "incomplete")]
            IncompleteEnum = 3
        }

        /// <summary>
        /// The status of the item. One of &#x60;in_progress&#x60;, &#x60;completed&#x60;, or &#x60;incomplete&#x60;. Populated when items are returned via API. 
        /// </summary>
        /// <value>The status of the item. One of &#x60;in_progress&#x60;, &#x60;completed&#x60;, or &#x60;incomplete&#x60;. Populated when items are returned via API. </value>
        [DataMember(Name="status", EmitDefaultValue=true)]
        public StatusEnum Status { get; set; }

    }
}
