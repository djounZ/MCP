/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
        /// <summary>
        /// The error code for the response. 
        /// </summary>
        /// <value>The error code for the response. </value>
        
        public enum ResponseErrorCode
        {
            
            /// <summary>
            /// Enum ServerErrorEnum for server_error
            /// </summary>
            [EnumMember(Value = "server_error")]
            ServerErrorEnum = 1,
            
            /// <summary>
            /// Enum RateLimitExceededEnum for rate_limit_exceeded
            /// </summary>
            [EnumMember(Value = "rate_limit_exceeded")]
            RateLimitExceededEnum = 2,
            
            /// <summary>
            /// Enum InvalidPromptEnum for invalid_prompt
            /// </summary>
            [EnumMember(Value = "invalid_prompt")]
            InvalidPromptEnum = 3,
            
            /// <summary>
            /// Enum VectorStoreTimeoutEnum for vector_store_timeout
            /// </summary>
            [EnumMember(Value = "vector_store_timeout")]
            VectorStoreTimeoutEnum = 4,
            
            /// <summary>
            /// Enum InvalidImageEnum for invalid_image
            /// </summary>
            [EnumMember(Value = "invalid_image")]
            InvalidImageEnum = 5,
            
            /// <summary>
            /// Enum InvalidImageFormatEnum for invalid_image_format
            /// </summary>
            [EnumMember(Value = "invalid_image_format")]
            InvalidImageFormatEnum = 6,
            
            /// <summary>
            /// Enum InvalidBase64ImageEnum for invalid_base64_image
            /// </summary>
            [EnumMember(Value = "invalid_base64_image")]
            InvalidBase64ImageEnum = 7,
            
            /// <summary>
            /// Enum InvalidImageUrlEnum for invalid_image_url
            /// </summary>
            [EnumMember(Value = "invalid_image_url")]
            InvalidImageUrlEnum = 8,
            
            /// <summary>
            /// Enum ImageTooLargeEnum for image_too_large
            /// </summary>
            [EnumMember(Value = "image_too_large")]
            ImageTooLargeEnum = 9,
            
            /// <summary>
            /// Enum ImageTooSmallEnum for image_too_small
            /// </summary>
            [EnumMember(Value = "image_too_small")]
            ImageTooSmallEnum = 10,
            
            /// <summary>
            /// Enum ImageParseErrorEnum for image_parse_error
            /// </summary>
            [EnumMember(Value = "image_parse_error")]
            ImageParseErrorEnum = 11,
            
            /// <summary>
            /// Enum ImageContentPolicyViolationEnum for image_content_policy_violation
            /// </summary>
            [EnumMember(Value = "image_content_policy_violation")]
            ImageContentPolicyViolationEnum = 12,
            
            /// <summary>
            /// Enum InvalidImageModeEnum for invalid_image_mode
            /// </summary>
            [EnumMember(Value = "invalid_image_mode")]
            InvalidImageModeEnum = 13,
            
            /// <summary>
            /// Enum ImageFileTooLargeEnum for image_file_too_large
            /// </summary>
            [EnumMember(Value = "image_file_too_large")]
            ImageFileTooLargeEnum = 14,
            
            /// <summary>
            /// Enum UnsupportedImageMediaTypeEnum for unsupported_image_media_type
            /// </summary>
            [EnumMember(Value = "unsupported_image_media_type")]
            UnsupportedImageMediaTypeEnum = 15,
            
            /// <summary>
            /// Enum EmptyImageFileEnum for empty_image_file
            /// </summary>
            [EnumMember(Value = "empty_image_file")]
            EmptyImageFileEnum = 16,
            
            /// <summary>
            /// Enum FailedToDownloadImageEnum for failed_to_download_image
            /// </summary>
            [EnumMember(Value = "failed_to_download_image")]
            FailedToDownloadImageEnum = 17,
            
            /// <summary>
            /// Enum ImageFileNotFoundEnum for image_file_not_found
            /// </summary>
            [EnumMember(Value = "image_file_not_found")]
            ImageFileNotFoundEnum = 18
        }
}
