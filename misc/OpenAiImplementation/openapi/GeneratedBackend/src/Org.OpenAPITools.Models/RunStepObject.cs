/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Represents a step in execution of a run. 
    /// </summary>
    [DataContract]
    public partial class RunStepObject 
    {
        /// <summary>
        /// The identifier of the run step, which can be referenced in API endpoints.
        /// </summary>
        /// <value>The identifier of the run step, which can be referenced in API endpoints.</value>
        [Required]
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }


        /// <summary>
        /// The object type, which is always `thread.run.step`.
        /// </summary>
        /// <value>The object type, which is always `thread.run.step`.</value>
        
        public enum ObjectEnum
        {
            
            /// <summary>
            /// Enum ThreadRunStepEnum for thread.run.step
            /// </summary>
            [EnumMember(Value = "thread.run.step")]
            ThreadRunStepEnum = 1
        }

        /// <summary>
        /// The object type, which is always &#x60;thread.run.step&#x60;.
        /// </summary>
        /// <value>The object type, which is always &#x60;thread.run.step&#x60;.</value>
        [Required]
        [DataMember(Name="object", EmitDefaultValue=true)]
        public ObjectEnum Object { get; set; }

        /// <summary>
        /// The Unix timestamp (in seconds) for when the run step was created.
        /// </summary>
        /// <value>The Unix timestamp (in seconds) for when the run step was created.</value>
        [Required]
        [DataMember(Name="created_at", EmitDefaultValue=true)]
        public int CreatedAt { get; set; }

        /// <summary>
        /// The ID of the [assistant](https://platform.openai.com/docs/api-reference/assistants) associated with the run step.
        /// </summary>
        /// <value>The ID of the [assistant](https://platform.openai.com/docs/api-reference/assistants) associated with the run step.</value>
        [Required]
        [DataMember(Name="assistant_id", EmitDefaultValue=false)]
        public string AssistantId { get; set; }

        /// <summary>
        /// The ID of the [thread](https://platform.openai.com/docs/api-reference/threads) that was run.
        /// </summary>
        /// <value>The ID of the [thread](https://platform.openai.com/docs/api-reference/threads) that was run.</value>
        [Required]
        [DataMember(Name="thread_id", EmitDefaultValue=false)]
        public string ThreadId { get; set; }

        /// <summary>
        /// The ID of the [run](https://platform.openai.com/docs/api-reference/runs) that this run step is a part of.
        /// </summary>
        /// <value>The ID of the [run](https://platform.openai.com/docs/api-reference/runs) that this run step is a part of.</value>
        [Required]
        [DataMember(Name="run_id", EmitDefaultValue=false)]
        public string RunId { get; set; }


        /// <summary>
        /// The type of run step, which can be either `message_creation` or `tool_calls`.
        /// </summary>
        /// <value>The type of run step, which can be either `message_creation` or `tool_calls`.</value>
        
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum MessageCreationEnum for message_creation
            /// </summary>
            [EnumMember(Value = "message_creation")]
            MessageCreationEnum = 1,
            
            /// <summary>
            /// Enum ToolCallsEnum for tool_calls
            /// </summary>
            [EnumMember(Value = "tool_calls")]
            ToolCallsEnum = 2
        }

        /// <summary>
        /// The type of run step, which can be either &#x60;message_creation&#x60; or &#x60;tool_calls&#x60;.
        /// </summary>
        /// <value>The type of run step, which can be either &#x60;message_creation&#x60; or &#x60;tool_calls&#x60;.</value>
        [Required]
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; }


        /// <summary>
        /// The status of the run step, which can be either `in_progress`, `cancelled`, `failed`, `completed`, or `expired`.
        /// </summary>
        /// <value>The status of the run step, which can be either `in_progress`, `cancelled`, `failed`, `completed`, or `expired`.</value>
        
        public enum StatusEnum
        {
            
            /// <summary>
            /// Enum InProgressEnum for in_progress
            /// </summary>
            [EnumMember(Value = "in_progress")]
            InProgressEnum = 1,
            
            /// <summary>
            /// Enum CancelledEnum for cancelled
            /// </summary>
            [EnumMember(Value = "cancelled")]
            CancelledEnum = 2,
            
            /// <summary>
            /// Enum FailedEnum for failed
            /// </summary>
            [EnumMember(Value = "failed")]
            FailedEnum = 3,
            
            /// <summary>
            /// Enum CompletedEnum for completed
            /// </summary>
            [EnumMember(Value = "completed")]
            CompletedEnum = 4,
            
            /// <summary>
            /// Enum ExpiredEnum for expired
            /// </summary>
            [EnumMember(Value = "expired")]
            ExpiredEnum = 5
        }

        /// <summary>
        /// The status of the run step, which can be either &#x60;in_progress&#x60;, &#x60;cancelled&#x60;, &#x60;failed&#x60;, &#x60;completed&#x60;, or &#x60;expired&#x60;.
        /// </summary>
        /// <value>The status of the run step, which can be either &#x60;in_progress&#x60;, &#x60;cancelled&#x60;, &#x60;failed&#x60;, &#x60;completed&#x60;, or &#x60;expired&#x60;.</value>
        [Required]
        [DataMember(Name="status", EmitDefaultValue=true)]
        public StatusEnum Status { get; set; }

        /// <summary>
        /// Gets or Sets StepDetails
        /// </summary>
        [Required]
        [DataMember(Name="step_details", EmitDefaultValue=false)]
        public RunStepObjectStepDetails StepDetails { get; set; }

        /// <summary>
        /// Gets or Sets LastError
        /// </summary>
        [Required]
        [DataMember(Name="last_error", EmitDefaultValue=false)]
        public RunStepObjectLastError LastError { get; set; }

        /// <summary>
        /// The Unix timestamp (in seconds) for when the run step expired. A step is considered expired if the parent run is expired.
        /// </summary>
        /// <value>The Unix timestamp (in seconds) for when the run step expired. A step is considered expired if the parent run is expired.</value>
        [Required]
        [DataMember(Name="expired_at", EmitDefaultValue=true)]
        public int ExpiredAt { get; set; }

        /// <summary>
        /// The Unix timestamp (in seconds) for when the run step was cancelled.
        /// </summary>
        /// <value>The Unix timestamp (in seconds) for when the run step was cancelled.</value>
        [Required]
        [DataMember(Name="cancelled_at", EmitDefaultValue=true)]
        public int CancelledAt { get; set; }

        /// <summary>
        /// The Unix timestamp (in seconds) for when the run step failed.
        /// </summary>
        /// <value>The Unix timestamp (in seconds) for when the run step failed.</value>
        [Required]
        [DataMember(Name="failed_at", EmitDefaultValue=true)]
        public int FailedAt { get; set; }

        /// <summary>
        /// The Unix timestamp (in seconds) for when the run step completed.
        /// </summary>
        /// <value>The Unix timestamp (in seconds) for when the run step completed.</value>
        [Required]
        [DataMember(Name="completed_at", EmitDefaultValue=true)]
        public int CompletedAt { get; set; }

        /// <summary>
        /// Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard.   Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters. 
        /// </summary>
        /// <value>Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard.   Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters. </value>
        [Required]
        [DataMember(Name="metadata", EmitDefaultValue=false)]
        public Dictionary<string, string> Metadata { get; set; }

        /// <summary>
        /// Gets or Sets Usage
        /// </summary>
        [Required]
        [DataMember(Name="usage", EmitDefaultValue=false)]
        public RunStepCompletionUsage Usage { get; set; }

    }
}
