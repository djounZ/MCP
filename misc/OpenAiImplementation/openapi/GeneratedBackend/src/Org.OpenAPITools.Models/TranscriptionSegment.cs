/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class TranscriptionSegment 
    {
        /// <summary>
        /// Unique identifier of the segment.
        /// </summary>
        /// <value>Unique identifier of the segment.</value>
        [Required]
        [DataMember(Name="id", EmitDefaultValue=true)]
        public int Id { get; set; }

        /// <summary>
        /// Seek offset of the segment.
        /// </summary>
        /// <value>Seek offset of the segment.</value>
        [Required]
        [DataMember(Name="seek", EmitDefaultValue=true)]
        public int Seek { get; set; }

        /// <summary>
        /// Start time of the segment in seconds.
        /// </summary>
        /// <value>Start time of the segment in seconds.</value>
        [Required]
        [DataMember(Name="start", EmitDefaultValue=true)]
        public float Start { get; set; }

        /// <summary>
        /// End time of the segment in seconds.
        /// </summary>
        /// <value>End time of the segment in seconds.</value>
        [Required]
        [DataMember(Name="end", EmitDefaultValue=true)]
        public float End { get; set; }

        /// <summary>
        /// Text content of the segment.
        /// </summary>
        /// <value>Text content of the segment.</value>
        [Required]
        [DataMember(Name="text", EmitDefaultValue=false)]
        public string Text { get; set; }

        /// <summary>
        /// Array of token IDs for the text content.
        /// </summary>
        /// <value>Array of token IDs for the text content.</value>
        [Required]
        [DataMember(Name="tokens", EmitDefaultValue=false)]
        public List<int> Tokens { get; set; }

        /// <summary>
        /// Temperature parameter used for generating the segment.
        /// </summary>
        /// <value>Temperature parameter used for generating the segment.</value>
        [Required]
        [DataMember(Name="temperature", EmitDefaultValue=true)]
        public float Temperature { get; set; }

        /// <summary>
        /// Average logprob of the segment. If the value is lower than -1, consider the logprobs failed.
        /// </summary>
        /// <value>Average logprob of the segment. If the value is lower than -1, consider the logprobs failed.</value>
        [Required]
        [DataMember(Name="avg_logprob", EmitDefaultValue=true)]
        public float AvgLogprob { get; set; }

        /// <summary>
        /// Compression ratio of the segment. If the value is greater than 2.4, consider the compression failed.
        /// </summary>
        /// <value>Compression ratio of the segment. If the value is greater than 2.4, consider the compression failed.</value>
        [Required]
        [DataMember(Name="compression_ratio", EmitDefaultValue=true)]
        public float CompressionRatio { get; set; }

        /// <summary>
        /// Probability of no speech in the segment. If the value is higher than 1.0 and the &#x60;avg_logprob&#x60; is below -1, consider this segment silent.
        /// </summary>
        /// <value>Probability of no speech in the segment. If the value is higher than 1.0 and the &#x60;avg_logprob&#x60; is below -1, consider this segment silent.</value>
        [Required]
        [DataMember(Name="no_speech_prob", EmitDefaultValue=true)]
        public float NoSpeechProb { get; set; }

    }
}
