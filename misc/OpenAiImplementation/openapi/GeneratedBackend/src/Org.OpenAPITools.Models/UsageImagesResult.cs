/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// The aggregated images usage details of the specific time bucket.
    /// </summary>
    [DataContract]
    public partial class UsageImagesResult 
    {

        /// <summary>
        /// Gets or Sets Object
        /// </summary>
        
        public enum ObjectEnum
        {
            
            /// <summary>
            /// Enum OrganizationUsageImagesResultEnum for organization.usage.images.result
            /// </summary>
            [EnumMember(Value = "organization.usage.images.result")]
            OrganizationUsageImagesResultEnum = 1
        }

        /// <summary>
        /// Gets or Sets Object
        /// </summary>
        [Required]
        [DataMember(Name="object", EmitDefaultValue=true)]
        public ObjectEnum Object { get; set; }

        /// <summary>
        /// The number of images processed.
        /// </summary>
        /// <value>The number of images processed.</value>
        [Required]
        [DataMember(Name="images", EmitDefaultValue=true)]
        public int Images { get; set; }

        /// <summary>
        /// The count of requests made to the model.
        /// </summary>
        /// <value>The count of requests made to the model.</value>
        [Required]
        [DataMember(Name="num_model_requests", EmitDefaultValue=true)]
        public int NumModelRequests { get; set; }

        /// <summary>
        /// When &#x60;group_by&#x3D;source&#x60;, this field provides the source of the grouped usage result, possible values are &#x60;image.generation&#x60;, &#x60;image.edit&#x60;, &#x60;image.variation&#x60;.
        /// </summary>
        /// <value>When &#x60;group_by&#x3D;source&#x60;, this field provides the source of the grouped usage result, possible values are &#x60;image.generation&#x60;, &#x60;image.edit&#x60;, &#x60;image.variation&#x60;.</value>
        [DataMember(Name="source", EmitDefaultValue=false)]
        public string? Source { get; set; }

        /// <summary>
        /// When &#x60;group_by&#x3D;size&#x60;, this field provides the image size of the grouped usage result.
        /// </summary>
        /// <value>When &#x60;group_by&#x3D;size&#x60;, this field provides the image size of the grouped usage result.</value>
        [DataMember(Name="size", EmitDefaultValue=false)]
        public string? Size { get; set; }

        /// <summary>
        /// When &#x60;group_by&#x3D;project_id&#x60;, this field provides the project ID of the grouped usage result.
        /// </summary>
        /// <value>When &#x60;group_by&#x3D;project_id&#x60;, this field provides the project ID of the grouped usage result.</value>
        [DataMember(Name="project_id", EmitDefaultValue=false)]
        public string? ProjectId { get; set; }

        /// <summary>
        /// When &#x60;group_by&#x3D;user_id&#x60;, this field provides the user ID of the grouped usage result.
        /// </summary>
        /// <value>When &#x60;group_by&#x3D;user_id&#x60;, this field provides the user ID of the grouped usage result.</value>
        [DataMember(Name="user_id", EmitDefaultValue=false)]
        public string? UserId { get; set; }

        /// <summary>
        /// When &#x60;group_by&#x3D;api_key_id&#x60;, this field provides the API key ID of the grouped usage result.
        /// </summary>
        /// <value>When &#x60;group_by&#x3D;api_key_id&#x60;, this field provides the API key ID of the grouped usage result.</value>
        [DataMember(Name="api_key_id", EmitDefaultValue=false)]
        public string? ApiKeyId { get; set; }

        /// <summary>
        /// When &#x60;group_by&#x3D;model&#x60;, this field provides the model name of the grouped usage result.
        /// </summary>
        /// <value>When &#x60;group_by&#x3D;model&#x60;, this field provides the model name of the grouped usage result.</value>
        [DataMember(Name="model", EmitDefaultValue=false)]
        public string? Model { get; set; }

    }
}
