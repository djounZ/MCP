/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class VectorStoreSearchRequest 
    {
        /// <summary>
        /// Gets or Sets Query
        /// </summary>
        [Required]
        [DataMember(Name="query", EmitDefaultValue=false)]
        public VectorStoreSearchRequestQuery Query { get; set; }

        /// <summary>
        /// Whether to rewrite the natural language query for vector search.
        /// </summary>
        /// <value>Whether to rewrite the natural language query for vector search.</value>
        [DataMember(Name="rewrite_query", EmitDefaultValue=true)]
        public bool? RewriteQuery { get; set; } = false;

        /// <summary>
        /// The maximum number of results to return. This number should be between 1 and 50 inclusive.
        /// </summary>
        /// <value>The maximum number of results to return. This number should be between 1 and 50 inclusive.</value>
        [Range(1, 50)]
        [DataMember(Name="max_num_results", EmitDefaultValue=true)]
        public int? MaxNumResults { get; set; } = 10;

        /// <summary>
        /// Gets or Sets Filters
        /// </summary>
        [DataMember(Name="filters", EmitDefaultValue=false)]
        public VectorStoreSearchRequestFilters? Filters { get; set; }

        /// <summary>
        /// Gets or Sets RankingOptions
        /// </summary>
        [DataMember(Name="ranking_options", EmitDefaultValue=false)]
        public VectorStoreSearchRequestRankingOptions? RankingOptions { get; set; }

    }
}
