/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// Ranking options for search.
    /// </summary>
    [DataContract]
    public partial class VectorStoreSearchRequestRankingOptions 
    {

        /// <summary>
        /// Enable re-ranking; set to `none` to disable, which can help reduce latency.
        /// </summary>
        /// <value>Enable re-ranking; set to `none` to disable, which can help reduce latency.</value>
        
        public enum RankerEnum
        {
            
            /// <summary>
            /// Enum NoneEnum for none
            /// </summary>
            [EnumMember(Value = "none")]
            NoneEnum = 1,
            
            /// <summary>
            /// Enum AutoEnum for auto
            /// </summary>
            [EnumMember(Value = "auto")]
            AutoEnum = 2,
            
            /// <summary>
            /// Enum Default20241115Enum for default-2024-11-15
            /// </summary>
            [EnumMember(Value = "default-2024-11-15")]
            Default20241115Enum = 3
        }

        /// <summary>
        /// Enable re-ranking; set to &#x60;none&#x60; to disable, which can help reduce latency.
        /// </summary>
        /// <value>Enable re-ranking; set to &#x60;none&#x60; to disable, which can help reduce latency.</value>
        [DataMember(Name="ranker", EmitDefaultValue=true)]
        public RankerEnum Ranker { get; set; } = RankerEnum.AutoEnum;

        /// <summary>
        /// Gets or Sets ScoreThreshold
        /// </summary>
        [Range(0, 1)]
        [DataMember(Name="score_threshold", EmitDefaultValue=true)]
        public decimal? ScoreThreshold { get; set; } = 0M;

    }
}
