/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using System.Text.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class BatchApiController : ControllerBase
    { 
        /// <summary>
        /// Cancel batch
        /// </summary>
        /// <remarks>Cancels an in-progress batch. The batch will be in status &#x60;cancelling&#x60; for up to 10 minutes, before changing to &#x60;cancelled&#x60;, where it will have partial results (if any) available in the output file.</remarks>
        /// <param name="batchId">The ID of the batch to cancel.</param>
        /// <response code="200">Batch is cancelling. Returns the cancelling batch&#39;s details.</response>
        [HttpPost]
        [Route("/v1/batches/{batch_id}/cancel")]
        [Authorize]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Batch))]
        public virtual IActionResult CancelBatch([FromRoute (Name = "batch_id")][Required]string batchId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"cancelled_at\" : 2,\r\n  \"metadata\" : {\r\n    \"key\" : \"metadata\"\r\n  },\r\n  \"request_counts\" : {\r\n    \"total\" : 4,\r\n    \"completed\" : 7,\r\n    \"failed\" : 1\r\n  },\r\n  \"input_file_id\" : \"input_file_id\",\r\n  \"output_file_id\" : \"output_file_id\",\r\n  \"error_file_id\" : \"error_file_id\",\r\n  \"created_at\" : 6,\r\n  \"in_progress_at\" : 1,\r\n  \"expired_at\" : 9,\r\n  \"finalizing_at\" : 5,\r\n  \"completed_at\" : 2,\r\n  \"endpoint\" : \"endpoint\",\r\n  \"expires_at\" : 5,\r\n  \"cancelling_at\" : 3,\r\n  \"completion_window\" : \"completion_window\",\r\n  \"id\" : \"id\",\r\n  \"failed_at\" : 7,\r\n  \"errors\" : {\r\n    \"data\" : [ {\r\n      \"code\" : \"code\",\r\n      \"param\" : \"param\",\r\n      \"line\" : 0,\r\n      \"message\" : \"message\"\r\n    }, {\r\n      \"code\" : \"code\",\r\n      \"param\" : \"param\",\r\n      \"line\" : 0,\r\n      \"message\" : \"message\"\r\n    } ],\r\n    \"object\" : \"object\"\r\n  },\r\n  \"object\" : \"batch\",\r\n  \"status\" : \"validating\"\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<Batch>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create batch
        /// </summary>
        /// <remarks>Creates and executes a batch from an uploaded file of requests</remarks>
        /// <param name="createBatchRequest"></param>
        /// <response code="200">Batch created successfully.</response>
        [HttpPost]
        [Route("/v1/batches")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Batch))]
        public virtual IActionResult CreateBatch([FromBody]CreateBatchRequest createBatchRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"cancelled_at\" : 2,\r\n  \"metadata\" : {\r\n    \"key\" : \"metadata\"\r\n  },\r\n  \"request_counts\" : {\r\n    \"total\" : 4,\r\n    \"completed\" : 7,\r\n    \"failed\" : 1\r\n  },\r\n  \"input_file_id\" : \"input_file_id\",\r\n  \"output_file_id\" : \"output_file_id\",\r\n  \"error_file_id\" : \"error_file_id\",\r\n  \"created_at\" : 6,\r\n  \"in_progress_at\" : 1,\r\n  \"expired_at\" : 9,\r\n  \"finalizing_at\" : 5,\r\n  \"completed_at\" : 2,\r\n  \"endpoint\" : \"endpoint\",\r\n  \"expires_at\" : 5,\r\n  \"cancelling_at\" : 3,\r\n  \"completion_window\" : \"completion_window\",\r\n  \"id\" : \"id\",\r\n  \"failed_at\" : 7,\r\n  \"errors\" : {\r\n    \"data\" : [ {\r\n      \"code\" : \"code\",\r\n      \"param\" : \"param\",\r\n      \"line\" : 0,\r\n      \"message\" : \"message\"\r\n    }, {\r\n      \"code\" : \"code\",\r\n      \"param\" : \"param\",\r\n      \"line\" : 0,\r\n      \"message\" : \"message\"\r\n    } ],\r\n    \"object\" : \"object\"\r\n  },\r\n  \"object\" : \"batch\",\r\n  \"status\" : \"validating\"\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<Batch>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List batch
        /// </summary>
        /// <remarks>List your organization&#39;s batches.</remarks>
        /// <param name="after">A cursor for use in pagination. &#x60;after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after&#x3D;obj_foo in order to fetch the next page of the list. </param>
        /// <param name="limit">A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20. </param>
        /// <response code="200">Batch listed successfully.</response>
        [HttpGet]
        [Route("/v1/batches")]
        [Authorize]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(ListBatchesResponse))]
        public virtual IActionResult ListBatches([FromQuery (Name = "after")]string? after, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"first_id\" : \"batch_abc123\",\r\n  \"data\" : [ {\r\n    \"cancelled_at\" : 2,\r\n    \"metadata\" : {\r\n      \"key\" : \"metadata\"\r\n    },\r\n    \"request_counts\" : {\r\n      \"total\" : 4,\r\n      \"completed\" : 7,\r\n      \"failed\" : 1\r\n    },\r\n    \"input_file_id\" : \"input_file_id\",\r\n    \"output_file_id\" : \"output_file_id\",\r\n    \"error_file_id\" : \"error_file_id\",\r\n    \"created_at\" : 6,\r\n    \"in_progress_at\" : 1,\r\n    \"expired_at\" : 9,\r\n    \"finalizing_at\" : 5,\r\n    \"completed_at\" : 2,\r\n    \"endpoint\" : \"endpoint\",\r\n    \"expires_at\" : 5,\r\n    \"cancelling_at\" : 3,\r\n    \"completion_window\" : \"completion_window\",\r\n    \"id\" : \"id\",\r\n    \"failed_at\" : 7,\r\n    \"errors\" : {\r\n      \"data\" : [ {\r\n        \"code\" : \"code\",\r\n        \"param\" : \"param\",\r\n        \"line\" : 0,\r\n        \"message\" : \"message\"\r\n      }, {\r\n        \"code\" : \"code\",\r\n        \"param\" : \"param\",\r\n        \"line\" : 0,\r\n        \"message\" : \"message\"\r\n      } ],\r\n      \"object\" : \"object\"\r\n    },\r\n    \"object\" : \"batch\",\r\n    \"status\" : \"validating\"\r\n  }, {\r\n    \"cancelled_at\" : 2,\r\n    \"metadata\" : {\r\n      \"key\" : \"metadata\"\r\n    },\r\n    \"request_counts\" : {\r\n      \"total\" : 4,\r\n      \"completed\" : 7,\r\n      \"failed\" : 1\r\n    },\r\n    \"input_file_id\" : \"input_file_id\",\r\n    \"output_file_id\" : \"output_file_id\",\r\n    \"error_file_id\" : \"error_file_id\",\r\n    \"created_at\" : 6,\r\n    \"in_progress_at\" : 1,\r\n    \"expired_at\" : 9,\r\n    \"finalizing_at\" : 5,\r\n    \"completed_at\" : 2,\r\n    \"endpoint\" : \"endpoint\",\r\n    \"expires_at\" : 5,\r\n    \"cancelling_at\" : 3,\r\n    \"completion_window\" : \"completion_window\",\r\n    \"id\" : \"id\",\r\n    \"failed_at\" : 7,\r\n    \"errors\" : {\r\n      \"data\" : [ {\r\n        \"code\" : \"code\",\r\n        \"param\" : \"param\",\r\n        \"line\" : 0,\r\n        \"message\" : \"message\"\r\n      }, {\r\n        \"code\" : \"code\",\r\n        \"param\" : \"param\",\r\n        \"line\" : 0,\r\n        \"message\" : \"message\"\r\n      } ],\r\n      \"object\" : \"object\"\r\n    },\r\n    \"object\" : \"batch\",\r\n    \"status\" : \"validating\"\r\n  } ],\r\n  \"last_id\" : \"batch_abc456\",\r\n  \"has_more\" : true,\r\n  \"object\" : \"list\"\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<ListBatchesResponse>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Retrieve batch
        /// </summary>
        /// <remarks>Retrieves a batch.</remarks>
        /// <param name="batchId">The ID of the batch to retrieve.</param>
        /// <response code="200">Batch retrieved successfully.</response>
        [HttpGet]
        [Route("/v1/batches/{batch_id}")]
        [Authorize]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Batch))]
        public virtual IActionResult RetrieveBatch([FromRoute (Name = "batch_id")][Required]string batchId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"cancelled_at\" : 2,\r\n  \"metadata\" : {\r\n    \"key\" : \"metadata\"\r\n  },\r\n  \"request_counts\" : {\r\n    \"total\" : 4,\r\n    \"completed\" : 7,\r\n    \"failed\" : 1\r\n  },\r\n  \"input_file_id\" : \"input_file_id\",\r\n  \"output_file_id\" : \"output_file_id\",\r\n  \"error_file_id\" : \"error_file_id\",\r\n  \"created_at\" : 6,\r\n  \"in_progress_at\" : 1,\r\n  \"expired_at\" : 9,\r\n  \"finalizing_at\" : 5,\r\n  \"completed_at\" : 2,\r\n  \"endpoint\" : \"endpoint\",\r\n  \"expires_at\" : 5,\r\n  \"cancelling_at\" : 3,\r\n  \"completion_window\" : \"completion_window\",\r\n  \"id\" : \"id\",\r\n  \"failed_at\" : 7,\r\n  \"errors\" : {\r\n    \"data\" : [ {\r\n      \"code\" : \"code\",\r\n      \"param\" : \"param\",\r\n      \"line\" : 0,\r\n      \"message\" : \"message\"\r\n    }, {\r\n      \"code\" : \"code\",\r\n      \"param\" : \"param\",\r\n      \"line\" : 0,\r\n      \"message\" : \"message\"\r\n    } ],\r\n    \"object\" : \"object\"\r\n  },\r\n  \"object\" : \"batch\",\r\n  \"status\" : \"validating\"\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<Batch>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
