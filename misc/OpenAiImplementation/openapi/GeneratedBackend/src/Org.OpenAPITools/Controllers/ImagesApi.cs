/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using System.Text.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ImagesApiController : ControllerBase
    { 
        /// <summary>
        /// Create image
        /// </summary>
        /// <remarks>Creates an image given a prompt. [Learn more](https://platform.openai.com/docs/guides/images). </remarks>
        /// <param name="createImageRequest"></param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("/v1/images/generations")]
        [Authorize]
        [Consumes("application/json")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(ImagesResponse))]
        public virtual IActionResult CreateImage([FromBody]CreateImageRequest createImageRequest)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"data\" : [ {\r\n    \"revised_prompt\" : \"revised_prompt\",\r\n    \"b64_json\" : \"b64_json\",\r\n    \"url\" : \"url\"\r\n  }, {\r\n    \"revised_prompt\" : \"revised_prompt\",\r\n    \"b64_json\" : \"b64_json\",\r\n    \"url\" : \"url\"\r\n  } ],\r\n  \"output_format\" : \"png\",\r\n  \"size\" : \"1024x1024\",\r\n  \"created\" : 0,\r\n  \"background\" : \"transparent\",\r\n  \"usage\" : {\r\n    \"input_tokens_details\" : {\r\n      \"text_tokens\" : 5,\r\n      \"image_tokens\" : 2\r\n    },\r\n    \"total_tokens\" : 1,\r\n    \"output_tokens\" : 5,\r\n    \"input_tokens\" : 6\r\n  },\r\n  \"quality\" : \"low\"\r\n}";
            exampleJson = "Custom MIME type example not yet supported: text/event-stream";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<ImagesResponse>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create image edit
        /// </summary>
        /// <remarks>Creates an edited or extended image given one or more source images and a prompt. This endpoint only supports &#x60;gpt-image-1&#x60; and &#x60;dall-e-2&#x60;.</remarks>
        /// <param name="image"></param>
        /// <param name="prompt">A text description of the desired image(s). The maximum length is 1000 characters for &#x60;dall-e-2&#x60;, and 32000 characters for &#x60;gpt-image-1&#x60;.</param>
        /// <param name="mask">An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where &#x60;image&#x60; should be edited. If there are multiple images provided, the mask will be applied on the first image. Must be a valid PNG file, less than 4MB, and have the same dimensions as &#x60;image&#x60;.</param>
        /// <param name="background">Allows to set transparency for the background of the generated image(s).  This parameter is only supported for &#x60;gpt-image-1&#x60;. Must be one of  &#x60;transparent&#x60;, &#x60;opaque&#x60; or &#x60;auto&#x60; (default value). When &#x60;auto&#x60; is used, the  model will automatically determine the best background for the image.  If &#x60;transparent&#x60;, the output format needs to support transparency, so it  should be set to either &#x60;png&#x60; (default value) or &#x60;webp&#x60;. </param>
        /// <param name="model"></param>
        /// <param name="n">The number of images to generate. Must be between 1 and 10.</param>
        /// <param name="size">The size of the generated images. Must be one of &#x60;1024x1024&#x60;, &#x60;1536x1024&#x60; (landscape), &#x60;1024x1536&#x60; (portrait), or &#x60;auto&#x60; (default value) for &#x60;gpt-image-1&#x60;, and one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60; for &#x60;dall-e-2&#x60;.</param>
        /// <param name="responseFormat">The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;. URLs are only valid for 60 minutes after the image has been generated. This parameter is only supported for &#x60;dall-e-2&#x60;, as &#x60;gpt-image-1&#x60; will always return base64-encoded images.</param>
        /// <param name="outputFormat">The format in which the generated images are returned. This parameter is only supported for &#x60;gpt-image-1&#x60;. Must be one of &#x60;png&#x60;, &#x60;jpeg&#x60;, or &#x60;webp&#x60;. The default value is &#x60;png&#x60;. </param>
        /// <param name="outputCompression">The compression level (0-100%) for the generated images. This parameter  is only supported for &#x60;gpt-image-1&#x60; with the &#x60;webp&#x60; or &#x60;jpeg&#x60; output  formats, and defaults to 100. </param>
        /// <param name="user">A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](https://platform.openai.com/docs/guides/safety-best-practices#end-user-ids). </param>
        /// <param name="inputFidelity"></param>
        /// <param name="stream">Edit the image in streaming mode. Defaults to &#x60;false&#x60;. See the  [Image generation guide](https://platform.openai.com/docs/guides/image-generation) for more information. </param>
        /// <param name="partialImages">The number of partial images to generate. This parameter is used for streaming responses that return partial images. Value must be between 0 and 3. When set to 0, the response will be a single image sent in one streaming event.  Note that the final image may be sent before the full number of partial images  are generated if the full image is generated more quickly. </param>
        /// <param name="quality">The quality of the image that will be generated. &#x60;high&#x60;, &#x60;medium&#x60; and &#x60;low&#x60; are only supported for &#x60;gpt-image-1&#x60;. &#x60;dall-e-2&#x60; only supports &#x60;standard&#x60; quality. Defaults to &#x60;auto&#x60;. </param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("/v1/images/edits")]
        [Authorize]
        [Consumes("multipart/form-data")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(ImagesResponse))]
        public virtual IActionResult CreateImageEdit([FromForm][Required()]CreateImageEditRequestImage image, [FromForm (Name = "prompt")][Required()]string prompt, IFormFile mask, [FromForm (Name = "background")]string? background, [FromForm]CreateImageEditRequestModel? model, [FromForm (Name = "n")][Range(1, 10)]int? n, [FromForm (Name = "size")]string? size, [FromForm (Name = "response_format")]string? responseFormat, [FromForm (Name = "output_format")]string? outputFormat, [FromForm (Name = "output_compression")]int? outputCompression, [FromForm (Name = "user")]string? user, [FromForm (Name = "input_fidelity")]ImageInputFidelity? inputFidelity, [FromForm (Name = "stream")]bool? stream, [FromForm (Name = "partial_images")][Range(0, 3)]int? partialImages, [FromForm (Name = "quality")]string? quality)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"data\" : [ {\r\n    \"revised_prompt\" : \"revised_prompt\",\r\n    \"b64_json\" : \"b64_json\",\r\n    \"url\" : \"url\"\r\n  }, {\r\n    \"revised_prompt\" : \"revised_prompt\",\r\n    \"b64_json\" : \"b64_json\",\r\n    \"url\" : \"url\"\r\n  } ],\r\n  \"output_format\" : \"png\",\r\n  \"size\" : \"1024x1024\",\r\n  \"created\" : 0,\r\n  \"background\" : \"transparent\",\r\n  \"usage\" : {\r\n    \"input_tokens_details\" : {\r\n      \"text_tokens\" : 5,\r\n      \"image_tokens\" : 2\r\n    },\r\n    \"total_tokens\" : 1,\r\n    \"output_tokens\" : 5,\r\n    \"input_tokens\" : 6\r\n  },\r\n  \"quality\" : \"low\"\r\n}";
            exampleJson = "Custom MIME type example not yet supported: text/event-stream";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<ImagesResponse>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create image variation
        /// </summary>
        /// <remarks>Creates a variation of a given image. This endpoint only supports &#x60;dall-e-2&#x60;.</remarks>
        /// <param name="image">The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square.</param>
        /// <param name="model"></param>
        /// <param name="n">The number of images to generate. Must be between 1 and 10.</param>
        /// <param name="responseFormat">The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;. URLs are only valid for 60 minutes after the image has been generated.</param>
        /// <param name="size">The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.</param>
        /// <param name="user">A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](https://platform.openai.com/docs/guides/safety-best-practices#end-user-ids). </param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("/v1/images/variations")]
        [Authorize]
        [Consumes("multipart/form-data")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(ImagesResponse))]
        public virtual IActionResult CreateImageVariation([Required()]IFormFile image, [FromForm]CreateImageVariationRequestModel? model, [FromForm (Name = "n")][Range(1, 10)]int? n, [FromForm (Name = "response_format")]string? responseFormat, [FromForm (Name = "size")]string? size, [FromForm (Name = "user")]string? user)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"data\" : [ {\r\n    \"revised_prompt\" : \"revised_prompt\",\r\n    \"b64_json\" : \"b64_json\",\r\n    \"url\" : \"url\"\r\n  }, {\r\n    \"revised_prompt\" : \"revised_prompt\",\r\n    \"b64_json\" : \"b64_json\",\r\n    \"url\" : \"url\"\r\n  } ],\r\n  \"output_format\" : \"png\",\r\n  \"size\" : \"1024x1024\",\r\n  \"created\" : 0,\r\n  \"background\" : \"transparent\",\r\n  \"usage\" : {\r\n    \"input_tokens_details\" : {\r\n      \"text_tokens\" : 5,\r\n      \"image_tokens\" : 2\r\n    },\r\n    \"total_tokens\" : 1,\r\n    \"output_tokens\" : 5,\r\n    \"input_tokens\" : 6\r\n  },\r\n  \"quality\" : \"low\"\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<ImagesResponse>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
