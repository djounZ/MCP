/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using System.Text.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ModelsApiController : ControllerBase
    { 
        /// <summary>
        /// Delete a fine-tuned model
        /// </summary>
        /// <remarks>Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.</remarks>
        /// <param name="model">The model to delete</param>
        /// <response code="200">OK</response>
        [HttpDelete]
        [Route("/v1/models/{model}")]
        [Authorize]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(DeleteModelResponse))]
        public virtual IActionResult DeleteModel([FromRoute (Name = "model")][Required]string model)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"deleted\" : true,\r\n  \"id\" : \"id\",\r\n  \"object\" : \"object\"\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<DeleteModelResponse>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// List models
        /// </summary>
        /// <remarks>Lists the currently available models, and provides basic information about each one such as the owner and availability.</remarks>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/v1/models")]
        [Authorize]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(ListModelsResponse))]
        public virtual IActionResult ListModels()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"data\" : [ {\r\n    \"created\" : 0,\r\n    \"owned_by\" : \"owned_by\",\r\n    \"id\" : \"id\",\r\n    \"object\" : \"model\"\r\n  }, {\r\n    \"created\" : 0,\r\n    \"owned_by\" : \"owned_by\",\r\n    \"id\" : \"id\",\r\n    \"object\" : \"model\"\r\n  } ],\r\n  \"object\" : \"list\"\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<ListModelsResponse>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Retrieve model
        /// </summary>
        /// <remarks>Retrieves a model instance, providing basic information about the model such as the owner and permissioning.</remarks>
        /// <param name="model">The ID of the model to use for this request</param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/v1/models/{model}")]
        [Authorize]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(Model))]
        public virtual IActionResult RetrieveModel([FromRoute (Name = "model")][Required]string model)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            string exampleJson = null;
            exampleJson = "{\r\n  \"created\" : 0,\r\n  \"owned_by\" : \"owned_by\",\r\n  \"id\" : \"id\",\r\n  \"object\" : \"model\"\r\n}";
            
            var example = exampleJson != null
            ? JsonSerializer.Deserialize<Model>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
