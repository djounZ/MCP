{
  "openapi": "3.0.1",
  "info": {
    "title": "MCP.WebApi | v1",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5200/"
    }
  ],
  "paths": {
    "/api/auth/login": {
      "post": {
        "tags": [
          "MCP.WebApi"
        ],
        "summary": "User login endpoint",
        "description": "Authenticates user and returns JWT token",
        "operationId": "Login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/validate": {
      "get": {
        "tags": [
          "MCP.WebApi"
        ],
        "summary": "Validate current JWT token",
        "description": "Returns information about the current authenticated user",
        "operationId": "ValidateToken",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": [
          "MCP.WebApi"
        ],
        "summary": "Refresh JWT token",
        "description": "Issues a new JWT token for the authenticated user",
        "operationId": "RefreshToken",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "tags": [
          "MCP.WebApi"
        ],
        "summary": "Basic health check endpoint",
        "description": "Returns basic health status information (public endpoint)",
        "operationId": "GetHealth",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/health/detailed": {
      "get": {
        "tags": [
          "MCP.WebApi"
        ],
        "summary": "Detailed health check with dependency status",
        "description": "Returns detailed health information (requires authentication)",
        "operationId": "GetDetailedHealth",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/health/admin": {
      "get": {
        "tags": [
          "MCP.WebApi"
        ],
        "summary": "Admin-only detailed system metrics",
        "description": "Returns detailed system metrics (admin only)",
        "operationId": "GetAdminHealth",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/weatherforecast": {
      "get": {
        "tags": [
          "MCP.WebApi"
        ],
        "summary": "Get weather forecast",
        "description": "Returns a 5-day weather forecast",
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/providers": {
      "get": {
        "tags": [
          "ChatCompletion"
        ],
        "summary": "Get list of available providers",
        "description": "Return all available providers",
        "operationId": "GetAvailableProviders",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AiProviderAppModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/completions": {
      "post": {
        "tags": [
          "ChatCompletion"
        ],
        "summary": "Create a chat completion",
        "description": "Creates a non-streaming chat completion",
        "operationId": "CreateChatCompletion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponseAppModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/completions/stream": {
      "post": {
        "tags": [
          "ChatCompletion"
        ],
        "summary": "Create a chat completion",
        "description": "Creates a streaming chat completion",
        "operationId": "CreateStreamingChatCompletion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChatResponseUpdateAppModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/chat": {
      "post": {
        "tags": [
          "ChatCompletion"
        ],
        "summary": "Simple chat endpoint",
        "description": "Send a simple message and get a non-streaming response from GitHub Copilot",
        "operationId": "SimpleChat",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleChatRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponseAppModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/stream": {
      "post": {
        "tags": [
          "ChatCompletion"
        ],
        "summary": "Simple streaming chat endpoint",
        "description": "Send a simple message and get a streaming response from GitHub Copilot",
        "operationId": "SimpleChatStream",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleChatRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChatResponseUpdateAppModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/mcp_tools/descriptions": {
      "get": {
        "tags": [
          "MCP Tools"
        ],
        "summary": "Get description of MCP tools",
        "description": "Return all available MCP tools descriptions",
        "operationId": "GetMcpToolDescriptions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/McpClientToolDescription"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mcp-servers": {
      "get": {
        "tags": [
          "McpServerConfiguration"
        ],
        "summary": "Get all MCP servers",
        "description": "Returns all MCP server configuration items",
        "operationId": "GetAllMcpServers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/McpServerConfigurationItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mcp-servers/{serverName}": {
      "get": {
        "tags": [
          "McpServerConfiguration"
        ],
        "summary": "Get MCP server by name",
        "description": "Returns a single MCP server configuration item by name",
        "operationId": "GetMcpServerByName",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/McpServerConfigurationItem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "McpServerConfiguration"
        ],
        "summary": "Create MCP server",
        "description": "Creates a new MCP server configuration item",
        "operationId": "CreateMcpServer",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/McpServerConfigurationItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/McpServerConfigurationItem"
                }
              }
            }
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "put": {
        "tags": [
          "McpServerConfiguration"
        ],
        "summary": "Update MCP server",
        "description": "Updates an existing MCP server configuration item",
        "operationId": "UpdateMcpServer",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/McpServerConfigurationItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/McpServerConfigurationItem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "McpServerConfiguration"
        ],
        "summary": "Delete MCP server",
        "description": "Deletes an MCP server configuration item",
        "operationId": "DeleteMcpServer",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mcp-client-descriptions": {
      "get": {
        "tags": [
          "McpClientDescription"
        ],
        "summary": "Get all MCP client descriptions",
        "description": "Returns all MCP client descriptions for all configured servers",
        "operationId": "GetAllMcpClientDescriptions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/McpClientDescription"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AiContentAppModel": {
        "required": [
          "$type"
        ],
        "type": "object",
        "anyOf": [
          {
            "$ref": "#/components/schemas/AiContentAppModelDataContentAppModel"
          },
          {
            "$ref": "#/components/schemas/AiContentAppModelErrorContentAppModel"
          },
          {
            "$ref": "#/components/schemas/AiContentAppModelFunctionCallContentAppModel"
          },
          {
            "$ref": "#/components/schemas/AiContentAppModelFunctionResultContentAppModel"
          },
          {
            "$ref": "#/components/schemas/AiContentAppModelTextContentAppModel"
          },
          {
            "$ref": "#/components/schemas/AiContentAppModelTextReasoningContentAppModel"
          },
          {
            "$ref": "#/components/schemas/AiContentAppModelUriContentAppModel"
          },
          {
            "$ref": "#/components/schemas/AiContentAppModelUsageContentAppModel"
          }
        ],
        "discriminator": {
          "propertyName": "$type",
          "mapping": {
            "data": "#/components/schemas/AiContentAppModelDataContentAppModel",
            "error": "#/components/schemas/AiContentAppModelErrorContentAppModel",
            "function_call": "#/components/schemas/AiContentAppModelFunctionCallContentAppModel",
            "function_result": "#/components/schemas/AiContentAppModelFunctionResultContentAppModel",
            "text": "#/components/schemas/AiContentAppModelTextContentAppModel",
            "reasoning": "#/components/schemas/AiContentAppModelTextReasoningContentAppModel",
            "uri": "#/components/schemas/AiContentAppModelUriContentAppModel",
            "usage": "#/components/schemas/AiContentAppModelUsageContentAppModel"
          }
        }
      },
      "AiContentAppModelDataContentAppModel": {
        "required": [
          "uri",
          "media_type",
          "name",
          "annotations"
        ],
        "properties": {
          "$type": {
            "enum": [
              "data"
            ],
            "type": "string"
          },
          "uri": {
            "type": "string",
            "format": "uri"
          },
          "media_type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "annotations": {
            "type": "array",
            "items": {
              "required": [
                "$type"
              ],
              "type": "object",
              "anyOf": [
                {
                  "required": [
                    "title",
                    "url",
                    "file_id",
                    "tool_name",
                    "snippet",
                    "annotated_regions"
                  ],
                  "properties": {
                    "$type": {
                      "enum": [
                        "citation"
                      ],
                      "type": "string"
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "file_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "tool_name": {
                      "type": "string",
                      "nullable": true
                    },
                    "snippet": {
                      "type": "string",
                      "nullable": true
                    },
                    "annotated_regions": {
                      "type": "array",
                      "items": {
                        "required": [
                          "$type"
                        ],
                        "type": "object",
                        "anyOf": [
                          {
                            "required": [
                              "start",
                              "end"
                            ],
                            "properties": {
                              "$type": {
                                "enum": [
                                  "textSpan"
                                ],
                                "type": "string"
                              },
                              "start": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "end": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          }
                        ],
                        "discriminator": {
                          "propertyName": "$type",
                          "mapping": {
                            "textSpan": "#/components/schemas/AnnotatedRegionAppModelTextSpanAnnotatedRegionAppModel"
                          }
                        }
                      },
                      "nullable": true
                    }
                  }
                }
              ],
              "discriminator": {
                "propertyName": "$type",
                "mapping": {
                  "citation": "#/components/schemas/AiAnnotationAppModelCitationAnnotationAppModel"
                }
              }
            },
            "nullable": true
          }
        }
      },
      "AiContentAppModelErrorContentAppModel": {
        "required": [
          "message",
          "annotations"
        ],
        "properties": {
          "$type": {
            "enum": [
              "error"
            ],
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "annotations": {
            "type": "array",
            "items": {
              "discriminator": {
                "propertyName": "$type",
                "mapping": {
                  "citation": "#/components/schemas/AiAnnotationAppModelCitationAnnotationAppModel"
                }
              }
            },
            "nullable": true
          }
        }
      },
      "AiContentAppModelFunctionCallContentAppModel": {
        "required": [
          "call_id",
          "name",
          "arguments",
          "annotations"
        ],
        "properties": {
          "$type": {
            "enum": [
              "function_call"
            ],
            "type": "string"
          },
          "call_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "arguments": {
            "type": "object",
            "nullable": true
          },
          "annotations": {
            "type": "array",
            "items": {
              "discriminator": {
                "propertyName": "$type",
                "mapping": {
                  "citation": "#/components/schemas/AiAnnotationAppModelCitationAnnotationAppModel"
                }
              }
            },
            "nullable": true
          }
        }
      },
      "AiContentAppModelFunctionResultContentAppModel": {
        "required": [
          "call_id",
          "result",
          "annotations"
        ],
        "properties": {
          "$type": {
            "enum": [
              "function_result"
            ],
            "type": "string"
          },
          "call_id": {
            "type": "string"
          },
          "result": { },
          "annotations": {
            "type": "array",
            "items": {
              "discriminator": {
                "propertyName": "$type",
                "mapping": {
                  "citation": "#/components/schemas/AiAnnotationAppModelCitationAnnotationAppModel"
                }
              }
            },
            "nullable": true
          }
        }
      },
      "AiContentAppModelTextContentAppModel": {
        "required": [
          "text",
          "annotations"
        ],
        "properties": {
          "$type": {
            "enum": [
              "text"
            ],
            "type": "string"
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "annotations": {
            "type": "array",
            "items": {
              "discriminator": {
                "propertyName": "$type",
                "mapping": {
                  "citation": "#/components/schemas/AiAnnotationAppModelCitationAnnotationAppModel"
                }
              }
            },
            "nullable": true
          }
        }
      },
      "AiContentAppModelTextReasoningContentAppModel": {
        "required": [
          "text",
          "annotations"
        ],
        "properties": {
          "$type": {
            "enum": [
              "reasoning"
            ],
            "type": "string"
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "annotations": {
            "type": "array",
            "items": {
              "discriminator": {
                "propertyName": "$type",
                "mapping": {
                  "citation": "#/components/schemas/AiAnnotationAppModelCitationAnnotationAppModel"
                }
              }
            },
            "nullable": true
          }
        }
      },
      "AiContentAppModelUriContentAppModel": {
        "required": [
          "uri",
          "media_type",
          "annotations"
        ],
        "properties": {
          "$type": {
            "enum": [
              "uri"
            ],
            "type": "string"
          },
          "uri": {
            "type": "string",
            "format": "uri"
          },
          "media_type": {
            "type": "string"
          },
          "annotations": {
            "type": "array",
            "items": {
              "discriminator": {
                "propertyName": "$type",
                "mapping": {
                  "citation": "#/components/schemas/AiAnnotationAppModelCitationAnnotationAppModel"
                }
              }
            },
            "nullable": true
          }
        }
      },
      "AiContentAppModelUsageContentAppModel": {
        "required": [
          "details",
          "annotations"
        ],
        "properties": {
          "$type": {
            "enum": [
              "usage"
            ],
            "type": "string"
          },
          "details": {
            "required": [
              "input_token_count",
              "output_token_count",
              "total_token_count",
              "additional_counts"
            ],
            "type": "object",
            "properties": {
              "input_token_count": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "output_token_count": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "total_token_count": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "additional_counts": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer",
                  "format": "int64"
                },
                "nullable": true
              }
            }
          },
          "annotations": {
            "type": "array",
            "items": {
              "discriminator": {
                "propertyName": "$type",
                "mapping": {
                  "citation": "#/components/schemas/AiAnnotationAppModelCitationAnnotationAppModel"
                }
              }
            },
            "nullable": true
          }
        }
      },
      "AiProviderAiModelAppModel": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "AiProviderAppModel": {
        "required": [
          "name",
          "models"
        ],
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/AiProviderEnum"
          },
          "models": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AiProviderAiModelAppModel"
            }
          }
        }
      },
      "AiProviderEnum": {
        "enum": [
          "github_copilot",
          "ollama"
        ]
      },
      "AiToolAppModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "ChatMessageAppModel": {
        "required": [
          "role",
          "contents"
        ],
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/ChatRoleEnumAppModel"
          },
          "contents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AiContentAppModel"
            }
          }
        }
      },
      "ChatOptionsAppModel": {
        "required": [
          "conversation_id",
          "instructions",
          "temperature",
          "maxOutputTokens",
          "top_p",
          "top_k",
          "frequency_penalty",
          "presence_penalty",
          "seed",
          "response_format",
          "model_id",
          "stop_sequences",
          "allow_multiple_tool_calls",
          "tool_mode",
          "tools"
        ],
        "type": "object",
        "properties": {
          "conversation_id": {
            "type": "string",
            "nullable": true
          },
          "instructions": {
            "type": "string",
            "nullable": true
          },
          "temperature": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "maxOutputTokens": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "top_p": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "top_k": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "frequency_penalty": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "presence_penalty": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "seed": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "response_format": {
            "$ref": "#/components/schemas/ChatResponseFormatAppModel"
          },
          "model_id": {
            "type": "string",
            "nullable": true
          },
          "stop_sequences": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "allow_multiple_tool_calls": {
            "type": "boolean",
            "nullable": true
          },
          "tool_mode": {
            "$ref": "#/components/schemas/ChatToolModeAppModel"
          },
          "tools": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AiToolAppModel"
              }
            },
            "nullable": true
          }
        },
        "default": null,
        "nullable": true
      },
      "ChatRequest": {
        "required": [
          "messages"
        ],
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatMessageAppModel"
            }
          },
          "provider": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "options": {
            "$ref": "#/components/schemas/ChatOptionsAppModel"
          }
        }
      },
      "ChatResponseAppModel": {
        "required": [
          "messages",
          "response_id",
          "conversation_id",
          "model_id",
          "created_at",
          "finish_reason"
        ],
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatMessageAppModel"
            }
          },
          "response_id": {
            "type": "string",
            "nullable": true
          },
          "conversation_id": {
            "type": "string",
            "nullable": true
          },
          "model_id": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "finish_reason": {
            "$ref": "#/components/schemas/NullableOfChatFinishReasonAppModel"
          }
        }
      },
      "ChatResponseFormatAppModel": {
        "required": [
          "$type"
        ],
        "type": "object",
        "anyOf": [
          {
            "$ref": "#/components/schemas/ChatResponseFormatAppModelChatResponseFormatTextAppModel"
          },
          {
            "$ref": "#/components/schemas/ChatResponseFormatAppModelChatResponseFormatJsonAppModel"
          }
        ],
        "nullable": true,
        "discriminator": {
          "propertyName": "$type",
          "mapping": {
            "text": "#/components/schemas/ChatResponseFormatAppModelChatResponseFormatTextAppModel",
            "json": "#/components/schemas/ChatResponseFormatAppModelChatResponseFormatJsonAppModel"
          }
        }
      },
      "ChatResponseFormatAppModelChatResponseFormatJsonAppModel": {
        "required": [
          "schema",
          "schema_name",
          "schema_description"
        ],
        "properties": {
          "$type": {
            "enum": [
              "json"
            ],
            "type": "string"
          },
          "schema": {
            "type": "string",
            "nullable": true
          },
          "schema_name": {
            "type": "string",
            "nullable": true
          },
          "schema_description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ChatResponseFormatAppModelChatResponseFormatTextAppModel": {
        "properties": {
          "$type": {
            "enum": [
              "text"
            ],
            "type": "string"
          }
        }
      },
      "ChatResponseUpdateAppModel": {
        "required": [
          "author_name",
          "role",
          "contents",
          "response_id",
          "message_id",
          "conversation_id",
          "created_at",
          "finish_reason",
          "model_id"
        ],
        "type": "object",
        "properties": {
          "author_name": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/NullableOfChatRoleEnumAppModel"
          },
          "contents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AiContentAppModel"
            }
          },
          "response_id": {
            "type": "string",
            "nullable": true
          },
          "message_id": {
            "type": "string",
            "nullable": true
          },
          "conversation_id": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "finish_reason": {
            "$ref": "#/components/schemas/NullableOfChatFinishReasonAppModel"
          },
          "model_id": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ChatRoleEnumAppModel": {
        "enum": [
          "system",
          "assistant",
          "user",
          "tool"
        ]
      },
      "ChatToolModeAppModel": {
        "required": [
          "$type"
        ],
        "type": "object",
        "anyOf": [
          {
            "$ref": "#/components/schemas/ChatToolModeAppModelNoneChatToolModeAppModel"
          },
          {
            "$ref": "#/components/schemas/ChatToolModeAppModelAutoChatToolModeAppModel"
          },
          {
            "$ref": "#/components/schemas/ChatToolModeAppModelRequiredChatToolModeAppModel"
          }
        ],
        "nullable": true,
        "discriminator": {
          "propertyName": "$type",
          "mapping": {
            "none": "#/components/schemas/ChatToolModeAppModelNoneChatToolModeAppModel",
            "auto": "#/components/schemas/ChatToolModeAppModelAutoChatToolModeAppModel",
            "required": "#/components/schemas/ChatToolModeAppModelRequiredChatToolModeAppModel"
          }
        }
      },
      "ChatToolModeAppModelAutoChatToolModeAppModel": {
        "properties": {
          "$type": {
            "enum": [
              "auto"
            ],
            "type": "string"
          }
        }
      },
      "ChatToolModeAppModelNoneChatToolModeAppModel": {
        "properties": {
          "$type": {
            "enum": [
              "none"
            ],
            "type": "string"
          }
        }
      },
      "ChatToolModeAppModelRequiredChatToolModeAppModel": {
        "required": [
          "required_function_name"
        ],
        "properties": {
          "$type": {
            "enum": [
              "required"
            ],
            "type": "string"
          },
          "required_function_name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "JsonElement": { },
      "LoginRequest": {
        "required": [
          "username",
          "password"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "McpClientAnnotationsDescription": {
        "required": [
          "audience",
          "priority",
          "lastModified"
        ],
        "type": "object",
        "properties": {
          "audience": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/McpClientRoleDescription"
            },
            "nullable": true
          },
          "priority": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "nullable": true
      },
      "McpClientDescription": {
        "required": [
          "tools",
          "prompts",
          "resource_templates",
          "resources"
        ],
        "type": "object",
        "properties": {
          "tools": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/McpClientToolDescription"
            }
          },
          "prompts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/McpClientPromptDescription"
            }
          },
          "resource_templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/McpClientResourceTemplateDescription"
            }
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/McpClientResourceDescription"
            }
          }
        }
      },
      "McpClientPromptArgumentDescription": {
        "required": [
          "name",
          "title",
          "description",
          "required"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "required": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "McpClientPromptDescription": {
        "required": [
          "name",
          "title",
          "description",
          "arguments",
          "_meta"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "arguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/McpClientPromptArgumentDescription"
            },
            "nullable": true
          },
          "_meta": {
            "$ref": "#/components/schemas/NullableOfJsonElement"
          }
        }
      },
      "McpClientResourceDescription": {
        "required": [
          "name",
          "title",
          "uri",
          "description",
          "mimeType",
          "annotations",
          "size",
          "_meta"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "uri": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "mimeType": {
            "type": "string",
            "nullable": true
          },
          "annotations": {
            "$ref": "#/components/schemas/McpClientAnnotationsDescription"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "_meta": {
            "$ref": "#/components/schemas/NullableOfJsonElement"
          }
        }
      },
      "McpClientResourceTemplateDescription": {
        "required": [
          "name",
          "title",
          "uriTemplate",
          "description",
          "mimeType",
          "annotations",
          "_meta"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "uriTemplate": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "mimeType": {
            "type": "string",
            "nullable": true
          },
          "annotations": {
            "$ref": "#/components/schemas/McpClientAnnotationsDescription"
          },
          "_meta": {
            "$ref": "#/components/schemas/NullableOfJsonElement"
          }
        }
      },
      "McpClientRoleDescription": {
        "enum": [
          "assistant",
          "user"
        ]
      },
      "McpClientToolDescription": {
        "required": [
          "name",
          "description",
          "input_schema",
          "output_schema"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "input_schema": {
            "$ref": "#/components/schemas/JsonElement"
          },
          "output_schema": {
            "$ref": "#/components/schemas/NullableOfJsonElement"
          }
        }
      },
      "McpServerConfigurationItem": {
        "required": [
          "category",
          "command",
          "args",
          "env",
          "url"
        ],
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "nullable": true
          },
          "command": {
            "type": "string",
            "nullable": true
          },
          "args": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "env": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/McpServerTransportType"
          }
        }
      },
      "McpServerTransportType": {
        "enum": [
          "stdio",
          "http"
        ],
        "default": "stdio"
      },
      "NullableOfChatFinishReasonAppModel": {
        "enum": [
          "stop",
          "length",
          "tool_calls",
          "content_filter",
          null
        ],
        "nullable": true
      },
      "NullableOfChatRoleEnumAppModel": {
        "enum": [
          "system",
          "assistant",
          "user",
          "tool",
          null
        ],
        "nullable": true
      },
      "NullableOfJsonElement": {
        "nullable": true
      },
      "SimpleChatRequest": {
        "required": [
          "message",
          "systemPrompt"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "systemPrompt": {
            "type": "string"
          },
          "provider": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "model": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "temperature": {
            "type": "number",
            "format": "float",
            "default": null,
            "nullable": true
          },
          "maxTokens": {
            "type": "integer",
            "format": "int32",
            "default": null,
            "nullable": true
          }
        }
      },
      "WeatherForecast": {
        "required": [
          "date",
          "temperatureC",
          "summary"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "MCP.WebApi"
    },
    {
      "name": "ChatCompletion"
    },
    {
      "name": "MCP Tools"
    },
    {
      "name": "McpServerConfiguration"
    },
    {
      "name": "McpClientDescription"
    }
  ]
}
